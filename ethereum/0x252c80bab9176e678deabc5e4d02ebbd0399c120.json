{"address":"0x252C80bAB9176E678deaBC5e4D02EBBD0399c120","name":"","metadata":{"compiler":{"version":"0.8.6+commit.11564f7e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_quantities","type":"uint256[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"batchMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"},{"internalType":"string","name":"_uri","type":"string"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"create","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"creators","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"customUri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newBaseMetadataURI","type":"string"}],"name":"setBaseMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"}],"name":"setCreator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"string","name":"_newURI","type":"string"}],"name":"setCustomURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"batchMint(address,uint256[],uint256[],bytes)":{"details":"Mint tokens for each id in _ids","params":{"_data":"Data to pass if receiver is contract","_ids":"Array of ids to mint","_quantities":"Array of amounts of tokens to mint per id","_to":"The address to mint tokens to"}},"create(address,uint256,uint256,string,bytes)":{"details":"Creates a new token type and assigns _initialSupply to an address NOTE: remove onlyOwner if you want third parties to create new tokens on       your contract (which may change your IDs) NOTE: The token id must be passed. This allows lazy creation of tokens or       creating NFTs by setting the id's high bits with the method       described in ERC1155 or to use ids representing values other than       successive small integers. If you wish to create ids as successive       small integers you can either subclass this class to count onchain       or maintain the offchain cache of identifiers recommended in       ERC1155 and calculate successive ids from that.","params":{"_data":"Data to pass if receiver is contract","_id":"The id of the token to create (must not currenty exist).","_initialOwner":"address of the first owner of the token","_initialSupply":"amount to supply the first owner","_uri":"Optional URI for this token type"},"returns":{"_0":"The newly created token ID"}},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"mint(address,uint256,uint256,bytes)":{"details":"Mints some amount of tokens to an address","params":{"_data":"Data to pass if receiver is contract","_id":"Token ID to mint","_quantity":"Amount of tokens to mint","_to":"Address of the future owner of the token"}},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"setBaseMetadataURI(string)":{"details":"Will update the base URL of token's URI","params":{"_newBaseMetadataURI":"New base URL of token's URI"}},"setCreator(address,uint256[])":{"details":"Change the creator address for given tokens","params":{"_ids":"Array of Token IDs to change creator","_to":"Address of the new creator"}},"setCustomURI(uint256,string)":{"details":"Will update the base URI for the token","params":{"_newURI":"New URI for the token.","_tokenId":"The token to upddate. msg.sender must be its creator."}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Returns the total quantity for a token ID","params":{"_id":"uint256 ID of the token to query"},"returns":{"_0":"amount of token in existence"}}},"title":"Web  A self evolving registry","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"Web.sol":"Web"},"evmVersion":"berlin","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"keccak256":"0x084f583de2c714665b0304529fe8b826a2809f29d03314e4dd9eea926e4bb0f3","license":"MIT","urls":["bzz-raw://b64becd1da9fe30ecdb65cf57e1da968bcbbecd6a4a3fa55bcc7c23568d482c0","dweb:/ipfs/QmcXnRpWL7P9kEe15LZ5yHV2CDLE2CNv9sBRqVnvVQLr5T"]},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"keccak256":"0x33ba8a175bb81046a02b02e8d5eb4cabc87e1875f4a74bbc6f11c51db5e40d8c","license":"MIT","urls":["bzz-raw://61b5e6e61e0a342dafdab72b7113f735dfd1612389cda77d7edf6f263b400015","dweb:/ipfs/QmRxm43A3sSiJhnVtqYtCJfnWwLzzLd2365DNAToYHokbS"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1","license":"MIT","urls":["bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163","dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"]},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"keccak256":"0x09c24182fc76ee97a5c604b6ff1a8afb3648535b6ba1820c23b243a40cc792a0","license":"MIT","urls":["bzz-raw://b8e9e0df6f208de6686e4a25850e5d1ebb5c57c2cba4220f924602455e390384","dweb:/ipfs/QmZPxANB5regShavJEo8XtstXnHPxtbPucwbaJtzKFGDLh"]},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"keccak256":"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec","license":"MIT","urls":["bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe","dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ"]},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"keccak256":"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa","license":"MIT","urls":["bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873","dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU"]},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"keccak256":"0xedf8db444aa542739a0aabe8243a4e8100003aacba9783637a75f16bb556ab44","license":"MIT","urls":["bzz-raw://6b3f242e6ec10ddbd8bf810a92335e827aa4e071521abe0122e563436d6722ae","dweb:/ipfs/QmdN3gQ5dwjveFwX5EBdUbQhdiiiJ8r7SwMWGb9oQ6MrJs"]},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"keccak256":"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975","license":"MIT","urls":["bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669","dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22","license":"MIT","urls":["bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d","dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a","license":"MIT","urls":["bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14","dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"]},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2","license":"MIT","urls":["bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013","dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY"]},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d","license":"MIT","urls":["bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd","dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c","license":"MIT","urls":["bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb","dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5","license":"MIT","urls":["bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85","dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC"]},"@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd","license":"MIT","urls":["bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0","dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc"]},"@openzeppelin/contracts/utils/Create2.sol":{"keccak256":"0x27f9465d84949f059ed37b23c82f4a9fc16c1b8d6fbd69837a0f920875e2af83","license":"MIT","urls":["bzz-raw://decb618117829151750642e6fa9f324b825841f9d68fab5143249d2ca204787b","dweb:/ipfs/QmcyPk34JPQBpJQb8dGPsd1AzimGjXTMDKZYL73rNAC6oZ"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d","license":"MIT","urls":["bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e","dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7"]},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x828774372910d18e7337bc31a288d786748af4cd9da80222467e486ed1d569ab","license":"MIT","urls":["bzz-raw://e842b3d6847ba32ca4f67c91d46ccb3996f3ff923266913e4b0bcda006e07536","dweb:/ipfs/QmWkaboTtbEz3aazAqhHfn9TLrQNQZQckNHC16jLbezMWc"]},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"keccak256":"0x86c1bbdc6813c021e138da527c44d2615931b0e5c7fa2f58369846ed288324a8","license":"MIT","urls":["bzz-raw://aeb8fb8169a5862d4d870c655a5f84b0839f19ff8704d84cd1bea37640e721ac","dweb:/ipfs/QmcBTMVMAigtB3X2mru7wctzYv8aLatFXEUdFLDZDfQtcB"]},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b","license":"MIT","urls":["bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549","dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"]},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4","license":"MIT","urls":["bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6","dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b","license":"MIT","urls":["bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6","dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N"]},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x211639753e28bdca7f98618f51dca3dcd08a88b57c45050eb05fa4d0053327c3","license":"MIT","urls":["bzz-raw://4270d35fb4493275ceba45f1cce2d6486b0886f594f0ca6434077523844ff902","dweb:/ipfs/QmWqApTqnSKhTabGCAXocAF7ovstW4divjaoM1LPYHrLqY"]},"Web.sol":{"keccak256":"0x7145611d574172ded9e47ae2689ff9a87c9ae9620595da932e63368719180010","license":"MIT","urls":["bzz-raw://726658a32c45326ae6fe40148241286c04c2c4bec677954db2428ebf253a38c9","dweb:/ipfs/QmPTAjtML4VWu83eAkoDs6Qp5dC6b976rQSESPGqC8f89L"]}},"version":1},"version":1,"checkPoints":[]}