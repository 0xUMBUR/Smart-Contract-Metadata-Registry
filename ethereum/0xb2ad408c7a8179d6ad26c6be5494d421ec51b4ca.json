{"address":"0xb2Ad408C7A8179d6ad26C6bE5494d421Ec51b4cA","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"BlacklistedAddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"BlacklistedAddressRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"addAddressToBlacklist","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addrs","type":"address[]"}],"name":"addAddressesToBlacklist","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"blacklistAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlacklist","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"removeAddressFromBlacklist","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addrs","type":"address[]"}],"name":"removeAddressesFromBlacklist","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"The Blacklist contract has a blacklist of addresses, and provides basic authorization control functions.This simplifies the implementation of \"user permissions\".","kind":"dev","methods":{"addAddressToBlacklist(address)":{"details":"Add an address to the blacklist","params":{"addr":"address"},"returns":{"success":"true if the address was added to the blacklist, false if the address was already in the blacklist"}},"addAddressesToBlacklist(address[])":{"details":"Add addresses to the blacklist","params":{"addrs":"addresses"},"returns":{"success":"true if at least one address was added to the blacklist, false if all addresses were already in the blacklist"}},"getBlacklist()":{"details":"Get all blacklist wallet addresses"},"owner()":{"details":"Returns the address of the current owner."},"removeAddressFromBlacklist(address)":{"details":"Remove an address from the blacklist","params":{"addr":"address"},"returns":{"success":"true if the address was removed from the blacklist, false if the address wasn't in the blacklist in the first place"}},"removeAddressesFromBlacklist(address[])":{"details":"Remove addresses from the blacklist","params":{"addrs":"addresses"},"returns":{"success":"true if at least one address was removed from the blacklist, false if all addresses weren't in the blacklist in the first place"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Blacklist","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"Staking.sol":"Blacklist"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"Staking.sol":{"keccak256":"0x2e16086dfe63360adb0a09e22e7084a1aa8e6f7bd37264d8ad7e3d7af7e90c58","license":"MIT","urls":["bzz-raw://9ccb7f968446c1d3a15928a1e0b1479d55f08baf035bd1e906fbaa797d2b9451","dweb:/ipfs/QmQABSbVyVHm1zRtVEFKh8ZZ6ebvEYMfX6rR2tYojtZcar"]}},"version":1},"version":1,"checkPoints":[]}