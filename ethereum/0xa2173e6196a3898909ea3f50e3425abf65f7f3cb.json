{"address":"0xa2173e6196a3898909eA3f50E3425abF65f7f3Cb","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"ammWrapperAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_transactionHash","type":"bytes32"}],"name":"getTransaction","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"increNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketMaker","type":"address"}],"name":"isValidMM","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isValidMarketMakerStorageId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonceStorageId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pmmAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_marketMaker","type":"address"},{"internalType":"bool","name":"_add","type":"bool"}],"name":"registerMM","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_storageId","type":"bytes32"},{"internalType":"address","name":"_role","type":"address"},{"internalType":"bool","name":"_enabled","type":"bool"}],"name":"setPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_transactionHash","type":"bytes32"},{"internalType":"address","name":"_user","type":"address"}],"name":"setTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transactionsStorageId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAMMWrapper","type":"address"}],"name":"upgradeAMMWrapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPMM","type":"address"}],"name":"upgradePMM","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"initialize(address)":{"details":"Replacing constructor and initialize the contract. This function should only be called once."},"upgradeAMMWrapper(address)":{"details":"Update AMMWrapper contract address. Used only when ABI of AMMWrapeer remain unchanged. Otherwise, UserProxy contract should be upgraded altogether."},"upgradePMM(address)":{"details":"Update PMM contract address. Used only when ABI of PMM remain unchanged. Otherwise, UserProxy contract should be upgraded altogether."}},"stateVariables":{"owner":{"details":"Below are the variables which consume storage slots."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/storage/PermanentStorage.sol":"PermanentStorage"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/interface/IPermanentStorage.sol":{"keccak256":"0xa3faf88b04a382464aa175f5e6bd90532f6678d1737689dd756f3849c70bd038","urls":["bzz-raw://5b99146916ed8790350c1bac4d61cfe5218277dcfd7048fc423d41edcade0ee2","dweb:/ipfs/QmdDhvEDbt1sf33obvsKn4ikFavQtCbzFiDnJcPeTrmDEe"]},"contracts/storage/PermanentStorage.sol":{"keccak256":"0x10e1cc5e2ea88aadce706562836326eed9e0b5e94ca5e693e339cd411a3e31ff","license":"MIT","urls":["bzz-raw://658e09c62b5b22e180856ed4aeb10ccf38cf6649d085b16d1154ec0ebc9026d4","dweb:/ipfs/QmPjjQJd2StiJyNAee6nnAPQqUxzXFwx6g2JygW44a3Nzu"]},"contracts/utils/LibStorage.sol":{"keccak256":"0x462379a2f444631268c6ec223a9c14c74dcd98d7f3a6f55fa1e30b6d16700faf","urls":["bzz-raw://541eb717d81fc2e6f93bd30fee7f38d45541a35369eab4dce24d52e2487c908f","dweb:/ipfs/Qmc6RjURnyrq8p2BJ7EuSjzpov7oQbNXw4fU3Ji8RfJZMV"]}},"version":1},"version":1,"checkPoints":[]}