{"address":"0xb1bB6F5f9597146d699C78236154b0e8fF4c2D1e","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ContractCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"customer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"ipfsHashfunction","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"ipfsHashDigestSize","type":"uint8"}],"name":"DocumentSignatureRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"customer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"ipfsHashfunction","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"ipfsHashDigestSize","type":"uint8"}],"name":"DocumentSigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"customer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"oldIpfsHashDigest","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"newIpfsHashDigest","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"newIpfsHashfunction","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"newIpfsHashDigestSize","type":"uint8"},{"indexed":false,"internalType":"bytes16","name":"encryptedSecret","type":"bytes16"}],"name":"DocumentUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"customer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"ipfsHashfunction","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"ipfsHashDigestSize","type":"uint8"},{"indexed":false,"internalType":"bool","name":"allowedToRevoke","type":"bool"},{"indexed":false,"internalType":"uint256","name":"revocationTime","type":"uint256"},{"indexed":false,"internalType":"bytes16","name":"encryptedSecret","type":"bytes16"}],"name":"NewDocumentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"}],"name":"UserCreated","type":"event"},{"inputs":[{"internalType":"address","name":"customer","type":"address"}],"name":"createCustomer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"customer","type":"address"},{"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"},{"internalType":"uint8","name":"ifpsHashFunction","type":"uint8"},{"internalType":"uint8","name":"ipfsDigestSize","type":"uint8"},{"internalType":"uint8","name":"documentType","type":"uint8"},{"internalType":"bytes16","name":"encryptedSecret","type":"bytes16"},{"internalType":"bool","name":"allowRevocation","type":"bool"},{"internalType":"uint256","name":"timeToRevoke","type":"uint256"}],"name":"createDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"customer","type":"address"}],"name":"deactivateCustomer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"}],"name":"revokeSignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"ipfsHashDigest","type":"bytes32"}],"name":"signDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"customer","type":"address"},{"internalType":"bytes32","name":"newIpfsHashDigest","type":"bytes32"},{"internalType":"uint8","name":"newIfpsHashFunction","type":"uint8"},{"internalType":"uint8","name":"newIpfsDigestSize","type":"uint8"},{"internalType":"bytes32","name":"oldIpfsHashDigest","type":"bytes32"}],"name":"updateDocument","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Leandro Rometsch","methods":{"constructor":{"details":"Set contract deployer as owner."},"createCustomer(address)":{"details":"requires non-existence of customer and function call by contract owner","params":{"customer":"PK of address, given by owner of this contract"}},"createDocument(address,bytes32,uint8,uint8,uint8,bytes16,bool,uint256)":{"details":"The three ipfs hash attributes are being stored in Multihash struct. uint8 documentType NOT being used at the moment","params":{"allowRevocation":"If true, revocation of signature is possible until revocation frame reached","customer":"This address is allowed to sign the contract","documentType":"This defines what type of document is given. Default = 0","encryptedSecret":"Secret that is necessary to decrypt this document. This secret is encrypted with the pk of the customer","ifpsHashFunction":"Hash function used for ipfs hash","ipfsDigestSize":"Length of ipfs hash Digest","ipfsHashDigest":"Hash Digest of ipfs multihash","timeToRevoke":"This defines (in seconds) how long it is possible to revoke the signature after signing the document."}},"deactivateCustomer(address)":{"details":"Customer not able to perform any actions on this contract after this","params":{"customer":"PK of address, given by owner of this contract"}},"revokeSignature(bytes32)":{"details":"caller needs to be active customer and the ipfs hash of document is linked to him/her","params":{"ipfsHashDigest":"Digits of Hash of the document used for map lookup"}},"signDocument(bytes32)":{"details":"caller needs to be active customer and the ipfs hash of document is linked to him/her","params":{"ipfsHashDigest":"Digits of Hash of the document used for map lookup"}},"updateDocument(address,bytes32,uint8,uint8,bytes32)":{"details":"this will add the new hash to the old document to create a linked list. The last element of the list is the newest version of the document","params":{"customer":"The customer the document is linked to","newIfpsHashFunction":"Hash function used for ipfs hash","newIpfsDigestSize":"Length of ipfs hash Digest","newIpfsHashDigest":"Hash Digest of ipfs multihash","oldIpfsHashDigest":"One of the earlier versions of the document. It doesnt matter which."}}},"title":"FiduciaBaseContract"},"userdoc":{"methods":{"constructor":"WARNING - if testing = true, integrity of contract violated. E.g. documents can be signed without beeing customer","createCustomer(address)":{"notice":"Creates and activates new customer assosiated with given address"},"createDocument(address,bytes32,uint8,uint8,uint8,bytes16,bool,uint256)":{"notice":"Create new document handled by this smart contract"},"deactivateCustomer(address)":{"notice":"Deactivates customer assosiated with given address"},"revokeSignature(bytes32)":{"notice":"Revoke signature of document. Revocation only possible in revocation timeframe."},"signDocument(bytes32)":{"notice":"Sign already existing document"},"updateDocument(address,bytes32,uint8,uint8,bytes32)":{"notice":"update document, e.g. for a new version."}},"notice":"This contract handles the signing process between an institution (the owner of this smart contract) and its customers"}},"settings":{"compilationTarget":{"browser/FiduciaBaseContract.sol":"FiduciaBaseContract"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/FiduciaBaseContract.sol":{"keccak256":"0xb52fa8f0bbc4f83f1967a2a684f671821cc09d6927f4746719b7f67d301813eb","urls":["bzz-raw://fd6f31ee46a8afbd04118f3859cac75f4734c23d3b637994ff1da95039452d9a","dweb:/ipfs/Qmd1pZkae4r7PAwdiJavYdZobuxKfDqUFEC4DyQ5gijzQH"]}},"version":1},"version":1,"checkPoints":[]}