{"address":"0xb3e5371d55e1e84bfFE7D0b57Bd9c6A4C6b3C635","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"DEFISAVER_LOGGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FACTORY_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGISTRY_ADDR","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes[][]","name":"callData","type":"bytes[][]"},{"internalType":"bytes[][]","name":"subData","type":"bytes[][]"},{"internalType":"bytes32[]","name":"actionIds","type":"bytes32[]"},{"internalType":"uint8[][]","name":"paramMapping","type":"uint8[][]"}],"internalType":"struct StrategyData.Task","name":"_currTask","type":"tuple"},{"internalType":"bytes32","name":"_flAmount","type":"bytes32"}],"name":"_executeActionsFromFL","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"adminVault","outputs":[{"internalType":"contract AdminVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_strategyId","type":"uint256"},{"internalType":"bytes[][]","name":"_actionCallData","type":"bytes[][]"}],"name":"executeStrategyTask","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes[][]","name":"callData","type":"bytes[][]"},{"internalType":"bytes[][]","name":"subData","type":"bytes[][]"},{"internalType":"bytes32[]","name":"actionIds","type":"bytes32[]"},{"internalType":"uint8[][]","name":"paramMapping","type":"uint8[][]"}],"internalType":"struct StrategyData.Task","name":"_currTask","type":"tuple"}],"name":"executeTask","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_contractAddr","type":"address"}],"name":"givePermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract DFSRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractAddr","type":"address"}],"name":"removePermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawStuckFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"_executeActionsFromFL((string,bytes[][],bytes[][],bytes32[],uint8[][]),bytes32)":{"details":"FL function must be the first action and repayment is done last","params":{"_currTask":"Task to be executed","_flAmount":"Result value from FL action"}},"executeStrategyTask(uint256,bytes[][])":{"params":{"_actionCallData":"All the data related to the strategies Task","_strategyId":"Id of the strategy we want to execute"}},"executeTask((string,bytes[][],bytes[][],bytes32[],uint8[][]))":{"details":"This is the main entry point for Recipes/Tasks executed manually","params":{"_currTask":"Task to be executed"}},"givePermission(address)":{"params":{"_contractAddr":"Address which will be authorized"}},"removePermission(address)":{"params":{"_contractAddr":"Auth address which will be removed from authority list"}}},"title":"Handles FL taking and executes actions","version":1},"userdoc":{"kind":"user","methods":{"_executeActionsFromFL((string,bytes[][],bytes[][],bytes32[],uint8[][]),bytes32)":{"notice":"This is the callback function that FL actions call"},"executeStrategyTask(uint256,bytes[][])":{"notice":"Called through the Strategy contract to execute a task"},"executeTask((string,bytes[][],bytes[][],bytes32[],uint8[][]))":{"notice":"Called directly through DsProxy to execute a task"},"givePermission(address)":{"notice":"Called in the context of DSProxy to authorize an address"},"kill()":{"notice":"Destroy the contract"},"removePermission(address)":{"notice":"Called in the context of DSProxy to remove authority of an address"},"withdrawStuckFunds(address,address,uint256)":{"notice":"withdraw stuck funds"}},"version":1}},"settings":{"compilationTarget":{"contracts/Petar.sol":"TaskExecutor"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/Petar.sol":{"keccak256":"0x86f73d70ca749b673d8e2856003fedcffde256ab7c304aaec68e4ee908d6cb46","license":"MIT","urls":["bzz-raw://dfeec7d67795b8b1521557b52f28d269b34e45fcc94d7fe316da6845b72c5dc8","dweb:/ipfs/QmRwE5YM4Uu7GvY7QocpZTCqyAB9zsd6wwwVgMXHRiXgwU"]}},"version":1},"version":1,"checkPoints":[]}