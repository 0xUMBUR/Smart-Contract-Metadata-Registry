{"address":"0x5eFF8414003d56af2Fb964Bd1CC0c6F767d3492e","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address","name":"pp_","type":"address"},{"internalType":"address","name":"biop_","type":"address"},{"internalType":"address","name":"rateCalc_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"address payable","name":"account","type":"address"},{"indexed":false,"internalType":"int256","name":"sPrice","type":"int256"},{"indexed":false,"internalType":"uint256","name":"lValue","type":"uint256"},{"indexed":false,"internalType":"enum BinaryOptions.OptionType","name":"dir","type":"uint8"},{"indexed":false,"internalType":"bool","name":"alt","type":"bool"}],"name":"Create","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Exercise","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Expire","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"poolLost","type":"uint256"},{"indexed":false,"internalType":"address","name":"winner","type":"address"}],"name":"Payout","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"newPool_","type":"address"}],"name":"addAltPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPP_","type":"address"},{"internalType":"address","name":"rateCalc_","type":"address"}],"name":"addPP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"altLockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum BinaryOptions.OptionType","name":"type_","type":"uint8"},{"internalType":"address","name":"pp_","type":"address"},{"internalType":"uint256","name":"time_","type":"uint256"},{"internalType":"address","name":"altPA_","type":"address"},{"internalType":"uint256","name":"altA_","type":"uint256"}],"name":"bet","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"biop","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractCreated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultPriceProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultRCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"devFundBetFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ePairs","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ePools","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"nx_","type":"bool"}],"name":"enableRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exerciserFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"expire","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"expirerFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fGS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"erc20PoolAddress_","type":"address"}],"name":"getAltMaxAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"base","type":"uint256"}],"name":"getBetSizeBonus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCombinedStakingBonus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOptionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getOptionValueBonus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getPendingClaims","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getPoolBalanceBonus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pair","type":"address"},{"internalType":"uint256","name":"max","type":"uint256"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"int256","name":"currentPrice","type":"int256"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getStakingTimeBonus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"iAL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"open","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"options","outputs":[{"internalType":"address payable","name":"holder","type":"address"},{"internalType":"int256","name":"sPrice","type":"int256"},{"internalType":"uint256","name":"pValue","type":"uint256"},{"internalType":"uint256","name":"lValue","type":"uint256"},{"internalType":"uint256","name":"exp","type":"uint256"},{"internalType":"enum BinaryOptions.OptionType","name":"dir","type":"uint8"},{"internalType":"address","name":"pP","type":"address"},{"internalType":"address","name":"altPA","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pLP","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLockSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"oldPool_","type":"address"}],"name":"removeAltPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"oldPP_","type":"address"}],"name":"removePP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewEn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMax_","type":"uint256"}],"name":"setMaxT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMin_","type":"uint256"}],"name":"setMinT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tI","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"thisAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newDevFund","type":"address"}],"name":"transferDevFund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newOwner_","type":"address"}],"name":"transferOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"devFundBetFee_","type":"uint256"}],"name":"updateDevFundBetFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"exerciserFee_","type":"uint256"}],"name":"updateExerciserFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"expirerFee_","type":"uint256"}],"name":"updateExpirerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLockSeconds_","type":"uint256"}],"name":"updatePoolLockSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"github.com/BIOPset","details":"Pool ETH Tokens and use it for optionss Biop","methods":{"addAltPool(address)":{"details":"add a pool","params":{"newPool_":"the address EBOP20 pool to add"}},"addPP(address,address)":{"details":"add or update a price provider to the ePairs list.","params":{"newPP_":"the address of the AggregatorProxy price provider contract address to add.","rateCalc_":"the address of the RateCalc to use with this trading pair."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"bet(uint8,address,uint256,address,uint256)":{"details":"Open a new call or put options.","params":{"altA_":"bet amount. only used if altPA_ != address(this)","altPA_":"address of alt pool. pass address of this contract to use ETH pool","pp_":"the address of the price provider to use (must be in the list of ePairs)","time_":"the time until your options expiration (must be minT < time_ > maxT)","type_":"type of option to buy"}},"claimRewards()":{"details":"distribute pending governance token claims to user"},"closeStaking()":{"details":"used to send this pool into EOL mode when a newer one is open"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"defaultPriceProvider()":{"details":"the default price provider. This is a convenience method"},"enableRewards(bool)":{"details":"enable or disable BIOP rewards","params":{"nx_":"the new position for the rewEn switch"}},"exercise(uint256)":{"params":{"optionID":"id of the option to exercise"}},"expire(uint256)":{"params":{"optionID":"id of the option to expire"}},"getRate(address,uint256,uint256,int256)":{"details":"helper for getting rate","params":{"deposit":"bet amount","max":"max pool available","pair":"the price provider"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"removeAltPool(address)":{"details":"remove a pool","params":{"oldPool_":"the address EBOP20 pool to remove"}},"removePP(address)":{"details":"remove a price provider from the ePairs list","params":{"oldPP_":"the address of the AggregatorProxy price provider contract address to remove."}},"setMaxT(uint256)":{"details":"update the max time for option bets","params":{"newMax_":"the new maximum time (in seconds) an option may be created for (inclusive)."}},"setMinT(uint256)":{"details":"update the max time for option bets","params":{"newMin_":"the new minimum time (in seconds) an option may be created for (inclusive)."}},"stake()":{"details":"send ETH to the pool. Recieve pETH token representing your claim. If rewards are available recieve BIOP governance tokens as well."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"thisAddress()":{"details":"address of this contract, convenience method"},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferDevFund(address)":{"details":"used to transfer devfund ","params":{"newDevFund":"the address of governance contract which takes over control"}},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwner(address)":{"details":"used to transfer ownership","params":{"newOwner_":"the address of governance contract which takes over control"}},"updateDevFundBetFee(uint256)":{"details":"set the fee users pay to buy an option","params":{"devFundBetFee_":"the new fee (in tenth percent) to buy an option"}},"updateExerciserFee(uint256)":{"details":"set the fee users can recieve for exercising other users options","params":{"exerciserFee_":"the new fee (in tenth percent) for exercising a options itm"}},"updateExpirerFee(uint256)":{"details":"set the fee users can recieve for expiring other users options","params":{"expirerFee_":"the new fee (in tenth percent) for expiring a options"}},"updatePoolLockSeconds(uint256)":{"details":"update the pool stake lock up time.","params":{"newLockSeconds_":"the new lock time, in seconds"}},"withdraw(uint256)":{"details":"recieve ETH from the pool.  If the current time is before your next available withdraw a 1% fee will be applied.","params":{"amount":"The amount of pETH to send the pool."}}},"title":"Binary Options Eth Pool"},"userdoc":{"methods":{"exercise(uint256)":{"notice":"exercises a option"},"expire(uint256)":{"notice":"expires a option"}}}},"settings":{"compilationTarget":{"browser/BinaryOptions.sol":"BinaryOptions"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":2000},"remappings":[]},"sources":{"browser/BIOPTokenV3.sol":{"keccak256":"0xb607614aa05d1d6e9ebb798568153a812e7aa863fd8c1ce35c3204d68ea3cc31","urls":["bzz-raw://62ca83ce290c82d7bb3b3444f636b9aff52abe1b0fcb34eb2b87c818bec31d98","dweb:/ipfs/QmTVXZq2gcMGyCkv78uvyNkkT2S1cYzyxSszVE4TLZXkDZ"]},"browser/BinaryOptions.sol":{"keccak256":"0xe12eeaa0c7c0ea60f920b12b186d0d39223a3d3e139a199c66bb0606e6099948","urls":["bzz-raw://51ca6bc02d879f295e3a31a5dff34c471d47f265fef57f0127010ad6c5c9d04f","dweb:/ipfs/QmUmSvDTgtW9VhA8RJbD6hha6priixzu1dWrkWddat2nUh"]}},"version":1},"version":1,"checkPoints":[]}