{"address":"0x0C9b25DfE02b2c89ccE86E1a0Bd6c04a7Aca01b6","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"BatchTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"prevOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"prevTransferGasLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTransferGasLimit","type":"uint256"}],"name":"TransferGasLimitChange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"batch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTransferGasLimit","type":"uint256"}],"name":"changeTransferGasLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"recover","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"batch(address[],uint256[])":{"params":{"recipients":"The list of recipients to send to","values":"The list of values to send to recipients.  The recipient with index i in recipients array will be sent values[i].  Thus, recipients and values must be the same length"}},"changeTransferGasLimit(uint256)":{"params":{"newTransferGasLimit":"The new gas limit to send along with batched transfers"}},"recover(address,uint256,bytes)":{"params":{"data":"The data to send along with the call","to":"The recipient to send to","value":"The ETH value to send with the call"}},"transferOwnership(address)":{"params":{"newOwner":"The address to transfer ownership of the contract to"}}},"version":1},"userdoc":{"kind":"user","methods":{"batch(address[],uint256[])":{"notice":"Transfer funds in a batch to each of recipients"},"changeTransferGasLimit(uint256)":{"notice":"Change the gas limit that is sent along with batched transfers. This is intended to protect against any EVM level changes that would require a new amount of gas for an internal send to complete."},"recover(address,uint256,bytes)":{"notice":"Recovery function for the contract owner to recover any ERC20 tokens or ETH that may get lost in the control of this contract."},"transferOwnership(address)":{"notice":"Transfers ownership of the contract ot the new owner"}},"notice":"Batcher ======= Contract that can take a batch of transfers, presented in the form of a recipients array and a values array, and funnel off those funds to the correct accounts in a single transaction. This is useful for saving on gas when a bunch of funds need to be transferred to different accounts. If more ETH is sent to `batch` than it is instructed to transfer, contact the contract owner in order to recover the excess. If any tokens are accidentally transferred to this account, contact the contract owner in order to recover them.","version":1}},"settings":{"compilationTarget":{"Batcher.sol":"Batcher"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"Batcher.sol":{"keccak256":"0x96552c798d79b1d7d5e9f926c17572bd75bd2dc27d5df55040cae390291a7ed5","license":"Apache-2.0","urls":["bzz-raw://0f88ac705fa71d7508197c0e93f176eb6c7d25d643ca52d870d96c1f4402253b","dweb:/ipfs/QmcRBkgJUMc6XM63CJhgfND5V3j8nFSQixbdFdDXwinD86"]}},"version":1},"version":1,"checkPoints":[]}