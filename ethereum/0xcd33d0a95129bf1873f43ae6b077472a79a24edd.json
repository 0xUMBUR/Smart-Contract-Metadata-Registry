{"address":"0xCd33d0a95129Bf1873F43Ae6b077472a79a24edd","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32[]","name":"proposalNames","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"chairperson","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"giveRightToVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposal","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"bool","name":"voted","type":"bool"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"vote","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerName","outputs":[{"internalType":"bytes32","name":"winnerName_","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposal","outputs":[{"internalType":"uint256","name":"winningProposal_","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implements voting process along with vote delegation","kind":"dev","methods":{"constructor":{"details":"Create a new ballot to choose one of 'proposalNames'.","params":{"proposalNames":"names of proposals"}},"giveRightToVote(address)":{"details":"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.","params":{"voter":"address of voter"}},"vote(uint256)":{"details":"Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.","params":{"proposal":"index of proposal in the proposals array"}},"winnerName()":{"details":"Calls winningProposal() function to get the index of the winner contained in the proposals array and then","returns":{"winnerName_":"the name of the winner"}},"winningProposal()":{"details":"Computes the winning proposal taking all previous votes into account.","returns":{"winningProposal_":"index of winning proposal in the proposals array"}}},"title":"Ballot","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/Ballot2.sol":"Ballot"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/Ballot2.sol":{"keccak256":"0x41cec72f2d1a8c9ed21d1f88c4494e2e121d45751db3cd146d9a8a724a52b3f7","license":"GPL-3.0","urls":["bzz-raw://c648d2e3b53205e2ebc4010201c93bf8d38daa8be90f6b156f81307648a5de48","dweb:/ipfs/QmVQeaEJ2Bckqryhs6ET6TPHmtaConorBUS8QDrncdwidF"]}},"version":1},"version":1,"checkPoints":[]}