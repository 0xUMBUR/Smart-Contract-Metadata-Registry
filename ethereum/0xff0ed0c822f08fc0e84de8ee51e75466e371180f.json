{"address":"0xFF0ed0C822f08fc0e84DE8ee51E75466e371180F","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"duckToken_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRIGGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"duckToken_","type":"address"}],"name":"changeDuck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"chiToken","outputs":[{"internalType":"contract IChiToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duckToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"amountWeth","type":"uint256"},{"internalType":"bool","name":"burnCHI","type":"bool"}],"name":"executeBuy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/DuckHack.sol":"DuckHack"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/AccessControl.sol":{"keccak256":"0x70d0d326867661dc3b77b268f19ba94b0536f5cad360ccd52fbf32cdbce42c74","license":"MIT","urls":["bzz-raw://5d3abd97b086e7790a676353a7936503a1926a68f798bd6687d2c872c0fd8c57","dweb:/ipfs/QmRUUvc89cFZbF1Ds5ydZM3tJLUXDC1W1KMmu7XK5mUHey"]},"browser/Address.sol":{"keccak256":"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8","license":"MIT","urls":["bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0","dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ"]},"browser/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","license":"MIT","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"]},"browser/DuckHack.sol":{"keccak256":"0x8e16ca38b5b5f304e98d643f52df33cc61bfb064dce8fea3fdf45745e7d359fc","license":"MIT","urls":["bzz-raw://b7daac694e567d185020e440281a2633e22cae9d537f02329d8eb3fe0c78be77","dweb:/ipfs/QmTq2YJbWr2T1Ts2KutZnbQptGSY7i5Hem4VtxjLnpFmLN"]},"browser/EnumerableSet.sol":{"keccak256":"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2","license":"MIT","urls":["bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f","dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi"]},"browser/IChiToken.sol":{"keccak256":"0x9947becf275358376436f38d42162d997870b9a471934a854b0bf5acd96f43f0","license":"MIT","urls":["bzz-raw://8695088a76fc8a89de602a4a2fc291f88915cc99303b6cd2fb999560b09bf0ea","dweb:/ipfs/QmXzm8zxW9ToNUtC8j7TbrMnrJpD7nivHWEu5H4hiWDjMa"]},"browser/IERC20.sol":{"keccak256":"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5","license":"MIT","urls":["bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08","dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"]},"browser/IUniswapV2Exchange.sol":{"keccak256":"0xaad3f41a453a00b6b9a7b36752f044cdaa6120abfd3a4251452a0b0c584324d8","license":"MIT","urls":["bzz-raw://7ff2cdb6840c507de0606fb462a516c95b810dc1d435f89e7714ed9ab2c1c172","dweb:/ipfs/QmYaY1V6JfZKrLD5CqHbcQMZLyusN1oGGeMCk4zEuVVGEv"]},"browser/IUniswapV2Factory.sol":{"keccak256":"0xf7be93d9b00a084868c7a58a27fc7dd5ad3c7ab20bbbe07e74b6756a3ff431d9","license":"MIT","urls":["bzz-raw://8665c3db9fc561fd9e25ed1bbcc98b447ca79be3e6a2d19ad00a6215a9860fc5","dweb:/ipfs/QmdPcAZ3dktQ1afgyinpArBJN4kgXS4idTHThB2fmq7z7Y"]},"browser/IUniswapV2Router.sol":{"keccak256":"0xb0fbdf0e044904e654ad14f880a816251fc4b616d23fa70ba6c084a38a91353e","license":"MIT","urls":["bzz-raw://6b12875fed59893f78b7e62b9c4100972aa71e52f348957379d09f199b0f21a4","dweb:/ipfs/QmP8zkKAttwk9FPc2zTV9EyNcCs5u37QHfXkDHeAT5KGd7"]},"browser/SafeERC20.sol":{"keccak256":"0xf642cd92d893f3a768577cd154a5bf28c5f280fec2420ff40b7705a725eb46a9","license":"MIT","urls":["bzz-raw://befd32dd8cd2e0cf9453ccefc298695a5588a3386799baa8874999e702ed311e","dweb:/ipfs/QmUHUAFTqP4y5UeZSw6mbihbhTs1ZnQRhPVgUbuHzr1A95"]},"browser/SafeMath.sol":{"keccak256":"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6","license":"MIT","urls":["bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe","dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3"]},"browser/UniversalERC20.sol":{"keccak256":"0xa18cd934298a632c3393970f483aa3c012356d07c5c30c5414f85a9a18206346","license":"MIT","urls":["bzz-raw://543a2760f6ab99b07c3a893f33a13aa5861c221d82cd3ab5efdfd186965f71cd","dweb:/ipfs/Qma7YtZxFzK8vwM59XSnzpPeP9tph4zsdgXpumCSXgoPe8"]}},"version":1},"version":1,"checkPoints":[]}