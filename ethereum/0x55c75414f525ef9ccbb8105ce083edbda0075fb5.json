{"address":"0x55c75414F525Ef9ccbb8105Ce083EDbDA0075FB5","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IMintableERC20","name":"_token","type":"address"},{"internalType":"contract IMintableERC20","name":"_xtoken","type":"address"},{"internalType":"address","name":"_governance","type":"address"},{"internalType":"address","name":"_sentinel","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IVaultAdapterV2","name":"adapter","type":"address"}],"name":"ActiveVaultUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"limit","type":"uint256"}],"name":"CollateralizationLimitUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"EmergencyExitUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsFlushed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"withdrawnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decreasedValue","type":"uint256"}],"name":"FundsHarvested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decreasedValue","type":"uint256"}],"name":"FundsRecalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"governance","type":"address"}],"name":"GovernanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"HarvestFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pendingGovernance","type":"address"}],"name":"PendingGovernanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"treasury","type":"address"}],"name":"RewardsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sentinel","type":"address"}],"name":"SentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decreasedValue","type":"uint256"}],"name":"TokensLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"parentAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"childAmount","type":"uint256"}],"name":"TokensRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestedAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decreasedValue","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"transmuter","type":"address"}],"name":"TransmuterUpdated","type":"event"},{"inputs":[],"name":"MAXIMUM_COLLATERALIZATION_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_COLLATERALIZATION_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_RESOLUTION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_linkGasOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collateralizationLimit","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"}],"internalType":"struct FixedPointMath.uq192x64","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyExit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"flush","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"flushActivator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getCdpLastDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getCdpTotalCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getCdpTotalDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getCdpTotalDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"getVaultAdapter","outputs":[{"internalType":"contract IVaultAdapterV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"getVaultTotalDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"harvest","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"harvestFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IVaultAdapterV2","name":"_adapter","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"liquidate","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IVaultAdapterV2","name":"_adapter","type":"address"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pegMinimum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingGovernance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"recall","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"recallAll","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_parentAmount","type":"uint256"},{"internalType":"uint256","name":"_childAmount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewards","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"setCollateralizationLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_emergencyExit","type":"bool"}],"name":"setEmergencyExit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_flushActivator","type":"uint256"}],"name":"setFlushActivator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_harvestFee","type":"uint256"}],"name":"setHarvestFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"Oracle","type":"address"},{"internalType":"uint256","name":"peg","type":"uint256"}],"name":"setOracleAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pendingGovernance","type":"address"}],"name":"setPendingGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewards","type":"address"}],"name":"setRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sentinel","type":"address"}],"name":"setSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_transmuter","type":"address"}],"name":"setTransmuter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IMintableERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transmuter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xtoken","outputs":[{"internalType":"contract IMintableERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptGovernance()":{"details":"Accepts the role as governance. This function reverts if the caller is not the new pending governance."},"collateralizationLimit()":{"details":"Gets the collateralization limit. The collateralization limit is the minimum ratio of collateral to debt that is allowed by the system.","returns":{"_0":"the collateralization limit."}},"deposit(uint256)":{"details":"Deposits collateral into a CDP. This function reverts if an emergency exit is active. This is in place to prevent the potential loss of additional funds.","params":{"_amount":"the amount of collateral to deposit."}},"flush()":{"details":"Flushes buffered tokens to the active vault. This function reverts if an emergency exit is active. This is in place to prevent the potential loss of additional funds.","returns":{"_0":"the amount of tokens flushed to the active vault."}},"getCdpLastDeposit(address)":{"details":"Gets the last recorded block of when a user made a deposit into their CDP.","params":{"_account":"the user account of the CDP to query."},"returns":{"_0":"the block number of the last deposit."}},"getCdpTotalCredit(address)":{"details":"Get the total amount of credit that a CDP has.","params":{"_account":"the user account of the CDP to query."},"returns":{"_0":"the amount of credit."}},"getCdpTotalDebt(address)":{"details":"Get the total amount of alchemic tokens borrowed from a CDP.","params":{"_account":"the user account of the CDP to query."},"returns":{"_0":"the borrowed amount of tokens."}},"getCdpTotalDeposited(address)":{"details":"Get the total amount of collateral deposited into a CDP.","params":{"_account":"the user account of the CDP to query."},"returns":{"_0":"the deposited amount of tokens."}},"getVaultAdapter(uint256)":{"details":"Get the adapter of a vault.","params":{"_vaultId":"the identifier of the vault."},"returns":{"_0":"the vault adapter."}},"getVaultTotalDeposited(uint256)":{"details":"Get the total amount of the parent asset that has been deposited into a vault.","params":{"_vaultId":"the identifier of the vault."},"returns":{"_0":"the total amount of deposited tokens."}},"harvest(uint256)":{"details":"Harvests yield from a vault.","params":{"_vaultId":"the identifier of the vault to harvest from."},"returns":{"_0":"the amount of funds that were harvested from the vault."}},"initialize(address)":{"details":"Initializes the contract. This function checks that the transmuter and rewards have been set and sets up the active vault.","params":{"_adapter":"the vault adapter of the active vault."}},"liquidate(uint256)":{"details":"Attempts to liquidate part of a CDP's collateral to pay back its debt.","params":{"_amount":"the amount of collateral to attempt to liquidate."}},"migrate(address)":{"details":"Migrates the system to a new vault. This function reverts if the vault adapter is the zero address, if the token that the vault adapter accepts is not the token that this contract defines as the parent asset, or if the contract has not yet been initialized.","params":{"_adapter":"the adapter for the vault the system will migrate to."}},"mint(uint256)":{"details":"Mints synthetic tokens by either claiming credit or increasing the debt. Claiming credit will take priority over increasing the debt. This function reverts if the debt is increased and the CDP health check fails.","params":{"_amount":"the amount of alchemic tokens to borrow."}},"recall(uint256,uint256)":{"details":"Recalls an amount of deposited funds from a vault to this contract.","params":{"_vaultId":"the identifier of the recall funds from."},"returns":{"_0":"the amount of funds that were recalled from the vault to this contract and the decreased vault value."}},"recallAll(uint256)":{"details":"Recalls all the deposited funds from a vault to this contract.","params":{"_vaultId":"the identifier of the recall funds from."},"returns":{"_0":"the amount of funds that were recalled from the vault to this contract and the decreased vault value."}},"repay(uint256,uint256)":{"details":"Repays debt with the native and or synthetic token. An approval is required to transfer native tokens to the transmuter."},"setCollateralizationLimit(uint256)":{"details":"Sets the collateralization limit. This function reverts if the caller is not the current governance or if the collateralization limit is outside of the accepted bounds.","params":{"_limit":"the new collateralization limit."}},"setEmergencyExit(bool)":{"details":"Sets if the contract should enter emergency exit mode.","params":{"_emergencyExit":"if the contract should enter emergency exit mode."}},"setFlushActivator(uint256)":{"details":"Sets the flushActivator.","params":{"_flushActivator":"the new flushActivator."}},"setHarvestFee(uint256)":{"details":"Sets the harvest fee. This function reverts if the caller is not the current governance.","params":{"_harvestFee":"the new harvest fee."}},"setOracleAddress(address,uint256)":{"details":"Set oracle."},"setPendingGovernance(address)":{"details":"Sets the pending governance. This function reverts if the new pending governance is the zero address or the caller is not the current governance. This is to prevent the contract governance being set to the zero address which would deadlock privileged contract functionality.","params":{"_pendingGovernance":"the new pending governance."}},"setRewards(address)":{"details":"Sets the rewards contract. This function reverts if the new rewards contract is the zero address or the caller is not the current governance.","params":{"_rewards":"the new rewards contract."}},"setTransmuter(address)":{"details":"Sets the transmuter. This function reverts if the new transmuter is the zero address or the caller is not the current governance.","params":{"_transmuter":"the new transmuter."}},"vaultCount()":{"details":"Gets the number of vaults in the vault list.","returns":{"_0":"the vault count."}},"withdraw(uint256)":{"details":"Attempts to withdraw part of a CDP's collateral. This function reverts if a deposit into the CDP was made in the same block. This is to prevent flash loan attacks on other internal or external systems.","params":{"_amount":"the amount of collateral to withdraw."}}},"stateVariables":{"MAXIMUM_COLLATERALIZATION_LIMIT":{"details":"The maximum value that the collateralization limit can be set to by the governance. This is a safety rail to prevent the collateralization from being set to a value which breaks the system. This value is equal to 400%. IMPORTANT: This constant is a raw FixedPointMath.uq192x64 value and assumes a resolution of 64 bits. If the            resolution for the FixedPointMath library changes this constant must change as well."},"MINIMUM_COLLATERALIZATION_LIMIT":{"details":"The minimum value that the collateralization limit can be set to by the governance. This is a safety rail to prevent the collateralization from being set to a value which breaks the system. This value is equal to 100%. IMPORTANT: This constant is a raw FixedPointMath.uq192x64 value and assumes a resolution of 64 bits. If the            resolution for the FixedPointMath library changes this constant must change as well."},"PERCENT_RESOLUTION":{"details":"Resolution for all fixed point numeric parameters which represent percents. The resolution allows for a granularity of 0.01% increments."},"_cdps":{"details":"A mapping of all of the user CDPs. If a user wishes to have multiple CDPs they will have to either create a new address or set up a proxy contract that interfaces with this contract."},"_ctx":{"details":"The context shared between the CDPs."},"_linkGasOracle":{"details":"The address of the link oracle."},"_vaults":{"details":"A list of all of the vaults. The last element of the list is the vault that is currently being used for deposits and withdraws. Vaults before the last element are considered inactive and are expected to be cleared."},"emergencyExit":{"details":"A flag indicating if deposits and flushes should be halted and if all parties should be able to recall from the active vault."},"flushActivator":{"details":"when movemetns are bigger than this number flush is activated."},"governance":{"details":"The address of the account which currently has administrative capabilities over this contract."},"harvestFee":{"details":"The percent of each profitable harvest that will go to the rewards contract."},"initialized":{"details":"A flag indicating if the contract has been initialized yet."},"pegMinimum":{"details":"The minimum returned amount needed to be on peg according to the oracle."},"pendingGovernance":{"details":"The address of the pending governance."},"rewards":{"details":"The address of the contract which will receive fees."},"sentinel":{"details":"The address of the account which can initiate an emergency withdraw of funds in a vault."},"token":{"details":"The token that this contract is using as the parent asset."},"totalDeposited":{"details":"The total amount the native token deposited into the system that is owned by external users."},"transmuter":{"details":"The address of the contract which will transmute synthetic tokens back into native tokens."},"xtoken":{"details":"The token that this contract is using as the child asset."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"yumlusd.sol":"YumLUSDVault"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"yumlusd.sol":{"keccak256":"0x6f49177a14b9de0c452acbf330d6c2d8d84b1fc85616ba4b3ad74700a0a1b667","license":"MIT","urls":["bzz-raw://667a3c771740233bfc9cd30ef40d2e390a53336b9453aa06323ceb70e28871ed","dweb:/ipfs/QmYwtBtwtMZH4SzX7ftCnmyEQs9prkGtfxwHp2rz6mxYLV"]}},"version":1},"version":1,"checkPoints":[]}