{"address":"0x2C617eAE4EFc9511Df1bDFa29e2a189Ed40EBA85","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"lowGasMulticall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"bool","name":"revertOnFail","type":"bool"}],"name":"lowGasMulticall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"bool","name":"revertOnFail","type":"bool"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"normalMulticall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"input","type":"bytes32"}],"name":"setA","outputs":[{"internalType":"bytes32","name":"output","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"input","type":"bytes32"}],"name":"setB","outputs":[{"internalType":"bytes32","name":"output","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"lowGasMulticall(bytes[],bool)":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract.","revertOnFail":"If true, if a call reverts, this function will revert."}},"multicall(bytes[],bool)":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract","revertOnFail":"If true, if a call reverts, this function will revert."},"returns":{"results":"The results from each of the calls passed in via data, if the call reverted (and revertOnFail is true) then it will be the revert data."}}},"version":1},"userdoc":{"kind":"user","methods":{"lowGasMulticall(bytes[],bool)":{"notice":"Call multiple functions in the current contract."},"multicall(bytes[],bool)":{"notice":"Call multiple functions in the current contract and return the data from all of them."}},"version":1}},"settings":{"compilationTarget":{"contracts/1_Storage.sol":"Test"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":999999},"remappings":[]},"sources":{"contracts/1_Storage.sol":{"keccak256":"0x9840b56a08c9394c36d07da9e1a5333bb34774ad72950a15ab7e6d14de03e868","license":"AGPL-3.0-only","urls":["bzz-raw://7542a1004da711c4072924e1ba11cb68efcebd188db8fbd98cb570d7e6deb265","dweb:/ipfs/QmP1q8g4d4aCvVQ3NZtwuoJKb7t77ZegUJ1WxoM8gauKdF"]}},"version":1},"version":1,"checkPoints":[]}