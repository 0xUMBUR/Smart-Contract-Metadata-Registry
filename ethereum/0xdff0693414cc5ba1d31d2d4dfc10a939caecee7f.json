{"address":"0xdff0693414Cc5Ba1D31d2D4DFc10A939CAecEE7f","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_link","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"}],"name":"CancelOracleRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"specId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"},{"indexed":false,"internalType":"address","name":"callbackAddr","type":"address"},{"indexed":false,"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"indexed":false,"internalType":"uint256","name":"cancelExpiration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dataVersion","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OracleRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"EXPIRY_TIME","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes4","name":"_callbackFunc","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"address","name":"_callbackAddress","type":"address"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"},{"internalType":"bytes32","name":"_data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_node","type":"address"}],"name":"getAuthorizationStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChainlinkToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes32","name":"_specId","type":"bytes32"},{"internalType":"address","name":"_callbackAddress","type":"address"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_dataVersion","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_node","type":"address"},{"internalType":"bool","name":"_allowed","type":"bool"}],"name":"setFulfillmentPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":{"details":"Given params must hash to a commitment stored on the contract in order for the request to be valid Emits CancelOracleRequest event.","params":{"_callbackFunc":"The requester's specified callback address","_expiration":"The time of the expiration for the request","_payment":"The amount of payment given (specified in wei)","_requestId":"The request ID"}},"constructor":{"details":"Sets the LinkToken address for the imported LinkTokenInterface","params":{"_link":"The address of the LINK token"}},"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":{"details":"Given params must hash back to the commitment stored from `oracleRequest`. Will call the callback address' callback function without bubbling up error checking in a `require` so that the node can get paid.","params":{"_callbackAddress":"The callback address to call for fulfillment","_callbackFunctionId":"The callback function ID to use for fulfillment","_data":"The data to return to the consuming contract","_expiration":"The expiration that the node should respond by before the requester can cancel","_payment":"The payment amount that will be released for the oracle (specified in wei)","_requestId":"The fulfillment request ID that must match the requester's"},"returns":{"_0":"Status if the external call was successful"}},"getAuthorizationStatus(address)":{"params":{"_node":"The address of the Chainlink node"},"returns":{"_0":"The authorization status of the node"}},"getChainlinkToken()":{"details":"This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"onTokenTransfer(address,uint256,bytes)":{"details":"The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.","params":{"_amount":"Amount of LINK sent (specified in wei)","_data":"Payload of the transaction","_sender":"Address of the sender"}},"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":{"details":"Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.","params":{"_callbackAddress":"The callback address for the response","_callbackFunctionId":"The callback function ID for the response","_data":"The CBOR payload of the request","_dataVersion":"The specified data version","_nonce":"The nonce sent by the requester","_payment":"The amount of payment given (specified in wei)","_sender":"The sender of the request","_specId":"The Job Specification ID"}},"owner()":{"details":"Returns the address of the current owner."},"setFulfillmentPermission(address,bool)":{"params":{"_allowed":"Bool value to determine if the node can fulfill requests","_node":"The address of the Chainlink node"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(address,uint256)":{"details":"The owner of the contract can be another wallet and does not have to be a Chainlink node","params":{"_amount":"The amount to send (specified in wei)","_recipient":"The address to send the LINK token to"}},"withdrawable()":{"details":"We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage","returns":{"_0":"The amount of withdrawable LINK on the contract"}}},"title":"The Chainlink Oracle contract"},"userdoc":{"methods":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":{"notice":"Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK sent for the request back to the requester's address."},"constructor":"Deploy with the address of the LINK token","fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":{"notice":"Called by the Chainlink node to fulfill requests"},"getAuthorizationStatus(address)":{"notice":"Use this to check if a node is authorized for fulfilling requests"},"getChainlinkToken()":{"notice":"Returns the address of the LINK token"},"onTokenTransfer(address,uint256,bytes)":{"notice":"Called when LINK is sent to the contract via `transferAndCall`"},"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":{"notice":"Creates the Chainlink request"},"setFulfillmentPermission(address,bool)":{"notice":"Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow."},"withdraw(address,uint256)":{"notice":"Allows the node operator to withdraw earned LINK to a given address"},"withdrawable()":{"notice":"Displays the amount of LINK that is available for the node operator to withdraw"}},"notice":"Node operators can deploy this contract to fulfill requests sent to them"}},"settings":{"compilationTarget":{"browser/oracle.sol":"Oracle"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/oracle.sol":{"keccak256":"0x72e82116f720d816953c1c74ee2d3a371dad50896dd62a65a4853b2c337edfe7","urls":["bzz-raw://c5cb5f89e92e170190674ac9ac5766172f1ab644640f7c2061f89d46e57c63dc","dweb:/ipfs/QmaRmS12aqVRnPMVNPxqEVne1Z83VSQ97q9YaX7119QByB"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/LinkTokenReceiver.sol":{"keccak256":"0xa856c0d069254b46ec90528fe9440485f7dd7efbf13b2b4c80a0e28910d25a95","urls":["bzz-raw://c50eb949083eaadd1139ebef6377dab2ace7625d4a9af55ff935938ec8bb4c7f","dweb:/ipfs/QmQL981UKm6XW82RMbRejQVf5z6KC3cKeNvCMrT9Bff22w"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol":{"keccak256":"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374","urls":["bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048","dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/LinkTokenInterface.sol":{"keccak256":"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6","urls":["bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8","dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/OracleInterface.sol":{"keccak256":"0x325ca1599835f823a92e3e03eb900caae683e873937adb2924e435fa10d6e30a","urls":["bzz-raw://49b8d1583ba5364b840efe4415145139351edeb4428e23ff4f0265204dd0713b","dweb:/ipfs/QmdQBuSy6g1yaCzNoGqMZ53vEZVdKKkkuJJzT2JPx9sPyM"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/WithdrawalInterface.sol":{"keccak256":"0xd5aa4e79f8e49d7b2e5e16cb5c152a63efafbdaa24f34749fa3793df6b683068","urls":["bzz-raw://f0a63a2382f746e74bc918d0a3a4db3eaacc9e3ae54a2a350563b6c9e4859b35","dweb:/ipfs/QmT7Yut3Abdif6JRbzw4QmpbfU1nPjHHiLvC1v5qcBT2Va"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/vendor/Ownable.sol":{"keccak256":"0x3dfd577392b1fde3e54f76a81358fd27c041f30257bb9438f0bb5952e351befa","urls":["bzz-raw://f21d5e72760d89f05ef0eb791eb952fe0688a83dc679b0cf457c556c738aa1ee","dweb:/ipfs/QmVKpY8tKTqaDcaz7D5G9weH8oEKXmfTscZ3WknjBuTqid"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/vendor/SafeMath.sol":{"keccak256":"0x95dbe2dd5ab8682b99bc3d7d297b621d4237442da160f78d3323ee5c4a06ded3","urls":["bzz-raw://d753308ff4eb43fba6f9ede371a33f707c5818350770dcb078a7d78ac8251361","dweb:/ipfs/Qme64eYKWoTQiP3WhqGHoMqrENNZ9L8SdBLQ2hx5SmzUda"]}},"version":1},"version":1,"checkPoints":[]}