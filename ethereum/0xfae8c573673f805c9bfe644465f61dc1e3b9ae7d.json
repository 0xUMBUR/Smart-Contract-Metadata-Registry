{"address":"0xFAE8c573673F805c9bFE644465f61DC1e3b9aE7d","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"_premint","type":"uint256"},{"internalType":"address","name":"_premintTo","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"premint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"mint(address,uint256)":{"notice":"Creates `_amount` token to `_to`."}},"version":1}},"settings":{"compilationTarget":{"browser/NewToken.sol":"NewToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Address.sol":{"keccak256":"0xd07f8cf8ff0735e00728c615c3a3c66b6785906456453c0dd5022d6b5fee1748","license":"MIT","urls":["bzz-raw://b7ac5b315cd894b72f9eed66608d1a108a896fb58470bc74b6ead62022d403f8","dweb:/ipfs/QmRuDMNmq2pEu6JNWpoHP1qVVARC3ySieh7GceXBtc9imc"]},"browser/Context.sol":{"keccak256":"0x2f2eb98f22c739b815ed32c05b196901cd3a1b1110bd6a4e7ccba90c3e6c3dbf","license":"MIT","urls":["bzz-raw://c5865a1a29e6eeb90c5710f5bdd34ec806f000451181d2e236370670f93b83d9","dweb:/ipfs/QmYd37vfEdmJzo7zdrCZVQzJ5ijhdKxd9bvPoJywsMKiW3"]},"browser/ERC20.sol":{"keccak256":"0x4dcd8342f0b3ccf26d35436387e95abb6a5a51a1dbcb9665535fcace66c8d022","license":"MIT","urls":["bzz-raw://b4f08b212bd0258e2dc622976a9b2f9fe4ce29ce3c0fd260a499dce4da20f171","dweb:/ipfs/QmdQEKRVoq1xjAWPKeA93Y2qNJWrnj8oiuk9TAREwqLNkp"]},"browser/IERC20.sol":{"keccak256":"0x8835cf49592100fde3ec4479f37c9e50576f07e6ad0f7f694fb6ba5848923ca5","license":"MIT","urls":["bzz-raw://d56bef1506f8f8429654411679f9a95290f1703d863ba926ad5caa3e812e7f66","dweb:/ipfs/QmdLGrzyRHgJwA568T1utm52sMRJ3roTuFsFQTLPNuvUye"]},"browser/NewToken.sol":{"keccak256":"0x6b863ddfa796902f2ba874ca8d35281d75a372095d80a7bf0c7a5391674ca732","urls":["bzz-raw://7627c22f267f525ee9e0894cb693c27d879c6c76e670e084d7f8fbef15d8900c","dweb:/ipfs/QmchMgQpkjjWorhQA3ribNkUr4b4xCHy2DXUXbxiBDafsZ"]},"browser/Ownable.sol":{"keccak256":"0x2459ed48b3043b916d864911970802c2d34d5e0dead2e1247b0624514a464427","license":"MIT","urls":["bzz-raw://f9516d40f69cbcbcd16ff265130357364382939819b3583332df78000ceca7af","dweb:/ipfs/QmPzwKTZe3MTUEzJUetZK7AUGgch5Bg95RwbjhhZZkJzwt"]},"browser/SafeMath.sol":{"keccak256":"0x77ad19dfd48455e748a8104aaa7348b4782f587a0ea2bb81b9cf08820f696392","license":"MIT","urls":["bzz-raw://aacf7c37d5ec153c4f01049d0b1d2446fb0a675520713e53f9bb40c20dbe5eb0","dweb:/ipfs/QmNuv9SYNjQjV5ca4XY3uzRhudcCoo5zhykuNSXigf8hRU"]}},"version":1},"version":1,"checkPoints":[]}