{"address":"0xc26D64755F2Bb667FD9AEc69815ab547bE8508a1","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_guest","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"authorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bouncer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"guests","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_guests","type":"address[]"},{"internalType":"bool[]","name":"_invited","type":"bool[]"}],"name":"setGuests","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"For a Vyper implementation of this contract containing additional functionality, see https://github.com/banteg/guest-list/blob/master/contracts/GuestList.vy","kind":"dev","methods":{"authorized(address,uint256)":{"details":"Note that `_amount` isn't checked to keep test setup simple, since from the vault tests' perspective this is a pass/fail call anyway.","params":{"_amount":"Not used. The amount of tokens the guest is bringing.","_guest":"The guest's address to check."}},"constructor":{"details":"Note that since this is just for testing, you're unable to change `bouncer`."},"setGuests(address[],bool[])":{"params":{"_guests":"The guests to add or update.","_invited":"A flag for each guest at the matching index, inviting or uninviting the guest."}}},"version":1},"userdoc":{"kind":"user","methods":{"authorized(address,uint256)":{"notice":"Check if a guest with a bag of a certain size is allowed into the party."},"constructor":"Create the test guest list, setting the message sender as `bouncer`.","setGuests(address[],bool[])":{"notice":"Invite guests or kick them from the party."}},"notice":"A basic guest list contract for testing.","version":1}},"settings":{"compilationTarget":{"browser/guestlist.sol":"TestGuestList"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/guestlist.sol":{"keccak256":"0x6718ea6d2bfc8d92a12f634423aaae309c39064aadf9b47ac207cdf5c78e8b5a","license":"GPL-3.0","urls":["bzz-raw://e7f7fafa014f339a0dde4073a27c5562eccb4d15f209d3148cbbdddbc053af02","dweb:/ipfs/QmWGJRGLTmvm24ALGuTV9175iF5dERHK5gzdEy9uWkZm3T"]}},"version":1},"version":1,"checkPoints":[]}