{"address":"0xB82A6E7d7e31dA91B03699abFE7Ea29CF683144f","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"paidAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"Assigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CollateralDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"CollateralWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"acoFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"assignableCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"assignableTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clear","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"clearFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collateral","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"currentCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"currentCollateralizedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"exerciseAccounts","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"exerciseAccountsFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"exerciseFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"expiryTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDestination","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"getCollateralAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"getExerciseData","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"}],"name":"getTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_underlying","type":"address"},{"internalType":"address","name":"_strikeAsset","type":"address"},{"internalType":"bool","name":"_isCall","type":"bool"},{"internalType":"uint256","name":"_strikePrice","type":"uint256"},{"internalType":"uint256","name":"_expiryTime","type":"uint256"},{"internalType":"uint256","name":"_acoFee","type":"uint256"},{"internalType":"address payable","name":"_feeDestination","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"mintPayable","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"}],"name":"mintTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"mintToPayable","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"redeemFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"strikeAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"strikeAssetDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"strikeAssetSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"strikePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"unassignableCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"unassignableTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"underlying","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"underlyingDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"underlyingSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"The implementation of the ACO token. The token is ERC20 compliance.","methods":{"assignableCollateral(address)":{"details":"Function to get  the current amount of assignable collateral for an account. NOTE: The function is valid when the token is NOT expired yet.  After expiration, the assignable collateral is zero.","params":{"account":"Address of the account."},"returns":{"_0":"The respective amount of assignable collateral."}},"assignableTokens(address)":{"details":"Function to get  the current amount of assignable tokens for an account. NOTE: The function is valid when the token is NOT expired yet.  After expiration, the assignable tokens is zero.","params":{"account":"Address of the account."},"returns":{"_0":"The respective amount of assignable tokens."}},"burn(uint256)":{"details":"Function to burn tokens and get the collateral, not assigned, back. NOTE: The function only works when the token is NOT expired yet. ","params":{"tokenAmount":"Amount of tokens to be burned."}},"burnFrom(address,uint256)":{"details":"Function to burn tokens from a specific account and send the collateral to its address. The token allowance must be respected. The collateral is returned to the account address, not to the transaction sender. NOTE: The function only works when the token is NOT expired yet. ","params":{"account":"Address of the account.","tokenAmount":"Amount of tokens to be burned."}},"clear()":{"details":"Function to burn the tokens after expiration. It is an optional function to `clear` the account wallet from an expired and not functional token. NOTE: The function only works when the token IS expired. "},"clearFrom(address)":{"details":"Function to burn the tokens from an account after expiration. It is an optional function to `clear` the account wallet from an expired and not functional token. The token allowance must be respected. NOTE: The function only works when the token IS expired. ","params":{"account":"Address of the account."}},"collateral()":{"details":"Function to get the collateral asset.","returns":{"_0":"The address of the collateral asset."}},"currentCollateral(address)":{"details":"Function to get the current amount of collateral for an account.","params":{"account":"Address of the account."},"returns":{"_0":"The current amount of collateral."}},"currentCollateralizedTokens(address)":{"details":"Function to get the current amount of collateralized tokens for an account.","params":{"account":"Address of the account."},"returns":{"_0":"The current amount of collateralized tokens."}},"decimals()":{"details":"Function to get the token decimals, that it is equal to the underlying asset decimals."},"exercise(uint256)":{"details":"Function to exercise the tokens, paying to get the equivalent collateral. The paid amount is sent to the collateral owners that were assigned. NOTE: The function only works when the token is NOT expired. ","params":{"tokenAmount":"Amount of tokens."}},"exerciseAccounts(uint256,address[])":{"details":"Function to exercise the tokens, paying to get the equivalent collateral. The paid amount is sent to the collateral owners (on accounts list) that were assigned. NOTE: The function only works when the token is NOT expired. ","params":{"accounts":"The array of addresses to get collateral from.","tokenAmount":"Amount of tokens."}},"exerciseAccountsFrom(address,uint256,address[])":{"details":"Function to exercise the tokens from a specific account, paying to get the equivalent collateral sent to its address. The token allowance must be respected. The paid amount is sent to the collateral owners (on accounts list) that were assigned. The collateral is transferred to the account address, not to the transaction sender. NOTE: The function only works when the token is NOT expired. ","params":{"account":"Address of the account.","accounts":"The array of addresses to get the deposited collateral.","tokenAmount":"Amount of tokens."}},"exerciseFrom(address,uint256)":{"details":"Function to exercise the tokens from an account, paying to get the equivalent collateral. The token allowance must be respected. The paid amount is sent to the collateral owners that were assigned. The collateral is transferred to the account address, not to the transaction sender. NOTE: The function only works when the token is NOT expired. ","params":{"account":"Address of the account.","tokenAmount":"Amount of tokens."}},"getCollateralAmount(uint256)":{"details":"Function to get the equivalent collateral amount for a token amount.","params":{"tokenAmount":"Amount of tokens."},"returns":{"_0":"The respective amount of collateral."}},"getExerciseData(uint256)":{"details":"Function to get the data for exercise of an amount of token.","params":{"tokenAmount":"Amount of tokens."},"returns":{"_0":"The asset and the respective amount that should be sent to get the collateral."}},"getTokenAmount(uint256)":{"details":"Function to get the equivalent token amount for a collateral amount.","params":{"collateralAmount":"Amount of collateral."},"returns":{"_0":"The respective amount of tokens."}},"init(address,address,bool,uint256,uint256,uint256,address)":{"details":"Function to initialize the contract. It should be called when creating the token. It must be called only once. The `assert` is to guarantee that behavior.","params":{"_acoFee":"Value of the ACO fee. It is a percentage value (100000 is 100%).","_expiryTime":"The UNIX time for the token expiration.","_feeDestination":"Address of the fee destination charged on the exercise.","_isCall":"True if the type is CALL, false for PUT.","_strikeAsset":"Address of the strike asset (0x0 for Ethereum).","_strikePrice":"The strike price with the strike asset precision.","_underlying":"Address of the underlying asset (0x0 for Ethereum)."}},"mint(uint256)":{"details":"Function to mint tokens with ERC20 deposited as collateral. NOTE: The function only works when the token is NOT expired yet. ","params":{"collateralAmount":"Amount of collateral deposited."}},"mintPayable()":{"details":"Function to mint tokens with Ether deposited as collateral. NOTE: The function only works when the token is NOT expired yet. "},"mintTo(address,uint256)":{"details":"Function to mint tokens with ERC20 deposited as collateral to an informed account. However, the minted tokens are assigned to the transaction sender. NOTE: The function only works when the token is NOT expired yet. ","params":{"account":"Address of the account that will be the collateral owner.","collateralAmount":"Amount of collateral deposited."}},"mintToPayable(address)":{"details":"Function to mint tokens with Ether deposited as collateral to an informed account. However, the minted tokens are assigned to the transaction sender. NOTE: The function only works when the token is NOT expired yet. ","params":{"account":"Address of the account that will be the collateral owner."}},"name()":{"details":"Function to get the token name."},"redeem()":{"details":"Function to get the collateral, not assigned, back. NOTE: The function only works when the token IS expired. "},"redeemFrom(address)":{"details":"Function to get the collateral from a specific account sent back to its address . The token allowance must be respected. The collateral is returned to the account address, not to the transaction sender. NOTE: The function only works when the token IS expired. ","params":{"account":"Address of the account."}},"symbol()":{"details":"Function to get the token symbol, that it is equal to the name."},"unassignableCollateral(address)":{"details":"Function to get the current amount of unassignable collateral for an account. NOTE: The function is valid when the token is NOT expired yet.  After expiration, the unassignable collateral is equal to the account's collateral balance.","params":{"account":"Address of the account."},"returns":{"_0":"The respective amount of unassignable collateral."}},"unassignableTokens(address)":{"details":"Function to get the current amount of unassignable tokens for an account. NOTE: The function is valid when the token is NOT expired yet.  After expiration, the unassignable tokens is equal to the account's collateralized tokens.","params":{"account":"Address of the account."},"returns":{"_0":"The respective amount of unassignable tokens."}}},"title":"ACOToken"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/ACOToken.sol":"ACOToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/ACOToken.sol":{"keccak256":"0x6484c02ce6349c27ab53cd9186a6f104f38cc13a970eabb8115615e7d3471b4d","urls":["bzz-raw://321401f818d32c0462c44a69290706ebc179d38399fc9e74a54d0c723920ee7b","dweb:/ipfs/QmRnQ4v97teVPq7aQwEc4qbm2DyN2dYFntnY5qZh4oqENu"]},"browser/Address.sol":{"keccak256":"0xc54b65cba622c9b7a45e09512be91ae74072362c20ceec4e209611f5f163c9e4","urls":["bzz-raw://e70d648e2b4abdf78e1a3fadbe3dfd4a7fbca543c3924a07478ed2db35295258","dweb:/ipfs/QmaQo41wXWEY1zr6STEgJ4d6hqHDTUnSe6ezyuG3EKTVEZ"]},"browser/BokkyPooBahsDateTimeLibrary.sol":{"keccak256":"0x4332ca0d656623eeb9986a1e2664f5482c446037c32549de88ecd6d340ecd0bf","urls":["bzz-raw://aa2a4b62257d2644ef1b66fcec6a06b1d85e4d5e85df6962404365f7da54e7be","dweb:/ipfs/QmTo2qjzmFviVJsDxC52CDW9HDhqybh3fUpuv5s8MCg4AT"]},"browser/ERC20.sol":{"keccak256":"0xce30c9428a0f83ec32eeac981d277003eecce85dc47ffba5445251338080e838","urls":["bzz-raw://d3758dd54d9e42f903483f70f99b1da3570e7e6ca4ea1c8ed358b20ae2b97343","dweb:/ipfs/QmcBKsGcJWhvLj2bCUwZTHjriZ9xjpwv8tEMcCHKSgDEhy"]},"browser/IERC20.sol":{"keccak256":"0xb968018e744a96f7f5167b1647d860841f385054881168ae69aa3466df1c1799","urls":["bzz-raw://69bbcb700307d154b9dd65c0487679b4b66fab7a9b6292b28a29aa383d8519f1","dweb:/ipfs/QmSmLfSRMr7aKAmGdqx421YhxWYJ9X1pbtLezNw7d2YHmn"]},"browser/SafeMath.sol":{"keccak256":"0x6d69634844be8816615ad4a4c1f43de32a86085016d71ef4cb9bc542b62b5c5c","urls":["bzz-raw://bb00c76193fbb0c36fe0c4ef6e56930bac6f254ac37751e74275fe110cd7baab","dweb:/ipfs/QmZH9CbDygC9YaCeeWFV99UxdwB6gQcs4BaTV4oxS2RKg4"]},"browser/Strings.sol":{"keccak256":"0x3a685078f8919e443118c302ded03835bffe513d83825d619e8759a0b1903876","urls":["bzz-raw://d3878e6f0428006b4c32f89baafca851da085fe7d0df50710457b09fcc902dba","dweb:/ipfs/QmRRXisWCgEmSCoT4UF6HVaA67AR1JBoEucmCuCJqJEphv"]}},"version":1},"version":1,"checkPoints":[]}