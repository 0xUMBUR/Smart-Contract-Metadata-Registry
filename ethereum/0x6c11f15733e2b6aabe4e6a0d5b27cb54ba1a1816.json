{"address":"0x6c11f15733E2b6aaBe4E6A0d5B27cB54BA1a1816","name":"","metadata":{"compiler":{"version":"0.6.9+commit.3e3065ac"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_link","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"ChainlinkRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"}],"name":"cancelRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"bytes32","name":"_jobId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"string","name":"_path","type":"string"},{"internalType":"string","name":"_filter","type":"string"}],"name":"createRequestTo","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"data","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"bytes32","name":"_data","type":"bytes32"}],"name":"fulfill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainlinkToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_url","type":"string"}],"name":"setUrl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"url","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLink","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract is designed to work on multiple networks, including local test networks","methods":{"cancelRequest(bytes32,uint256,bytes4,uint256)":{"params":{"_callbackFunctionId":"The bytes4 callback function ID specified for the request to cancel","_expiration":"The expiration generated for the request to cancel","_payment":"The payment specified for the request to cancel","_requestId":"The ID that was generated for the request to cancel"}},"constructor":{"details":"Sets the storage for the specified addresses","params":{"_link":"The address of the LINK token contract"}},"createRequestTo(address,bytes32,uint256,string,string)":{"details":"This function ignores the stored Oracle contract address and will instead send the request to the address specified","params":{"_filter":"The filter string to response data","_jobId":"The bytes32 JobID to be executed","_oracle":"The Oracle contract address to send the request to","_path":"The dot-delimited path to parse of the response"}},"fulfill(bytes32,bytes32)":{"details":"The recordChainlinkFulfillment protects this function from being called by anyone other than the oracle address that the request was sent to","params":{"_data":"The answer provided by the oracle","_requestId":"The ID that was generated for the request"}},"getChainlinkToken()":{"details":"This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"WebScrapingData is an example contract which requests data from the Chainlink network"},"userdoc":{"methods":{"cancelRequest(bytes32,uint256,bytes4,uint256)":{"notice":"Call this method if no response is received within 5 minutes"},"constructor":"Deploy the contract with a specified address for the LINK and Oracle contract addresses","createRequestTo(address,bytes32,uint256,string,string)":{"notice":"Creates a request to the specified Oracle contract address"},"fulfill(bytes32,bytes32)":{"notice":"The fulfill method from requests created by this contract"},"getChainlinkToken()":{"notice":"Returns the address of the LINK token"},"withdrawLink()":{"notice":"Allows the owner to withdraw any LINK balance on the contract"}}}},"settings":{"compilationTarget":{"browser/WebScrapingData.sol":"WebScrapingData"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/WebScrapingData.sol":{"keccak256":"0x5b9b708d0a656b727eeaeb4af0d5742dc166b84be4a5f91ed2285a41ba87b267","license":"MIT","urls":["bzz-raw://601d8917ec888dda4b44fff6a3c21c958ac3f6ce05afa9c34f23dac0b58f8f23","dweb:/ipfs/QmQw11bMG5TuV1mcbiPn7oPPjeKYcjiBGyrd89ATc5vkcA"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/Chainlink.sol":{"keccak256":"0xdb0cd9acf471e9925b7be1fa4b0f17a373324318b2e14062b7749931cdde00fb","urls":["bzz-raw://ad2685687f532eba3298ede1b888b57d69f3995d6dd49bbe468d45cb1716cbc4","dweb:/ipfs/QmVuNKTnxGuzfaVbx4jDjdVn45D4ogj9zvso1xXhUc2NKT"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/ChainlinkClient.sol":{"keccak256":"0xf9c4039a2e4ca49bbb9409baf6afcf99a572695d3e5f3c191b7fac6cfa7378e9","urls":["bzz-raw://792875fb40c3723baa0607337a6bd27b5c3bc55502bc8db9981ed71747e9ce52","dweb:/ipfs/QmUWKB9zaaf1ywDd9vWe4JB9Pjtqt1cddjUoGwEiKfP2HP"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol":{"keccak256":"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374","urls":["bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048","dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/interfaces/ENSInterface.sol":{"keccak256":"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64","urls":["bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4","dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/interfaces/LinkTokenInterface.sol":{"keccak256":"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6","urls":["bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8","dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/interfaces/PointerInterface.sol":{"keccak256":"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f","urls":["bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d","dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/vendor/Buffer.sol":{"keccak256":"0x44f15070c50a25a323775c989660d2c2af86530e994973584ddaadb51ab2fe6d","urls":["bzz-raw://6ff6ef1f796e1c1aa0479d6a186cc8d43bdf22b0dad391d4a897bea3a924e38e","dweb:/ipfs/QmY8Zt8X4cqFSEX8GD6YQbThJe1Z3PDuNNKZzDWpCS69Go"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/vendor/CBOR.sol":{"keccak256":"0xabda6c3df28094ac0c2a892108f5655fe7520791bc1cd6e0bd4d11ed261a001d","urls":["bzz-raw://2659de9101e6ba2c1125741adad82c626f2d6681d14487d793c1ad0712e80e49","dweb:/ipfs/QmaEJtv16Ln17Jbkc5kUf5vHrfBeGTmBAX1tVyDHZV2Zxw"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/vendor/ENSResolver.sol":{"keccak256":"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82","urls":["bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda","dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/vendor/Ownable.sol":{"keccak256":"0x3dfd577392b1fde3e54f76a81358fd27c041f30257bb9438f0bb5952e351befa","urls":["bzz-raw://f21d5e72760d89f05ef0eb791eb952fe0688a83dc679b0cf457c556c738aa1ee","dweb:/ipfs/QmVKpY8tKTqaDcaz7D5G9weH8oEKXmfTscZ3WknjBuTqid"]},"https://github.com/smartcontractkit/chainlink/evm-contracts/src/v0.6/vendor/SafeMath.sol":{"keccak256":"0x95dbe2dd5ab8682b99bc3d7d297b621d4237442da160f78d3323ee5c4a06ded3","urls":["bzz-raw://d753308ff4eb43fba6f9ede371a33f707c5818350770dcb078a7d78ac8251361","dweb:/ipfs/Qme64eYKWoTQiP3WhqGHoMqrENNZ9L8SdBLQ2hx5SmzUda"]}},"version":1},"version":1,"checkPoints":[]}