{"address":"0x7D278f21288C637b3943Fbeb78a386ABfFBff983","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_compRateKeeper","type":"address"},{"internalType":"address","name":"_compRateKeeperTimeframe","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aggregatedNormalizedStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aggregatedNormalizedStakeTimeframe","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compRateKeeper","outputs":[{"internalType":"contract CompoundRateKeeper","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compRateKeeperTimeframe","outputs":[{"internalType":"contract CompoundRateKeeper","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epanToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"getRewardAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interestRateTimeframe","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"monitorSecurityMargin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newInterestRate","type":"uint256"}],"name":"setInterestRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newInterestRate","type":"uint256"}],"name":"setInterestRateTimeframe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newInterestRate","type":"uint256"},{"internalType":"uint256","name":"_newInterestRateTimeframe","type":"uint256"}],"name":"setInterestRates","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"stake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"supplyRewardPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"updateCompoundAndStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"updateCompoundAndWithdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateCompoundRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateCompoundRateTimeframe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateCompoundRates","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userStakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"normalizedAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userStakesTimeframe","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"normalizedAmount","type":"uint256"},{"internalType":"uint256","name":"lastStakeTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_isTimeframe","type":"bool"}],"name":"withdraw","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getBalance(bool)":{"params":{"_isTimeframe":"If true, return balance from timeframe structure"}},"getRewardAmount(bool)":{"params":{"_isTimeframe":"If timeframe, calculate reward for user from timeframe structure"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setInterestRateTimeframe(uint256)":{"params":{"_newInterestRate":"New interest rate"}},"setInterestRates(uint256,uint256)":{"params":{"_newInterestRateTimeframe":"New interest rate timeframe"}},"stake(uint256,bool)":{"params":{"_amount":"Amount to stake","_isTimeframe":"If true, stake to timeframe structure"}},"supplyRewardPool(uint256)":{"params":{"_amount":"Token amount that will be added to contract as reward"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateCompoundAndStake(uint256,bool)":{"params":{"_amount":"Amount to stake","_isTimeframe":"If true, stake to timeframe structure"}},"updateCompoundAndWithdraw(uint256,bool)":{"params":{"_amount":"Amount to stake","_isTimeframe":"If true, withdraw from timeframe structure"}},"withdraw(uint256,bool)":{"params":{"_amount":"Amount to withdraw","_isTimeframe":"If true, withdraws from timeframe structure"}}},"version":1},"userdoc":{"kind":"user","methods":{"getBalance(bool)":{"notice":"Returns the staking balance of the user"},"getRewardAmount(bool)":{"notice":"Get reward amount for sender address"},"monitorSecurityMargin()":{"notice":"Get coefficient. Tokens on the contract / total stake + total reward to be paid"},"setInterestRate(uint256)":{"notice":"Set interest rate"},"setInterestRateTimeframe(uint256)":{"notice":"Set interest rate timeframe"},"setInterestRates(uint256,uint256)":{"notice":"Set interest rates"},"stake(uint256,bool)":{"notice":"Stake tokens to user balance"},"supplyRewardPool(uint256)":{"notice":"Add tokens to contract address to be spent as rewards"},"updateCompoundAndStake(uint256,bool)":{"notice":"Update compound rate and stake tokens to user balance"},"updateCompoundAndWithdraw(uint256,bool)":{"notice":"Update compound rate and withdraw tokens from contract"},"updateCompoundRate()":{"notice":"Update compound rate"},"updateCompoundRateTimeframe()":{"notice":"Update compound rate timeframe"},"updateCompoundRates()":{"notice":"Update both compound rates"},"withdraw(uint256,bool)":{"notice":"Withdraw tokens from user balance. Only for timeframe stake"}},"version":1}},"settings":{"compilationTarget":{"Staking2.sol":"EpanStaking"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"Staking2.sol":{"keccak256":"0x2c77d653d58168ad1b1b4be6bfdd81c98e5998ff012a5b9d549140d05feb3670","urls":["bzz-raw://e9c65bf69ca9fb25fbd83c0945e46c40fab729771eede4e10ebbf16f826735fa","dweb:/ipfs/QmWZT91xAkxyN1WtQ1rJKk3ywrq8h7EG7HCzqXraE8ujbt"]}},"version":1},"version":1,"checkPoints":[]}