{"address":"0x1BA2F447E620E3Ec027992d20234A9715a124041","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract ISimpleToken","name":"lpToken","type":"address"},{"indexed":false,"internalType":"address","name":"priceOracle","type":"address"}],"name":"AMMInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"bTokensBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralPaid","type":"uint256"}],"name":"BTokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"bTokensSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralPaid","type":"uint256"}],"name":"BTokensSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"CodeAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"lpAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"DepositAllowedUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isEnforced","type":"bool"},{"indexed":false,"internalType":"uint256","name":"globalLimit","type":"uint256"}],"name":"EnforceDepositLimitsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"redeemer","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateralRemoved","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paymentRemoved","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpTokensBurned","type":"uint256"}],"name":"LpTokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"minter","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateralAdded","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpTokensMinted","type":"uint256"}],"name":"LpTokensMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVolatilityFactor","type":"uint256"}],"name":"VolatilityFactorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"wTokensBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralPaid","type":"uint256"}],"name":"WTokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"wTokensSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralPaid","type":"uint256"}],"name":"WTokensSold","type":"event"},{"inputs":[],"name":"MINIMUM_TRADE_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetPair","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketIndex","type":"uint256"},{"internalType":"uint256","name":"bTokenAmount","type":"uint256"},{"internalType":"uint256","name":"collateralMaximum","type":"uint256"}],"name":"bTokenBuy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IMarket","name":"market","type":"address"},{"internalType":"uint256","name":"bTokenAmount","type":"uint256"}],"name":"bTokenGetCollateralIn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IMarket","name":"market","type":"address"},{"internalType":"uint256","name":"bTokenAmount","type":"uint256"}],"name":"bTokenGetCollateralOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketIndex","type":"uint256"},{"internalType":"uint256","name":"bTokenAmount","type":"uint256"},{"internalType":"uint256","name":"collateralMinimum","type":"uint256"}],"name":"bTokenSell","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timeUntilExpiry","type":"uint256"},{"internalType":"uint256","name":"strike","type":"uint256"},{"internalType":"uint256","name":"currentPrice","type":"uint256"},{"internalType":"uint256","name":"volatility","type":"uint256"}],"name":"calcPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"claimAllExpiredTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IMarket","name":"optionMarket","type":"address"},{"internalType":"uint256","name":"wTokenBalance","type":"uint256"}],"name":"claimExpiredTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"collateralDepositLimits","outputs":[{"internalType":"bool","name":"allowedToDeposit","type":"bool"},{"internalType":"uint256","name":"currentDeposit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enforceDepositLimits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentCollateralPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLogicAddress","outputs":[{"internalType":"address","name":"logicAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketIndex","type":"uint256"}],"name":"getMarket","outputs":[{"internalType":"contract IMarket","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarkets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IMarket","name":"market","type":"address"}],"name":"getPriceForMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"}],"name":"getTokensSaleValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"includeUnclaimed","type":"bool"}],"name":"getTotalPoolValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUnclaimedBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IMarket","name":"market","type":"address"}],"name":"getVirtualReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalDepositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IMarketsRegistry","name":"_registry","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"_priceOracle","type":"address"},{"internalType":"contract IERC20","name":"_paymentToken","type":"address"},{"internalType":"contract IERC20","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_tokenImplementation","type":"address"},{"internalType":"uint16","name":"_tradeFeeBasisPoints","type":"uint16"},{"internalType":"bool","name":"_shouldInvertOraclePrice","type":"bool"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lpToken","outputs":[{"internalType":"contract ISimpleToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"lpTokenMinimum","type":"uint256"}],"name":"provideCapital","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IMarketsRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"lpAddresses","type":"address[]"},{"internalType":"bool[]","name":"allowedToDeposit","type":"bool[]"}],"name":"setCapitalDepositLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_enforceDepositLimits","type":"bool"},{"internalType":"uint256","name":"_globalDepositLimit","type":"uint256"}],"name":"setEnforceDepositLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_volatilityFactor","type":"uint256"}],"name":"setVolatilityFactor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tradeFeeBasisPoints","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAmmImplementation","type":"address"}],"name":"updateAmmImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"volatilityFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"},{"internalType":"bool","name":"sellTokens","type":"bool"},{"internalType":"uint256","name":"collateralMinimum","type":"uint256"}],"name":"withdrawCapital","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"bTokenBuy(uint256,uint256,uint256)":{"details":"Buy bToken of a given market. We supply market index instead of market address to ensure that only supported markets can be traded using this AMM collateralMaximum is used for slippage protection"},"bTokenGetCollateralIn(address,uint256)":{"details":"Calculate amount of collateral required to buy bTokens"},"bTokenGetCollateralOut(address,uint256)":{"details":"Calculate amount of collateral in exchange for selling bTokens"},"bTokenSell(uint256,uint256,uint256)":{"details":"Sell bToken of a given market. We supply market index instead of market address to ensure that only supported markets can be traded using this AMM collateralMaximum is used for slippage protection"},"calcPrice(uint256,uint256,uint256,uint256)":{"details":"Calculate price of bToken based on Black-Scholes approximation. Formula: 0.4 * ImplVol * sqrt(timeUntilExpiry) * currentPrice / strike"},"getPriceForMarket(address)":{"details":"Get price of bToken for a given market"},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}},"stateVariables":{"assetPair":{"details":"This is the keccak256 hash of the concatenation of the collateral and payment token address used to look up the markets in the registry"},"collateralToken":{"details":"The ERC20 tokens used by all the Markets associated with this AMM "},"initialized":{"details":"Flag to ensure initialization can only happen once "},"lpToken":{"details":"The token contract that will track lp ownership of the AMM "},"paymentAndCollateralConversionFactor":{"details":"a factor used in price oracle calculation that takes into account the decimals of the payment and collateral token"},"priceOracle":{"details":"The oracle used to fetch the most recent on-chain price of the collateralToken "},"registry":{"details":"The registry which the AMM will use to lookup individual Markets "},"shouldInvertOraclePrice":{"details":"Chainlink does not give inverse price pairs (i.e. it only gives a BTC / USD price of $14000, not a USD / BTC price of 1 / 14000. Sidenote: yes it is confusing that their BTC / USD price is actually in the inverse units of USD per BTC... but here we are!). So the initializer needs to specify if the price oracle's units match the AMM's price calculation units (in which case shouldInvertOraclePrice == false). Example: If collateralToken == WBTC, and paymentToken = USDC, and we're using the Chainlink price oracle with the .description() == 'BTC / USD', and latestAnswer = 1400000000000 ($14000) then shouldInvertOraclePrice should equal false. If the collateralToken and paymentToken variable values are switched, and we're still using the price oracle 'BTC / USD' (because remember, there is no inverse price oracle) then shouldInvertOraclePrice should equal true."},"tradeFeeBasisPoints":{"details":"Fees on trading "}},"version":1},"userdoc":{"events":{"AMMInitialized(address,address)":{"notice":"Emitted when the amm is created "},"BTokensBought(address,uint256,uint256)":{"notice":"Emitted when a user buys bTokens from the AMM"},"BTokensSold(address,uint256,uint256)":{"notice":"Emitted when a user sells bTokens to the AMM "},"DepositAllowedUpdated(address,bool)":{"notice":"Emitted when a deposit allowance is updated "},"EnforceDepositLimitsUpdated(bool,uint256)":{"notice":"Emitted when the owner updates the enforcement flag "},"LpTokensBurned(address,uint256,uint256,uint256)":{"notice":"Emitted when an LP withdraws collateral "},"LpTokensMinted(address,uint256,uint256)":{"notice":"Emitted when an LP deposits collateral "},"VolatilityFactorUpdated(uint256)":{"notice":"Emitted when the owner updates volatilityFactor "},"WTokensBought(address,uint256,uint256)":{"notice":"Emitted when a user buys wTokens from the AMM"},"WTokensSold(address,uint256,uint256)":{"notice":"Emitted when a user sells wTokens to the AMM "}},"kind":"user","methods":{"claimAllExpiredTokens()":{"notice":"Takes any wTokens from expired Markets the AMM may have and converts them into collateral token which gets added to its liquidity pool"},"claimExpiredTokens(address,uint256)":{"notice":"Claims the wToken on a single expired Market. wTokenBalance should be equal to the amount of the expired Market's wToken owned by the AMM"},"collateralDepositLimits(address)":{"notice":"DISABLED: This variable is no longer being used, but is left it to support backwards compatibility of updating older contracts if needed.  This variable can be removed once all historical contracts are updated. If this variable is removed and an existing contract is graded, it will corrupt the memory layout.  Mapping to track deposit limits. This is intended to be a temporary feature and will only count amounts deposited by an LP. If they withdraw collateral, it will not be subtracted from their current deposit limit to free up collateral that they can deposit later."},"enforceDepositLimits()":{"notice":"Track whether enforcing deposit limits is turned on.  The Owner can update this. "},"getCurrentCollateralPrice()":{"notice":"Get current collateral price expressed in payment token"},"getMarket(uint256)":{"notice":"Get market address by index"},"getMarkets()":{"notice":"List of market addresses that this AMM trades"},"getTokensSaleValue(uint256)":{"notice":"Calculate sale value of pro-rata LP b/wTokens"},"getTotalPoolValue(bool)":{"notice":"Get value of all assets in the pool. Can specify whether to include the value of expired unclaimed tokens"},"getUnclaimedBalances()":{"notice":"Get unclaimed collateral and payment tokens locked in expired wTokens"},"getVirtualReserves(address)":{"notice":"This function determines reserves of a bonding curve for a specific market. Given price of bToken we determine what is the largest pool we can create such that the ratio of its reserves satisfy the given bToken price: Rb / Rw = (1 - Pb) / Pb"},"globalDepositLimit()":{"notice":"Amount that accounts are allowed to deposit if enforcement is turned on "},"initialize(address,address,address,address,address,uint16,bool)":{"notice":"Initialize the contract, and create an lpToken to track ownership "},"provideCapital(uint256,uint256)":{"notice":"LP allows collateral to be used to mint new options bTokens and wTokens will be held in this contract and can be traded back and forth. The amount of lpTokens is calculated based on total pool value"},"setCapitalDepositLimit(address[],bool[])":{"notice":"DISABLED: This feature has been disabled but left in for backwards compatibility. Instead of allowing individual caps, there will be a global cap for deposited liquidity. The owner can update limits on any addresses "},"setEnforceDepositLimits(bool,uint256)":{"notice":"The owner can set the flag to enforce deposit limits "},"setVolatilityFactor(uint256)":{"notice":"The owner can set the volatility factor used to price the options "},"updateAmmImplementation(address)":{"notice":"The owner can update the contract logic address in the proxy itself to upgrade"},"volatilityFactor()":{"notice":"Volatility factor used in the black scholes approximation - can be updated by the owner "},"withdrawCapital(uint256,bool,uint256)":{"notice":"LP can redeem their LP tokens in exchange for collateral If `sellTokens` is true pro-rata active b/wTokens will be sold to the pool in exchange for collateral All expired wTokens will be claimed LP will get pro-rata collateral and payment assets We return collateralTokenSent in order to give user ability to calculate the slippage via a call"}},"notice":"This is an implementation of a minting/redeeming AMM that trades a list of markets with the same collateral and payment assets. For example, a single AMM contract can trade all strikes of WBTC/USDC calls It uses on-chain Black-Scholes approximation and an Oracle price feed to calculate price of an option. It then uses this price to bootstrap a constant product bonding curve to calculate slippage for a particular trade given the amount of liquidity in the pool. External users can buy bTokens with collateral (wToken trading is disabled in this version). When they do this, the AMM will mint new bTokens and wTokens, sell off the side the user doesn't want, and return value to the user. External users can sell bTokens for collateral. When they do this, the AMM will sell a partial amount of assets to get a 50/50 split between bTokens and wTokens, then redeem them for collateral and send back to the user. LPs can provide collateral for liquidity. All collateral will be used to mint bTokens/wTokens for each trade. They will be given a corresponding amount of lpTokens to track ownership. The amount of lpTokens is calculated based on total pool value which includes collateral token, payment token, active b/wTokens and expired/unclaimed b/wTokens LPs can withdraw collateral from liquidity. When withdrawing user can specify if they want their pro-rata b/wTokens to be automatically sold to the pool for collateral. If the chose not to sell then they get pro-rata of all tokens in the pool (collateral, payment, bToken, wToken). If they chose to sell then their bTokens and wTokens will be sold to the pool for collateral incurring slippage. All expired unclaimed wTokens are automatically claimed on each deposit or withdrawal All conversions between bToken and wToken in the AMM will generate fees that will be send to the protocol fees pool (disabled in this version)","version":1}},"settings":{"compilationTarget":{"browser/MinterAmm.sol":"MinterAmm"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/MinterAmm.sol":{"keccak256":"0xd5022519d2f23286a3f17f251a5a4ea3201ca0f863eabd7247d7d603b26b79a3","urls":["bzz-raw://dd9a4d9e999d83adbb025a0723298368c9d8f4f9e2ac8d1e0806a632d5f3291f","dweb:/ipfs/QmdaUVnNgRgg3ZjSB1Y9Ry7GJ1HozN9mmy93PAPPKsdtna"]}},"version":1},"version":1,"checkPoints":[]}