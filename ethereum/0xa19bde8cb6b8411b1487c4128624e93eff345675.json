{"address":"0xA19BDe8CB6b8411B1487c4128624E93EFf345675","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":false,"internalType":"bool","name":"_approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"schoolAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"taxID","type":"string"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"SchoolInformation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"schoolAddress","type":"address"},{"indexed":false,"internalType":"string","name":"courseID","type":"string"},{"indexed":true,"internalType":"string","name":"studentID","type":"string"},{"indexed":false,"internalType":"bytes32","name":"hashDiploma","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"indexDiploma","type":"uint256"}],"name":"StudentLaurated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":true,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_schoolAddress","type":"address"},{"internalType":"string","name":"_studentID","type":"string"},{"internalType":"string","name":"_courseID","type":"string"},{"internalType":"string","name":"_studentName","type":"string"},{"internalType":"string","name":"_courseName","type":"string"},{"internalType":"string","name":"_courseDates","type":"string"},{"internalType":"uint8","name":"_totalClassesInHours","type":"uint8"}],"name":"addDiploma","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_schoolAddress","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_taxID","type":"string"}],"name":"addSchool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"admins","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_approved","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"changeAdminStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_schoolAddress","type":"address"}],"name":"changeSchoolStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"diplomas","outputs":[{"internalType":"string","name":"studentID","type":"string"},{"internalType":"string","name":"courseID","type":"string"},{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"courseName","type":"string"},{"internalType":"string","name":"courseDates","type":"string"},{"internalType":"uint8","name":"totalClassesInHours","type":"uint8"},{"internalType":"bytes32","name":"hashDiploma","type":"bytes32"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"diplomasBySchool","outputs":[{"internalType":"address","name":"schoolAddress","type":"address"},{"internalType":"bytes32","name":"hashDiploma","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_taxID","type":"string"},{"internalType":"address","name":"_schoolAddress","type":"address"}],"name":"editSchool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"idToApproval","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"idToOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"idToUri","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"listDiplomas","outputs":[{"internalType":"address","name":"schoolAddress","type":"address"},{"internalType":"bytes32","name":"hashDiploma","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerToIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"ownerToOperators","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"schoolList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"schools","outputs":[{"internalType":"address","name":"schoolAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"taxID","type":"string"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"searchDiplomaByHash","outputs":[{"components":[{"internalType":"string","name":"studentID","type":"string"},{"internalType":"string","name":"courseID","type":"string"},{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"courseName","type":"string"},{"internalType":"string","name":"courseDates","type":"string"},{"internalType":"uint8","name":"totalClassesInHours","type":"uint8"},{"internalType":"bytes32","name":"hashDiploma","type":"bytes32"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct DiplomaOnBlockchain.StudentDiploma","name":"sd","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_studentID","type":"string"},{"internalType":"string","name":"_courseID","type":"string"}],"name":"searchDiplomaByStudentAndCourse","outputs":[{"components":[{"internalType":"string","name":"studentID","type":"string"},{"internalType":"string","name":"courseID","type":"string"},{"internalType":"string","name":"studentName","type":"string"},{"internalType":"string","name":"courseName","type":"string"},{"internalType":"string","name":"courseDates","type":"string"},{"internalType":"uint8","name":"totalClassesInHours","type":"uint8"},{"internalType":"bytes32","name":"hashDiploma","type":"bytes32"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct DiplomaOnBlockchain.StudentDiploma","name":"sd","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"supportedInterfaces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_diplomaHash","type":"bytes32"}],"name":"tokenURIByHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"author":"Jeff Prestes","kind":"dev","methods":{"approve(address,uint256)":{"details":"Set or reaffirm the approved address for an NFT. This function can be changed to payable.","params":{"_approved":"Address to be approved for the given NFT ID.","_tokenId":"ID of the token to be approved."}},"balanceOf(address)":{"details":"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.","params":{"_owner":"Address for whom to query the balance."},"returns":{"_0":"Balance of _owner."}},"changeAdminStatus(address)":{"details":"Change status (or add) of an address in admin map","params":{"_admin":"admin address to have her status changed."}},"getApproved(uint256)":{"details":"Get the approved address for a single NFT.","params":{"_tokenId":"ID of the NFT to query the approval of."},"returns":{"_0":"Address that _tokenId is approved for."}},"isApprovedForAll(address,address)":{"details":"Checks if `_operator` is an approved operator for `_owner`.","params":{"_operator":"The address that acts on behalf of the owner.","_owner":"The address that owns the NFTs."},"returns":{"_0":"True if approved for all, false otherwise."}},"name()":{"details":"Returns a descriptive name for a collection of NFTokens.","returns":{"_name":"Representing name."}},"ownerOf(uint256)":{"details":"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.","params":{"_tokenId":"The identifier for an NFT."},"returns":{"_owner":"Address of _tokenId owner."}},"safeTransferFrom(address,address,uint256)":{"details":"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.","params":{"_from":"The current owner of the NFT.","_to":"The new owner.","_tokenId":"The NFT to transfer."}},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.","params":{"_data":"Additional data with no specified format, sent in call to `_to`.","_from":"The current owner of the NFT.","_to":"The new owner.","_tokenId":"The NFT to transfer."}},"setApprovalForAll(address,bool)":{"details":"Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.","params":{"_approved":"True if the operators is approved, false to revoke approval.","_operator":"Address to add to the set of authorized operators."}},"supportsInterface(bytes4)":{"details":"Function to check which interfaces are suported by this contract.","params":{"_interfaceID":"Id of the interface."},"returns":{"_0":"True if _interfaceID is supported, false otherwise."}},"symbol()":{"details":"Returns an abbreviated name for NFTokens.","returns":{"_symbol":"Representing symbol."}},"tokenByIndex(uint256)":{"details":"Returns the token identifier for the `_index`th NFT. Sort order is not specified.","params":{"_index":"A counter less than `totalSupply()`."},"returns":{"_0":"Token id."}},"tokenOfOwnerByIndex(address,uint256)":{"details":"returns the n-th NFT ID from a list of owner's tokens.","params":{"_index":"Index number representing n-th token in owner's list of tokens.","_owner":"Token owner's address."},"returns":{"_0":"Token id."}},"tokenURI(uint256)":{"details":"A distinct URI (RFC 3986) for a given NFT.","params":{"_tokenId":"Id for which we want uri."},"returns":{"_0":"URI of _tokenId."}},"tokenURIByHash(bytes32)":{"details":"A distinct URI (RFC 3986) for a given NFT.","params":{"_diplomaHash":"Diploma Hash for which diploma we want uri."},"returns":{"_0":"URI of _diplomaHash."}},"totalSupply()":{"details":"Returns a count of valid NFTs tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address.","returns":{"_0":"Total supply of NFTs."}},"transferFrom(address,address,uint256)":{"details":"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.","params":{"_from":"The current owner of the NFT.","_to":"The new owner.","_tokenId":"The NFT to transfer."}}},"stateVariables":{"MAGIC_ON_ERC721_RECEIVED":{"details":"Magic value of a smart contract that can recieve NFT. Equal to: bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))."},"admins":{"details":"Contract's admins"},"idToApproval":{"details":"Mapping from NFT ID to approved address."},"idToOwner":{"details":"A mapping from NFT ID to the address that owns it."},"idToOwnerIndex":{"details":"Mapping from NFT ID to its index in the owner tokens list."},"idToUri":{"details":"Mapping from NFT ID to metadata uri."},"ownerToIds":{"details":"Mapping from owner to list of owned NFT IDs."},"ownerToNFTokenCount":{"details":"Mapping from owner address to count of his tokens."},"ownerToOperators":{"details":"Mapping from owner address to mapping of operator addresses."},"supportedInterfaces":{"details":"Mapping of supported intefraces."}},"title":"It represents a Diploma laurated by an educational institucion or  certification of an event attendance.","version":1},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."},"getApproved(uint256)":{"notice":"Throws if `_tokenId` is not a valid NFT."},"safeTransferFrom(address,address,uint256)":{"notice":"This works identically to the other function with an extra data parameter, except this function just sets data to \"\""},"safeTransferFrom(address,address,uint256,bytes)":{"notice":"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."},"setApprovalForAll(address,bool)":{"notice":"This works even if sender doesn't own any tokens at the time."},"supportedInterfaces(bytes4)":{"notice":"You must not set element 0xffffffff to true."},"transferFrom(address,address,uint256)":{"notice":"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."}},"version":1}},"settings":{"compilationTarget":{"contracts/dob.sol":"DiplomaOnBlockchain"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/dob.sol":{"keccak256":"0x85e8c3992685fdce20523e383ed3ab2e737bd25ad83390be38b6b552a2e35444","license":"UNLICENSED","urls":["bzz-raw://99cb00ab5cfa115b153a4dc10c4a5ca30b440179962606aca72fb9dd94268804","dweb:/ipfs/Qmf83PCtEbXFoKs8UnVF3j9K8WSuEeEUo7JjRrZcBTksfo"]}},"version":1},"version":1,"checkPoints":[]}