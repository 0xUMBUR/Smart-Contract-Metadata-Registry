{"address":"0xF68FC67eAcA8aa48b4eF28842AB3d6F043713b20","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"uint32","name":"tokenID","type":"uint32"}],"name":"AddToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"batchNum","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"l1UserTxsLen","type":"uint16"}],"name":"ForgeBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"forgeL1L2BatchTimeout","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"feeAddToken","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"withdrawalDelay","type":"uint64"}],"name":"InitializeHermezEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"queueIndex","type":"uint32"},{"indexed":true,"internalType":"uint8","name":"position","type":"uint8"},{"indexed":false,"internalType":"bytes","name":"l1UserTx","type":"bytes"}],"name":"L1UserTxEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"b","type":"bytes"}],"name":"LogData","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"i","type":"uint256"}],"name":"LogInput","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"bjj","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"r","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"s","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"v","type":"uint8"}],"name":"LogSig","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFeeAddToken","type":"uint256"}],"name":"UpdateFeeAddToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"newForgeL1L2BatchTimeout","type":"uint8"}],"name":"UpdateForgeL1L2BatchTimeout","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint48","name":"idx","type":"uint48"},{"indexed":true,"internalType":"uint32","name":"numExitRoot","type":"uint32"},{"indexed":true,"internalType":"bool","name":"instantWithdraw","type":"bool"}],"name":"WithdrawEvent","type":"event"},{"inputs":[],"name":"ABSOLUTE_MAX_L1L2BATCHTIMEOUT","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ACCOUNT_CREATION_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"AUTHORISE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EIP712DOMAIN_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HERMEZ_NETWORK_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"babyjub","type":"bytes32"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"name":"_checkSig","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"babyPubKey","type":"uint256"},{"internalType":"uint48","name":"fromIdx","type":"uint48"},{"internalType":"uint40","name":"loadAmountF","type":"uint40"},{"internalType":"uint40","name":"amountF","type":"uint40"},{"internalType":"uint32","name":"tokenID","type":"uint32"},{"internalType":"uint48","name":"toIdx","type":"uint48"},{"internalType":"bytes","name":"permit","type":"bytes"}],"name":"addL1Transaction","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"uint48","name":"","type":"uint48"}],"name":"exitNullifierMap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"exitRootsMap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeAddToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint48","name":"newLastIdx","type":"uint48"},{"internalType":"uint256","name":"newStRoot","type":"uint256"},{"internalType":"uint256","name":"newExitRoot","type":"uint256"},{"internalType":"bytes","name":"encodedL1CoordinatorTx","type":"bytes"},{"internalType":"bytes","name":"l1L2TxsData","type":"bytes"},{"internalType":"bytes","name":"feeIdxCoordinator","type":"bytes"},{"internalType":"uint8","name":"verifierIdx","type":"uint8"},{"internalType":"bool","name":"l1Batch","type":"bool"},{"internalType":"uint256[2]","name":"proofA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"proofB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"proofC","type":"uint256[2]"}],"name":"forgeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"forgeL1L2BatchTimeout","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"l1L2TxsDataHashMap","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastForgedBatch","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastIdx","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastL1L2Batch","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"mapL1TxQueue","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextL1FillingQueue","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextL1ToForgeQueue","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registerTokensCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rollupVerifiers","outputs":[{"internalType":"contract VerifierRollupInterface","name":"verifierInterface","type":"address"},{"internalType":"uint256","name":"maxTx","type":"uint256"},{"internalType":"uint256","name":"nLevels","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rollupVerifiersLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"stateRootMap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenHEZ","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenMap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Retrieve the DOMAIN_SEPARATOR hash","returns":{"domainSeparator":"hash used for sign messages"}},"_checkSig(bytes32,bytes32,bytes32,uint8)":{"details":"Retrieve ethereum address from a (defaultMessage + babyjub) signature","params":{"babyjub":"Public key babyjubjub represented as point: sign + (Ay)","r":"Signature parameter","s":"Signature parameter","v":"Signature parameter"},"returns":{"_0":"Ethereum address recovered from the signature"}},"addL1Transaction(uint256,uint48,uint40,uint40,uint32,uint48,bytes)":{"details":"Create a new rollup l1 user transaction","params":{"amountF":"Amount transfered between L2 accounts","babyPubKey":"Public key babyjubjub represented as point: sign + (Ay)","fromIdx":"Index leaf of sender account or 0 if create new account","loadAmountF":"Amount from L1 to L2 to sender account or new account","toIdx":"Index leaf of recipient account, or _EXIT_IDX if exit, or 0 if not transfer Events: `L1UserTxEvent`","tokenID":"Token identifier"}},"constructor":{"details":"Initializer function (equivalent to the constructor). Since we use upgradeable smartcontracts the state vars have to be initialized here."},"forgeBatch(uint48,uint256,uint256,bytes,bytes,bytes,uint8,bool,uint256[2],uint256[2][2],uint256[2])":{"details":"Forge a new batch providing the L2 Transactions, L1Corrdinator transactions and the proof. If the proof is succesfully verified, update the current state, adding a new state and exit root. In order to optimize the gas consumption the parameters `encodedL1CoordinatorTx`, `l1L2TxsData` and `feeIdxCoordinator` are read directly from the calldata using assembly with the instruction `calldatacopy`","params":{"encodedL1CoordinatorTx":"Encoded L1-coordinator transactions","feeIdxCoordinator":"Encoded idx accounts of the coordinator where the fees will be payed","l1Batch":"Indicates if this batch will be L2 or L1-L2","l1L2TxsData":"Encoded l2 data","newExitRoot":"New exit root","newLastIdx":"New total rollup accounts","newStRoot":"New state root","proofA":"zk-snark input","proofB":"zk-snark input","proofC":"zk-snark input Events: `ForgeBatch`","verifierIdx":"Verifier index"}},"getChainId()":{"returns":{"chainId":"The current chainId where the smarctoncract is executed"}},"registerTokensCount()":{"details":"Retrieve the number of tokens added in rollup","returns":{"_0":"Number of tokens added in rollup"}},"rollupVerifiersLength()":{"details":"Retrieve the number of rollup verifiers","returns":{"_0":"Number of verifiers"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/Hermez.sol":"Hermez"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"HermezHelpers.sol":{"keccak256":"0x92531946d882aeb999ebccee256b7a6fe1f77012b516632d47cfc74dd9e09b57","license":"AGPL-3.0","urls":["bzz-raw://b39dd5f5380f4f8f6df00c17ee8c266794bffc329da7d12de8c92396805c03bd","dweb:/ipfs/QmS5uQYujYorhkUH9vddgpxWapAGKHNkG6HdT7JtVZLfxZ"]},"browser/Hermez.sol":{"keccak256":"0xd4b9d3f763a96b0ccd0844125d3b631d26beee0188e09b3ee7888a2b9c3a466e","license":"AGPL-3.0","urls":["bzz-raw://0e43990fea87712e8fa9fffdd41c6b7f43a9a154be5b8deed1cc0b8feed44413","dweb:/ipfs/Qmf4o2Fg9Pdc9X7Ku7SwPmFxqsqqKueXwLwUKoHU4RV13v"]}},"version":1},"version":1,"checkPoints":[]}