{"address":"0xe3aF60f1F08e489503d9827210c73E468400c7ec","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"SetURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allocatedETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOfETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"intervalNo","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"calcProfitShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"intervalNo","type":"uint256"}],"name":"collectUnclaimed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentIntervalNo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentIntervalSec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"minter","type":"address"}],"name":"init","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isInitialised","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"minterAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256[]","name":"intervalNos","type":"uint256[]"},{"internalType":"uint256[]","name":"amts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"intervalNo","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAddress","type":"address"}],"name":"setCompanyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supplyPerInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Lee Thomas, ooda space ltd, email @ ooda.space","methods":{"SetURI(string)":{"params":{"newuri":"- the uri"}},"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length."},"calcProfitShare(uint256,uint256)":{"params":{"amt":"- the number of ERC1155 tokens to be exchanged","intervalNo":"- the interval number id (token Id) of the ToPS ERC1155 tokens to be exchanged"},"returns":{"_0":"intervalNoETH - the amount of ETH exchangable with the ToPS ERC1155 tokens, nextTknAmt the number of the next interval's ERC1155 ToPS exchangeable"}},"collectUnclaimed(uint256)":{"params":{"intervalNo":"the interval number"}},"init(address)":{"params":{"minter":"- The new address of the oodaspaceIdeaTokens ERC721 contract"}},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"mint(address)":{"params":{"receiver":"- the address that will control the minted token(s)."}},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"params":{"amts":"- the amounts of ToPS received, per intervalNo","data":"- unused parameter (required for ERC1155 standard)","intervalNos":"- the interval numbers of the ToPS tokens received","operator":"- the operator contract address of the ERC1155s (this contract!)","sender":"- the account sending the ERC1155 tokens"},"returns":{"_0":"this function signature (required for ERC1155 standard)"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"params":{"amt":"- the amount of ToPS received","data":"- unused parameter (required for ERC1155 standard)","intervalNo":"- the intervalNo of the ToPS tokens received","operator":"- the operator contract address of the ERC1155s (this contract!)","sender":"- the account sending the ERC1155 tokens"},"returns":{"_0":"this function signature (required for ERC1155 standard)"}},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"setCompanyAddress(address)":{"params":{"newAddress":"- The new address"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substituion mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."},"withdrawETH(uint256)":{"params":{"amt":"the amount of ether the sender will withdraw"}}},"title":"ooda space Tokens of Profit Share (ToPS)"},"userdoc":{"methods":{"SetURI(string)":{"notice":"sets the token uri"},"calcProfitShare(uint256,uint256)":{"notice":"This function calculates the ETH and ToPS that can be exchanged for a given interval's tokens"},"collectUnclaimed(uint256)":{"notice":"This function allows the company to collect unclaimed or residual ETH after > 3 years (for each interval)"},"init(address)":{"notice":"Initialises contract link to oodaspaceIdeaTokens ERC721 contract"},"mint(address)":{"notice":"mints a new ERC1155 tokenthe tokens are minted in per-interval batches, this is to allow profit share calculations"},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"notice":"This function is called on reciept of ERC1155 tokens.It exchanges the received token for ETH and ToPS for the following interval)"},"onERC1155Received(address,address,uint256,uint256,bytes)":{"notice":"This function is called on reciept of ERC1155 tokens.It exchanges the received token for ETH and ToPS for the following interval)"},"setCompanyAddress(address)":{"notice":"updates the address that represents the company"},"withdrawETH(uint256)":{"notice":"This function allows users to withdraw their ether"}},"notice":"mints ERC1155 tokens that can exchanged for a share in oodaspaceIdeaTokens contract profits.ERC1155 tokens are batched by interval number (intervals are a minimum of 7 days)"}},"settings":{"compilationTarget":{"browser/Untitled.sol":"oodaspaceTokensOfProfitShare"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Untitled.sol":{"keccak256":"0x252f8e8f64b9aef019f7ba8e75e700d7bdd98ad775d7dceb74f08eaea70cdf86","urls":["bzz-raw://4655b23a0a22e9790591539a240bf2b6010ab4e8658ff31a69da0c6a7c997d2f","dweb:/ipfs/QmYpY91Rv6MKJS6nXyC1aje1h7YBtSnmpnfZnpKTaVxqSY"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/introspection/ERC165.sol":{"keccak256":"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74","urls":["bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a","dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/introspection/IERC165.sol":{"keccak256":"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453","urls":["bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf","dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/ERC1155.sol":{"keccak256":"0x96ffa6401744ecd52809dd32f8f597c0d2fe1bbe79d653c1e67c0f78cdcc108d","urls":["bzz-raw://fb3763c6852579abe95b493e050f6797766660e365ff4f83df949b2c702d57b9","dweb:/ipfs/QmTfFS29GdR2w9W8M4tTYwEHiG9wuYkivvvuMCDj8cWBq5"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/ERC1155Burnable.sol":{"keccak256":"0x2b30e87a7188124f4a198195f7d660149e1ed59ec587c1122239a266ec173937","urls":["bzz-raw://645e8db35eb4e70a94ef52d9d994f7442b550c939df2e860b60939c6cbaea284","dweb:/ipfs/QmZN92zh4xMa1DrxA2223cfWsvrj25GNXjT1DDbDpUzHJ4"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/ERC1155Receiver.sol":{"keccak256":"0x4d9b42828f5a2ea16ea396377904448f1ef8ce17babf06d6259b3e4cf65d6c32","urls":["bzz-raw://bdba169baa86bd0277651759a6dee86574a8e277528de4df39970077baf97a16","dweb:/ipfs/QmdzqcK7xPaYZqXqYLakD1bXe26zunWCbjyrvmoVpgTYeV"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/IERC1155.sol":{"keccak256":"0xd9419564852ea941cb2a393aa489651a3174785436244e3e02681b587a184820","urls":["bzz-raw://6ff6a41c418e3b70628ec100d5deeb2d96e96029472f1309a1d474a9f7bc69c6","dweb:/ipfs/QmZkKmXCbTZD6MrxDJSdxfYZdoDYPSDGK6NwR7msmudowF"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/IERC1155MetadataURI.sol":{"keccak256":"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1","urls":["bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab","dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol":{"keccak256":"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5","urls":["bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa","dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x683f55ad2c97df3b3cc0345d77ca71c658c663e36451ae846ad765e2c86a0a16","urls":["bzz-raw://7a8a0119c0979108889c340c168811ef0757845b6c5f00de30bdd74a12c81019","dweb:/ipfs/Qmejzc6Th9ppFvfFwcXVt23ue1jMiwiScs3dNmisqMAQ28"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x227bafd3e165b13f5d98c42a44376e48d41f4a265db8803f2707faaeae9659aa","urls":["bzz-raw://c9aa7959a30871669ce46172cd117b084b607d602d9ce695ce79005582b0b69b","dweb:/ipfs/QmXZUWeLXmArQinHL4RnacJLT22GvCExqREYM6pHLX7CX9"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol":{"keccak256":"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0","urls":["bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f","dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol":{"keccak256":"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538","urls":["bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127","dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7","urls":["bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694","dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/Address.sol":{"keccak256":"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390","urls":["bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37","dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/EnumerableMap.sol":{"keccak256":"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b","urls":["bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e","dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]},"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/Strings.sol":{"keccak256":"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558","urls":["bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969","dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q"]}},"version":1},"version":1,"checkPoints":[]}