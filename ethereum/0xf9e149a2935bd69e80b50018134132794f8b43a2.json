{"address":"0xF9E149A2935BD69e80B50018134132794F8B43a2","name":"","metadata":{"compiler":{"version":"0.7.0+commit.9e61f92b"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_founderContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newName","type":"string"}],"name":"NameChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newSymbol","type":"string"}],"name":"SymbolChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"_remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"_success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"_balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_abqAmount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newName","type":"string"}],"name":"changeName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newSymbol","type":"string"}],"name":"changeSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"founderContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"uint256","name":"_abqAmount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"_totalSupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"_success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"_success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the amount which _spender is still allowed to withdraw from _owner.","params":{"_owner":"The address of the account owning tokens.","_spender":"The address of the account able to transfer the tokens."}},"approve(address,uint256)":{"details":"Allows _spender to withdraw from your account multiple times, up to the _value amount. If this function is called again it overwrites the current allowance with _value.","params":{"_spender":"The address of the account able to transfer the tokens.","_value":"The amount of tokens to be approved for transfer."}},"balanceOf(address)":{"details":"Returns the account balance of another account with address _owner.","params":{"_owner":"The address from which the balance will be retrieved."}},"burn(uint256)":{"params":{"_abqAmount":"The amount of tokens to burn from the msg.sender account."}},"changeName(string)":{"params":{"_newName":"The new name for the token"}},"changeOwner(address)":{"params":{"_newOwner":"The address that should be the new owner."}},"changeSymbol(string)":{"params":{"_newSymbol":"The new symbol for the token."}},"decimals()":{"details":"Returns the number of decimals the token uses."},"mint(address,uint256)":{"params":{"_abqAmount":"The amount of ABQ to mint.","_target":"The address to mint the tokens to."}},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the total token supply."},"transfer(address,uint256)":{"details":"Transfers _value amount of tokens to address _to, and MUST fire the Transfer event. The function SHOULD throw if the _from account balance does not have enough tokens to spend.","params":{"_to":"The address of the recipient.","_value":"The amount of token to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfers _value amount of tokens from address _from to address _to, and MUST fire the Transfer event.","params":{"_from":"The address of the sender.","_to":"The address of the recipient.","_value":"The amount of token to be transferred."}}},"version":1},"userdoc":{"kind":"user","methods":{"burn(uint256)":{"notice":"Allow the sender to burn tokens in their account."},"changeName(string)":{"notice":"Allow the owner to change the name of the token. "},"changeOwner(address)":{"notice":"Allows the owner to change the ownership to another address."},"changeSymbol(string)":{"notice":"Allow the owner to change the symbol of the token."},"founderContract()":{"notice":"The address for the founders' contract."},"mint(address,uint256)":{"notice":"Allows the owner to mint tokens."},"owner()":{"notice":"The owner of the ABQ Token. This is the Aardbanq DAO."}},"notice":"This is the ABQ token. It allows the owner (the Aardbanq DAO) to mint new tokens. It also allow the  owner to change owners. The ABQ token has 18 decimals.","version":1}},"settings":{"compilationTarget":{"contracts/AbqErc20.sol":"AbqErc20"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/AbqErc20.sol":{"keccak256":"0x04758e7e7846f5a17b9fdb6ee7d36a28bef7f2afa9dc4c73bf408de1c45aa91a","license":"MIT","urls":["bzz-raw://8eacdcfc071918926ca2b1888bac0d7e7ba30348ee005430ee1a18832081c998","dweb:/ipfs/QmXqhhavhKPrB7k7aKXbtWo6cDkTVWesCASeDv273UYK53"]},"contracts/SafeMathTyped.sol":{"keccak256":"0xa452311a5b3f8388fbfb010a27ddd48cbb1d9ea4d0f416765b5b28d3dc40baf7","license":"MIT","urls":["bzz-raw://eac915f8cf0df8fe8dc05b0cb0c3f4a4354aeaead80fe467b80d17609ceb7b51","dweb:/ipfs/QmYsGxd73QZ4qYCDiv8Wepwjs2xDBpsf7RCYopZFGhgqkD"]}},"version":1},"version":1,"checkPoints":[]}