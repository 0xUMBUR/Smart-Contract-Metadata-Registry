{"address":"0xC46dD9A270499D4daDC30377906575E589b1Ce0f","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_manager","type":"address"},{"internalType":"address","name":"_swiftResolverToken","type":"address"},{"internalType":"address","name":"_userRewardToken","type":"address"},{"internalType":"address","name":"_wETH","type":"address"},{"internalType":"uint256","name":"_MAX_DURATION","type":"uint256"},{"internalType":"uint256","name":"_resolutionRate","type":"uint256"},{"internalType":"uint256","name":"_swiftResolverTokenBalance","type":"uint256"},{"internalType":"uint256","name":"_userReward","type":"uint256"},{"internalType":"string","name":"_lockerTerms","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"string","name":"terms","type":"string"}],"name":"AddMarketTerms","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"string","name":"terms","type":"string"}],"name":"AmendMarketTerms","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"clientOracle","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"}],"name":"AssignClientOracle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedResolver","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"}],"name":"ClientProposeResolver","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sum","type":"uint256"}],"name":"ConfirmLocker","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"client","type":"address"},{"indexed":false,"internalType":"address","name":"clientOracle","type":"address"},{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"termination","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"},{"indexed":false,"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"DepositLocker","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"}],"name":"Lock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedResolver","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"}],"name":"ProviderProposeResolver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"client","type":"address"},{"indexed":false,"internalType":"address","name":"clientOracle","type":"address"},{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"termination","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"},{"indexed":false,"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"RegisterLocker","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"milestone","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"}],"name":"Release","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"client","type":"address"},{"indexed":true,"internalType":"address","name":"counterparty","type":"address"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sum","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"},{"indexed":false,"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"RequestLockerResolution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"uint256","name":"clientAward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"providerAward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"resolutionFee","type":"uint256"},{"indexed":false,"internalType":"string","name":"resolution","type":"string"}],"name":"Resolve","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"details","type":"string"}],"name":"TributeToManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"manager","type":"address"},{"indexed":false,"internalType":"address","name":"swiftResolverToken","type":"address"},{"indexed":false,"internalType":"address","name":"userRewardToken","type":"address"},{"indexed":false,"internalType":"address","name":"wETH","type":"address"},{"indexed":false,"internalType":"uint256","name":"MAX_DURATION","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"resolutionRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swiftResolverTokenBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"userReward","type":"uint256"},{"indexed":false,"internalType":"string","name":"lockerTerms","type":"string"}],"name":"UpdateLockerSettings","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"swiftResolver","type":"address"},{"indexed":false,"internalType":"string","name":"details","type":"string"},{"indexed":false,"internalType":"bool","name":"registered","type":"bool"}],"name":"UpdateSwiftResolverStatus","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"client","type":"address"},{"indexed":false,"internalType":"uint256","name":"registration","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"MAX_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"terms","type":"string"}],"name":"addMarketTerms","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"adrs","outputs":[{"internalType":"address","name":"proposedResolver","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint8","name":"clientProposedResolver","type":"uint8"},{"internalType":"uint8","name":"providerProposedResolver","type":"uint8"},{"internalType":"uint256","name":"clientAward","type":"uint256"},{"internalType":"uint256","name":"providerAward","type":"uint256"},{"internalType":"uint256","name":"resolutionRate","type":"uint256"},{"internalType":"string","name":"resolution","type":"string"},{"internalType":"bool","name":"swiftResolver","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"string","name":"terms","type":"string"}],"name":"amendMarketTerms","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"clientOracle","type":"address"},{"internalType":"uint256","name":"registration","type":"uint256"}],"name":"assignClientOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposedResolver","type":"address"},{"internalType":"uint256","name":"registration","type":"uint256"},{"internalType":"string","name":"details","type":"string"}],"name":"clientProposeResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"registration","type":"uint256"}],"name":"confirmLocker","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"clientOracle","type":"address"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"uint256","name":"termination","type":"uint256"},{"internalType":"string","name":"details","type":"string"},{"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"depositLocker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"clientOracle","type":"address"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256","name":"termination","type":"uint256"},{"internalType":"string","name":"details","type":"string"},{"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"depositLockerSingleMilestone","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"latestLockerRegistration","outputs":[{"internalType":"uint256","name":"latest","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"registration","type":"uint256"},{"internalType":"string","name":"details","type":"string"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"lockerRegistrations","outputs":[{"internalType":"uint256[]","name":"registered","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockerTerms","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lockers","outputs":[{"internalType":"address","name":"client","type":"address"},{"internalType":"address","name":"clientOracle","type":"address"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint8","name":"confirmed","type":"uint8"},{"internalType":"uint8","name":"locked","type":"uint8"},{"internalType":"uint256","name":"currentMilestone","type":"uint256"},{"internalType":"uint256","name":"milestones","type":"uint256"},{"internalType":"uint256","name":"released","type":"uint256"},{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256","name":"termination","type":"uint256"},{"internalType":"string","name":"details","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"marketTerms","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketTermsCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"registration","type":"uint256"}],"name":"providerAmounts","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proposedResolver","type":"address"},{"internalType":"uint256","name":"registration","type":"uint256"},{"internalType":"string","name":"details","type":"string"}],"name":"providerProposeResolver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"client","type":"address"},{"internalType":"address","name":"clientOracle","type":"address"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"uint256","name":"termination","type":"uint256"},{"internalType":"string","name":"details","type":"string"},{"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"registerLocker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"registration","type":"uint256"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"counterparty","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"string","name":"details","type":"string"},{"internalType":"bool","name":"swiftResolver","type":"bool"}],"name":"requestLockerResolution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"resolutionRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"resolutions","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"resolutionsCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"clientAward","type":"uint256"},{"internalType":"uint256","name":"providerAward","type":"uint256"},{"internalType":"uint256","name":"registration","type":"uint256"},{"internalType":"string","name":"resolution","type":"string"}],"name":"resolve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"swiftResolverRegistrations","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swiftResolverToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swiftResolverTokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"details","type":"string"}],"name":"tributeToManager","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"},{"internalType":"address","name":"_swiftResolverToken","type":"address"},{"internalType":"address","name":"_userRewardToken","type":"address"},{"internalType":"address","name":"_wETH","type":"address"},{"internalType":"uint256","name":"_MAX_DURATION","type":"uint256"},{"internalType":"uint256","name":"_resolutionRate","type":"uint256"},{"internalType":"uint256","name":"_swiftResolverTokenBalance","type":"uint256"},{"internalType":"uint256","name":"_userReward","type":"uint256"},{"internalType":"string","name":"_lockerTerms","type":"string"}],"name":"updateLockerSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"details","type":"string"},{"internalType":"bool","name":"registered","type":"bool"}],"name":"updateSwiftResolverStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"userReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"userRewardToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"registration","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"LexDAO LLC.","kind":"dev","methods":{"addMarketTerms(string)":{"params":{"terms":"New `terms` to add to LXL market. "}},"amendMarketTerms(uint256,string)":{"params":{"index":"Targeted location in `marketTerms` array.","terms":"Amended `terms` to add to LXL market. "}},"assignClientOracle(address,uint256)":{"params":{"clientOracle":"Account that can help call `release()` and `withdraw()` (default to `client` if unsure).","registration":"Registered LXL number."}},"clientProposeResolver(address,uint256,string)":{"details":"LXL `client` calls to update `resolver` selection - if matches `provider` suggestion or confirmed, `resolver` updates. ","params":{"details":"Context re: proposed `resolver`.","proposedResolver":"Proposed account to resolve LXL.","registration":"Registered LXL number."}},"confirmLocker(uint256)":{"details":"If LXL `token` is wETH, msg.value can be wrapped into wETH in single call.","params":{"registration":"Registered LXL number."}},"depositLocker(address,address,address,address,uint256[],uint256,string,bool)":{"details":"If LXL `token` is wETH, msg.value can be wrapped into wETH in single call.","params":{"amount":"Array of milestone `amount`s to be sent to `provider` on call of `release()`.","clientOracle":"Account that can help call `release()` and `withdraw()` (default to `client` if unsure).","details":"Context re: LXL.","provider":"Account to receive registered `amount`s.","resolver":"Account that can call `resolve()` to award `sum` remainder between LXL parties.","swiftResolver":"If `true`, `sum` remainder can be resolved by holders of `swiftResolverToken`.","termination":"Exact `termination` date in seconds since epoch.","token":"Token address for `amount` deposit."}},"depositLockerSingleMilestone(address,address,address,address,uint256,uint256,string,bool)":{"details":"If LXL `token` is wETH, msg.value can be wrapped into wETH in single call.","params":{"clientOracle":"Account that can help call `release()` and `withdraw()` (default to `client` if unsure).","details":"Context re: LXL.","provider":"Account to receive registered `amount`s.","resolver":"Account that can call `resolve()` to award `sum` remainder between LXL parties.","sum":"Lump `sum` to be sent to `provider` on call of `release()`.","swiftResolver":"If `true`, `sum` remainder can be resolved by holders of `swiftResolverToken`.","termination":"Exact `termination` date in seconds since epoch.","token":"Token address for `amount` deposit."}},"lock(uint256,string)":{"details":"`lock()` can be called repeatedly to allow LXL parties to continue to provide context until resolution. ","params":{"details":"Context re: lock / dispute.","registration":"Registered LXL number."}},"providerProposeResolver(address,uint256,string)":{"details":"LXL `provider` calls to update `resolver` selection - if matches `client` suggestion or confirmed, `resolver` updates. ","params":{"details":"Context re: proposed `resolver`.","proposedResolver":"Proposed account to resolve LXL.","registration":"Registered LXL number."}},"registerLocker(address,address,address,address,address,uint256[],uint256,string,bool)":{"params":{"amount":"Array of milestone `amount`s to be sent to `provider` on call of `release()`.","client":"Account to provide `sum` deposit and call `release()` of registered `amount`s.","clientOracle":"Account that can help call `release()` and `withdraw()` (default to `client` if unsure).","details":"Context re: LXL.","provider":"Account to receive registered `amount`s.","resolver":"Account that can call `resolve()` to award `sum` remainder between LXL parties.","swiftResolver":"If `true`, `sum` remainder can be resolved by holders of `swiftResolverToken`.","termination":"Exact `termination` date in seconds since epoch.","token":"Token address for `amount` deposit."}},"release(uint256)":{"params":{"registration":"Registered LXL number."}},"requestLockerResolution(address,address,address,uint256,string,bool)":{"details":"If LXL `token` is wETH, msg.value can be wrapped into wETH in single call. ","params":{"counterparty":"Other account (`provider`) that can receive award from `resolver`.","details":"Context re: resolution request.","resolver":"Account that can call `resolve()` to award `sum` between LXL parties.","sum":"Lump `sum` amount for resolution.","swiftResolver":"If `true`, `sum` can be resolved by holders of `swiftResolverToken`.","token":"Token address for `sum`."}},"resolve(uint256,uint256,uint256,string)":{"params":{"clientAward":"Remainder awarded to `client`.","providerAward":"Remainder awarded to `provider`.","registration":"Registered LXL number.","resolution":"Context re: resolution."}},"tributeToManager(string)":{"params":{"details":"Describes context for ether transfer."}},"updateLockerSettings(address,address,address,address,uint256,uint256,uint256,uint256,string)":{"params":{"_MAX_DURATION":"Time limit in seconds on token lockup - default 63113904 (2-year).","_lockerTerms":"General terms wrapping LXL.  ","_manager":"Account that governs LXL contract settings.","_resolutionRate":"Rate to determine resolution fee for locker (e.g., 20 = 5% of remainder).","_swiftResolverToken":"Token to mark participants in swift resolution.","_swiftResolverTokenBalance":"Token balance required to perform swift resolution. ","_userReward":"Reward amount granted to LXL users in `userRewardToken`.","_userRewardToken":"Token for LXL user rewards.","_wETH":"Standard contract reference to wrap ether. "}},"updateSwiftResolverStatus(string,bool)":{"details":"Swift resolvers must first confirm to participate and can continue with details / cancel LXL service.  ","params":{"details":"Context re: status update.","registered":"If `true`, swift resolver can participate in LXL resolution."}},"withdraw(uint256)":{"details":"`release()` can still be called by `client` or `clientOracle` after `termination` to preserve extension option. ","params":{"registration":"Registered LXL number."}}},"title":"LexLocker.","version":1},"userdoc":{"kind":"user","methods":{"addMarketTerms(string)":{"notice":"Updates LXL with new market `terms`. "},"amendMarketTerms(uint256,string)":{"notice":"Updates LXL with amended market `terms`. "},"assignClientOracle(address,uint256)":{"notice":"LXL `client` can assign account as `clientOracle` to help call `release()` and `withdraw()`."},"clientProposeResolver(address,uint256,string)":{"notice":"Fallback to allow LXL party to suggest new `resolver` to counterparty."},"confirmLocker(uint256)":{"notice":"LXL `client` can confirm after `registerLocker()` is called to deposit `sum` for `provider`."},"depositLocker(address,address,address,address,uint256[],uint256,string,bool)":{"notice":"LXL can be registered as deposit from `client` for benefit of `provider`."},"depositLockerSingleMilestone(address,address,address,address,uint256,uint256,string,bool)":{"notice":"LXL can be registered as single deposit (lump sum) from `client` for benefit of `provider`."},"lock(uint256,string)":{"notice":"LXL `client` or `provider` can lock to freeze release and withdrawal of `sum` remainder until `resolver` calls `resolve()`. "},"providerProposeResolver(address,uint256,string)":{"notice":"Fallback to allow LXL party to suggest new `resolver` to counterparty."},"registerLocker(address,address,address,address,address,uint256[],uint256,string,bool)":{"notice":"LXL can be registered as `provider` request for `client` deposit (by calling `confirmLocker()`)."},"release(uint256)":{"notice":"LXL `client` or `clientOracle` can release milestone `amount` to `provider`. "},"requestLockerResolution(address,address,address,uint256,string,bool)":{"notice":"LXL depositor (`client`) can request direct resolution between selected `counterparty` over `sum`. E.g., staked wager to benefit charity as `counterparty`."},"resolve(uint256,uint256,uint256,string)":{"notice":"After LXL is locked, selected `resolver` awards `sum` remainder between `client` and `provider` minus fee."},"tributeToManager(string)":{"notice":"General ether payment function for `manager` of LXL contract. "},"updateLockerSettings(address,address,address,address,uint256,uint256,uint256,uint256,string)":{"notice":"Updates LXL management settings."},"updateSwiftResolverStatus(string,bool)":{"notice":"Swift resolvers call to update LXL service status."},"withdraw(uint256)":{"notice":"LXL `client` or `clientOracle` can withdraw `sum` remainder after `termination`. "}},"notice":"Token locker registry with embedded terms and resolution protocol. ","version":1}},"settings":{"compilationTarget":{"browser/Untitled3.sol":"LexLocker"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Untitled3.sol":{"keccak256":"0xd9d030460d995a092e76285bc7025557dc0293c1437262eacd6e676a7121bfc3","license":"GPL-3.0-or-later","urls":["bzz-raw://c83979a89e78f2f9fef2b7d531008c5e39ea2928b3d6714ab3585540700e80a4","dweb:/ipfs/QmS5hKjpy8nqDgqSgAtZ2fBdDFoe9AuJSF5nnDNZhWLvWf"]}},"version":1},"version":1,"checkPoints":[]}