{"address":"0x806E14C977e092b1Af155c4bD19f93667Ca5a24a","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_buyToken","type":"address"},{"internalType":"contract IERC20","name":"_lotteryToken","type":"address"},{"internalType":"bool","name":"_isOnlyETHAccepted","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"LotteryReset","type":"event"},{"anonymous":false,"inputs":[],"name":"LotterySettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"playersLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"numOfWinners","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"registrationAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"LotteryStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"}],"name":"MaxParticipationCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"randomness","type":"uint256"}],"name":"RandomNumberGenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"winnerIndexes","type":"uint256[]"}],"name":"WinnersGenerated","type":"event"},{"inputs":[],"name":"adminAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminFeesAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterLottery","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"isOnlyETHAccepted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lotteryPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lotteryStatus","outputs":[{"internalType":"enum LotteryContract.LotteryStatus","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"randomness","type":"uint256"}],"name":"rawFulfillRandomness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPoolAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"numOfWinners","type":"uint256"},{"internalType":"uint256","name":"playersLimit","type":"uint256"},{"internalType":"uint256","name":"registrationAmount","type":"uint256"},{"internalType":"uint256","name":"adminFeePercentage","type":"uint256"},{"internalType":"uint256","name":"randomSeed","type":"uint256"}],"name":"setLotteryRules","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"settleLottery","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalLotteryPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winnerAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winnerIndexes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Sets the value for adminAddress which establishes the Admin of the contract Only the adminAddress will be able to set the lottery configuration, start the lottery and reset the lottery. It also sets the required fees, keyHash etc. for the ChainLink Oracle RNG Also initializes the LOT ERC20 TOKEN that is minted/burned by the participating lottery players. The adminAdress value is immutable along with the initial configuration of VRF Smart Contract. They can only be set once during construction."},"enterLottery()":{"details":"Player enters the lottery and the registration amount is transferred from the player to the contract. Returns participant's index. This is similar to unique registration id. Emits an {MaxParticipationCompleted} event indicating that all the required players have entered the lottery. The participant is also issued an equal amount of LOT tokens once he registers for the lottery. This LOT tokens are fundamental to the lottery contract and are used internally. The winners will need to burn their LOT tokens to claim the lottery winnings. The other participants of the lottery can keep hold of these tokens and use for other applications. Requirements: - The player has set the necessary allowance to the Contract. - The Lottery is in progress. - Number of players allowed to enter in the lottery should be   less than or equal to the allowed players `lotteryConfig.playersLimit`."},"setLotteryRules(uint256,uint256,uint256,uint256,uint256)":{"details":"Sets the Lottery Config, initializes an instance of ERC20 contract that the lottery is based on and starts the lottery. Emits an {LotteryStarted} event indicating the Admin has started the Lottery. Requirements: - Cannot be called if the lottery is in progress. - Only the address set at `adminAddress` can call this function. - Number of winners `numOfWinners` should be less than or equal to half the number of   players `playersLimit`."},"settleLottery()":{"details":"Settles the lottery, the winners are calculated based on the random number generated. The Admin fee is calculated and transferred back to Admin `adminAddress`. Emits an {WinnersGenerated} event indicating that the winners for the lottery have been generated. Emits {LotterySettled} event indicating that the winnings have been transferred to the Admin and the Lottery is closed. Requirements: - The random number has been generated - The Lottery is in progress."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"LotteryContract_flat.sol":"LotteryContract"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"LotteryContract_flat.sol":{"keccak256":"0xbd4b92b07d172f0622edb9220529a344e0796662a28b3968acab7a4cbb782f8c","license":"MIT","urls":["bzz-raw://605ef2d1e1755cbec9614275f9de8931c3d9164f272b1d4a6ad7915de5c42577","dweb:/ipfs/QmRGHQJpUMQJNgZT8AAtMeLJSRE76V8TNfWJc2cpByyrFH"]}},"version":1},"version":1,"checkPoints":[]}