{"address":"0x7d561bE86eBCB1d8353f98c21Bef7232343598a8","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseUri","type":"string"},{"internalType":"contract WebaverseERC20","name":"_erc20Contract","type":"address"},{"internalType":"uint256","name":"_mintFee","type":"uint256"},{"internalType":"address","name":"_treasuryAddress","type":"address"},{"internalType":"bool","name":"_isSingleIssue","type":"bool"},{"internalType":"bool","name":"_isPublicallyMintable","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"hash","type":"string"},{"indexed":false,"internalType":"address","name":"a","type":"address"}],"name":"CollaboratorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"hash","type":"string"},{"indexed":false,"internalType":"address","name":"a","type":"address"}],"name":"CollaboratorRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"oldHash","type":"string"},{"indexed":false,"internalType":"string","name":"newHash","type":"string"}],"name":"HashUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"hash","type":"string"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"MetadataSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"a","type":"address"}],"name":"SingleCollaboratorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"a","type":"address"}],"name":"SingleCollaboratorRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"SingleMetadataSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"a","type":"address"}],"name":"addAllowedMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"address","name":"a","type":"address"}],"name":"addCollaborator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"a","type":"address"}],"name":"addSingleCollaborator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"hash","type":"string"}],"name":"balanceOfHash","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"getCollaborators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"string","name":"key","type":"string"}],"name":"getMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMinter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getPackedBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSingleCollaborators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"name":"getSingleMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getTokenIdsOf","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"a","type":"address"}],"name":"isAllowedMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"address","name":"a","type":"address"}],"name":"isCollaborator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"a","type":"address"}],"name":"isSingleCollaborator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"hash","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ext","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"count","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"hash","type":"string"}],"name":"mintSingle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mintTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"pack","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"a","type":"address"}],"name":"removeAllowedMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"address","name":"a","type":"address"}],"name":"removeCollaborator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"a","type":"address"}],"name":"removeSingleCollaborator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"seal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"name":"setMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_mintFee","type":"uint256"}],"name":"setMintFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"name":"setSingleMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasuryAddress","type":"address"}],"name":"setTreasuryAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenByIdFull","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"hash","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ext","type":"string"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"internalType":"struct WebaverseERC721.Token","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndexFull","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"hash","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ext","type":"string"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"internalType":"struct WebaverseERC721.Token","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"totalSupplyOfHash","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unpack","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"oldHash","type":"string"},{"internalType":"string","name":"newHash","type":"string"}],"name":"updateHash","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"NFTs can be packed with fungible tokens, and can have special features I.E. collaborators and separate creatorship and ownership","kind":"dev","methods":{"addAllowedMinter(address)":{"details":"Add a minter to the approved list to mint tokens","params":{"a":"Address to whitelist"}},"addCollaborator(string,address)":{"details":"Add collaborator to a token","params":{"a":"Address to whitelist","hash":"Hash of the token to add the collaborator to"}},"addSingleCollaborator(uint256,address)":{"details":"Add a collaborator to a single token (like land)","params":{"a":"Address to whitelist","tokenId":"ID of the token"}},"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"balanceOfHash(address,string)":{"details":"Get the number of tokens associated with a specific hash held by the token owner For example, if collaborators are working on a token series, this would return all of them for one collaborator","params":{"hash":"Hash to query","owner":"Address of the owner of the token"},"returns":{"_0":"Return the balance as a number of tokens Example args: 0x08E242bB06D85073e69222aF8273af419d19E4f6, 0x1"}},"baseURI()":{"details":"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."},"constructor":{"details":"Create this ERC721 contract","params":{"_erc20Contract":"ERC20 contract attached to fungible tokens","_isPublicallyMintable":"Whether anyone can mint tokens with this contract I.E. collaborators and separate creatorship and ownership","_isSingleIssue":"Whether the token is single issue (name based) or no (hash based)","_treasuryAddress":"Address of the treasury account","baseUri":"Base URI (example is http://)","name":"Name of the contract (default is \"NFT\")","symbol":"Symbol for the token (default is ???)"}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getCollaborators(string)":{"details":"List collaborators for a token","params":{"hash":"Hash of the token to get collaborators for"}},"getHash(uint256)":{"details":"Get the hash of a token by ID","params":{"tokenId":"Token to get the hash from"},"returns":{"_0":"Returns a string containing the token hash"}},"getMetadata(string,string)":{"details":"Get metadata for the token. Metadata is a key-value store that can be set by owners and collaborators","params":{"hash":"Token hash to query for metadata","key":"Key to query for a value"},"returns":{"_0":"Value corresponding to metadata key"}},"getMinter(uint256)":{"details":"Get the address for for the minter of the token","params":{"tokenId":"ID of the token we are querying"},"returns":{"_0":"Address of the minter"}},"getPackedBalance(uint256)":{"details":"Get the balance of fungible tokens packed into this non-fungible token","params":{"tokenId":"ID of the non-fungible ERC721 token"}},"getSingleCollaborators(uint256)":{"details":"List collaborators for a token","params":{"tokenId":"Token ID of the token to get collaborators for"}},"getSingleMetadata(uint256,string)":{"details":"Get metadata for a single token (non-hashed)","params":{"key":"Key to retrieve value for","tokenId":"Token hash to add metadata to"},"returns":{"_0":"Returns the value stored for the key"}},"getTokenIdsOf(address)":{"details":"List the tokens IDs owned by an account","params":{"owner":"Address to query"},"returns":{"_0":"Array of token IDs"}},"isAllowedMinter(address)":{"details":"Check if an account is allowed to mint tokens","params":{"a":"Address to check"},"returns":{"_0":"Returns true if the acount can mint"}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"isCollaborator(string,address)":{"details":"Check is an address has access as a collaborator (for development of a token between multiple users)","params":{"a":"Address to query","hash":"Hash of the token to test"},"returns":{"_0":"Returns true if the address is a collaborator on this token"}},"isSingleCollaborator(uint256,address)":{"details":"Check if this address is a collaborator on a single issue token (like land)","params":{"a":"Address to check","tokenId":"ID of the token"},"returns":{"_0":"Returns true if the address is a collaborator on the token"}},"mint(address,string,string,string,string,uint256)":{"details":"Mint one or more non-fungible tokens with this contract The count parameter is what is looped over to create the token. This means the hiegher the count, the higher the gas. This is the main reason that we can only mint so many tokens at once.","params":{"count":"Number of tokens to mint (ie: 1)","description":"Description of the token (set by user)","ext":"File extension of the token Example: \"png\"","hash":"Hash of the file to mint Example: 0x1","name":"Name of the token","to":"Address of who is receiving the token on mint Example: 0x08E242bB06D85073e69222aF8273af419d19E4f6"}},"mintSingle(address,string)":{"details":"Mint one non-fungible tokens with this contract","params":{"hash":"Hash of the file to mint","to":"Address of who is receiving the token on mint Example: 0x08E242bB06D85073e69222aF8273af419d19E4f6"}},"mintTokenId(address,uint256)":{"details":"Mint a token with a specific ID","params":{"to":"Who should receive the minted token","tokenId":"ID of the token to mint (ie: 250)"}},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"pack(address,uint256,uint256)":{"details":"Pack fungible tokens into this non-fungible token","params":{"amount":"Amount to pack","from":"Address of who is packing the token","tokenId":"ID of the token"}},"removeAllowedMinter(address)":{"details":"Remove a minter from the approved list to mint tokens","params":{"a":"Address to remove from whitelist"}},"removeCollaborator(string,address)":{"details":"Remove collaborator from a token","params":{"a":"Address to remove from whitelist","hash":"Hash of the token to remove the collaborator from"}},"removeSingleCollaborator(uint256,address)":{"details":"Remove a collaborator from a single token (like land)","params":{"a":"Address to remove from whitelist","tokenId":"ID of the token"}},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"seal(string)":{"details":"Seal the token forever and remove collaborators so that it can't be altered","params":{"hash":"Hash of the collaborative token"}},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setBaseURI(string)":{"details":"Set the base URI for this contract","params":{"baseURI_":"Base URI to send to"}},"setMetadata(string,string,string)":{"details":"Set metadata for the token. Metadata is a key-value store that can be set by owners and collaborators","params":{"hash":"Token hash to add metadata to","key":"Key to store value at","value":"Value to store"}},"setMintFee(uint256)":{"details":"Set the price to mint","params":{"_mintFee":"Minting fee, default is 10 FT"}},"setSingleMetadata(uint256,string,string)":{"details":"Set metadata for a single token (non-hashed)","params":{"key":"Key to store value at","tokenId":"Token hash to add metadata to","value":"Value to store"}},"setTreasuryAddress(address)":{"details":"Set the treasury address","params":{"_treasuryAddress":"Account address of the treasurer"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIdFull(uint256)":{"details":"Get the complete information for a token from it's ID","params":{"tokenId":"Token ID to query"},"returns":{"_0":"Token struct containing token data"}},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenExists(uint256)":{"details":"Check if the token exists","params":{"tokenId":"Token to test"},"returns":{"_0":"Returns true if the token exists"}},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenOfOwnerByIndexFull(address,uint256)":{"details":"Get the full Token struct from an owner address at a specific index","params":{"index":"Index in owner's balance to query","owner":"Owner to query"},"returns":{"_0":"Token struct containing token data"}},"tokenURI(uint256)":{"details":"Get the URI of a token","params":{"tokenId":"Token to get the URI from (ie: 250)"},"returns":{"_0":"URI of the token to retrieve"}},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"totalSupplyOfHash(string)":{"details":"Get the total supply of a hash","params":{"hash":"Hash to query"},"returns":{"_0":"Total supply of the token"}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"unpack(address,uint256,uint256)":{"details":"Unpack fungible tokens from this non-fungible token","params":{"amount":"Amount to unpack","to":"Address of who is packing the token","tokenId":"ID of the token"}},"updateHash(string,string)":{"details":"Update token hash with a new hash","params":{"newHash":"New hash to set","oldHash":"Old hash to query"}}},"title":"Extension of {ERC721} for Webaverse non-fungible tokens","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"WebaverseERC721.sol":"WebaverseERC721"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"Address.sol":{"keccak256":"0x1845481964ebacf35afe1a006fa574793b52e698eba0a8db6e3d30202bc45429","license":"MIT","urls":["bzz-raw://40da60a9727380e21c3527060691b2179bc7afc1e2e10ee41cd81e58a75f58e3","dweb:/ipfs/Qmc1mhjoT9LShTuUWFHaLfjj43qim2Fq7shMstU5bjkxcm"]},"Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"ERC165.sol":{"keccak256":"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74","license":"MIT","urls":["bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a","dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA"]},"ERC20.sol":{"keccak256":"0x3d0eb49ca9313ec4be88633da0a2a82d5b077e055fa6b9bb1b952b1e79908230","license":"MIT","urls":["bzz-raw://737b321685eabd057543360689d4269b89e0400a6d86a56b9d50da0d9847a4a6","dweb:/ipfs/QmSH1iCaf6LbDA49wxBK86qHmQZuWWKymckKZQx6PQrGx3"]},"ERC20Capped.sol":{"keccak256":"0x5aaccf6ec2a07b1c8cc31b3a91c95d996d4e3cadc58d0cce465d5436d868fa1c","license":"MIT","urls":["bzz-raw://290193c353fafb468c6ada98fc5e9f06fc61d8ec5dbcc874203921d7bf6a94db","dweb:/ipfs/QmYE11CtUMwpSAvnDA7Qj9UEqeZPbRL4dVxFJTby8zqp3T"]},"ERC721.sol":{"keccak256":"0x74cba67c1dfc9606e54a1ee3280ca895bd709bbe9b91f515823757c4766c9e24","license":"MIT","urls":["bzz-raw://49c205a680395854d1b2be48257b6cedfafeaeb4df27fa0ad57cde42712f3339","dweb:/ipfs/QmVBYgk6SJkz67a4pSUrWpYkAYSU5DqDdpBC9kQpxJb39b"]},"EnumerableMap.sol":{"keccak256":"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b","license":"MIT","urls":["bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e","dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh"]},"EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","license":"MIT","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]},"IERC165.sol":{"keccak256":"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453","license":"MIT","urls":["bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf","dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp"]},"IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","license":"MIT","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"IERC721.sol":{"keccak256":"0x0ec0b280743c7daeef7f97818a17eb0c4531c68f0d59e401db0fa7f440dac1de","license":"MIT","urls":["bzz-raw://e70145ecb99ae891ee334cc6167fa42c2397d802f7f78956722d1b31d72fd3a9","dweb:/ipfs/Qmb95SPADQ9UuVN8n5Bn3XZVdsrFkH51fLDCnet3GayCh7"]},"IERC721Enumerable.sol":{"keccak256":"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0","license":"MIT","urls":["bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f","dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7"]},"IERC721Metadata.sol":{"keccak256":"0x96550b6c1fcb17a3dce0d6eca67ae002dab60e583da732bfbf6ce773e7717df4","license":"MIT","urls":["bzz-raw://a700b7bdbbacec77d861889f57c8752a2f2784f90c9e41dd372aab345ced7ba4","dweb:/ipfs/QmUH7fksDjfZoQ61EGMxrNAYv6npyCiVYycHw58f6vRqKd"]},"IERC721Receiver.sol":{"keccak256":"0x42139300eda7e7fb232ab96972cda1abfd1dce2f013937a188f11fd813aeab27","license":"MIT","urls":["bzz-raw://2042e1d443d327a245a101409ed079e3e207b2cf833cfda4a05483ac090ab9aa","dweb:/ipfs/QmTC5FVjhMGpzoD9uSGvy1aVmwC2r6mS8mn2tAGXG9AdgT"]},"Math.sol":{"keccak256":"0x6c234834003dfb86e2c23d12dfdde7cc01e78013d71b52162cb308b4873562cb","license":"MIT","urls":["bzz-raw://f0e3f39b2ec26694a42c89a5d9e489d5228f1880fcf5e375c5c975ba816e5ffe","dweb:/ipfs/QmUErheHopnbBUSLDQAtWsmw6HsEvqTNp1QiBEuSJhmhHn"]},"SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","license":"MIT","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"Strings.sol":{"keccak256":"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558","license":"MIT","urls":["bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969","dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q"]},"WebaverseERC20.sol":{"keccak256":"0x504bd0e2b2592d8f14cc8c6e86c8a814660031fe8347174d97f9bf9291e31a6a","license":"MIT","urls":["bzz-raw://2e4f4e8bfb02876deb34ef145a8fb62ba124aeb1fdc624bddb094b90e2af8383","dweb:/ipfs/QmXmSVUH1ZoNNeeK1qoJNoRoVKjBZKuHyVJomgXpCMyEY1"]},"WebaverseERC721.sol":{"keccak256":"0x17d8f835f56615adf68b495778cb01807812efc0b80e104f3b9192a765b18233","license":"MIT","urls":["bzz-raw://630b6cd642c58b23ab44436eee1b8e9722eea940e293927754bddacfa02812c4","dweb:/ipfs/QmS5hvPEmNpPW8GJohyZQuamAqd27tC4PvN9k8QPob4Lws"]}},"version":1},"version":1,"checkPoints":[]}