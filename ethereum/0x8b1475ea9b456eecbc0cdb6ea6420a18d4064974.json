{"address":"0x8b1475eA9b456eeCbC0CDb6Ea6420A18D4064974","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"address payable","name":"wallet","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"purchaser","type":"address"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wallet","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weiRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.","events":{"TokensPurchased(address,address,uint256,uint256)":{"params":{"amount":"amount of tokens purchased","beneficiary":"who got the tokens","purchaser":"who paid for the tokens","value":"weis paid for purchase"}}},"kind":"dev","methods":{"buyTokens(address)":{"details":"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.","params":{"beneficiary":"Recipient of the token purchase"}},"constructor":{"details":"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.","params":{"rate":"Number of token units a buyer gets per wei","token":"Address of the token being sold","wallet":"Address where collected funds will be forwarded to"}},"rate()":{"returns":{"_0":"the number of token units a buyer gets per wei."}},"token()":{"returns":{"_0":"the token being sold."}},"wallet()":{"returns":{"_0":"the address where funds are collected."}},"weiRaised()":{"returns":{"_0":"the amount of wei raised."}}},"title":"Crowdsale","version":1},"userdoc":{"events":{"TokensPurchased(address,address,uint256,uint256)":{"notice":"Event for token purchase logging"}},"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/Crowdsale.sol":"Crowdsale"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Crowdsale.sol":{"keccak256":"0xc31c7635a7da7691a858ead7fb6a282eb6edd8e1632c441073fbc6fb3991c3dd","urls":["bzz-raw://e909b64e1a22aaa775cbbf0de5788f62c0fa29dd41a72970d586aab91e285dd1","dweb:/ipfs/QmRQ1gbukf5nyHZAB86E4bmMmgJtPsvqPeZyZ38rA9UcY1"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/GSN/Context.sol":{"keccak256":"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9","urls":["bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60","dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/math/SafeMath.sol":{"keccak256":"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296","urls":["bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080","dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad","urls":["bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce","dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0x5e4728275b5a93bd2afcf2eb8643c3ed5a6dec046151de12de2c10c490fb2f91","license":"MIT","urls":["bzz-raw://e29288f76f9e8c63ce6484963947246ef0c385221594c6aa64927c867164ccf5","dweb:/ipfs/QmPPinTHEBKhkpK2FWXQSjwenDVswiuLEU9P7nHpcizt22"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/utils/Address.sol":{"keccak256":"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b","urls":["bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a","dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.0.0/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xcab30f879b71ad33a1dc40bf1f0a388dad63e057901d09f6f25ab5afc36f4e07","license":"MIT","urls":["bzz-raw://68b685f000752cf4553b155bc6a55006b03d981f300fd7d23ebc8a67dd8ba424","dweb:/ipfs/QmWudHPsmKS2o4PRdnVgc7qsgD1xwyBgnkUZKiJRq15VVn"]}},"version":1},"version":1,"checkPoints":[]}