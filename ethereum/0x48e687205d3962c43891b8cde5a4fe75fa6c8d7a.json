{"address":"0x48e687205D3962c43891b8Cde5A4Fe75FA6C8D7a","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addedAddress","type":"address"}],"name":"AddedToWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"removedAddress","type":"address"}],"name":"RemovedFromWhitelist","type":"event"},{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getWhitelist","outputs":[{"internalType":"address[]","name":"activeWhitelist","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"elementToCheck","type":"address"}],"name":"isOnWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"elementToRemove","type":"address"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelist","outputs":[{"internalType":"enum AddressWhitelist.Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelistIndices","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"addToWhitelist(address)":{"params":{"newElement":"the new address to add."}},"getWhitelist()":{"details":"Note: This method skips over, but still iterates through addresses. It is possible for this call to run out of gas if a large number of addresses have been removed. To reduce the likelihood of this unlikely scenario, we can modify the implementation so that when addresses are removed, the last addresses in the array is moved to the empty index.","returns":{"activeWhitelist":"the list of addresses on the whitelist."}},"isOnWhitelist(address)":{"params":{"elementToCheck":"the address to check."},"returns":{"_0":"True if `elementToCheck` is on the whitelist, or False."}},"owner()":{"details":"Returns the address of the current owner."},"removeFromWhitelist(address)":{"params":{"elementToRemove":"the existing address to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"A contract to track a whitelist of addresses."},"userdoc":{"methods":{"addToWhitelist(address)":{"notice":"Adds an address to the whitelist."},"getWhitelist()":{"notice":"Gets all addresses that are currently included in the whitelist."},"isOnWhitelist(address)":{"notice":"Checks whether an address is on the whitelist."},"removeFromWhitelist(address)":{"notice":"Removes an address from the whitelist."}}}},"settings":{"compilationTarget":{"browser/AddressWhitelist.sol":"AddressWhitelist"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/AddressWhitelist.sol":{"keccak256":"0xe7dd2f88f0a9892d96993470c5225063242b937c640cdb5a87febbbb4b747a1c","urls":["bzz-raw://da352135e2b07a23878a47cab45b0324e2118c273503efc8bca81b32e9e54e06","dweb:/ipfs/QmRN3YvWzMJXbgrKriComwXcB9Kitr5U4PMY2FBD5i1n7X"]}},"version":1},"version":1,"checkPoints":[]}