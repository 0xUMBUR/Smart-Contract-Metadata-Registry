{"address":"0x4C19068BE73EB00A42432D3FE7da952815BB0485","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"get","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"name":"getDataParameter","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"peek","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"BoringCrypto","kind":"dev","methods":{"get(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"success if no valid (recent) rate is available, return false else true.","_1":"rate The rate of the requested asset / pair / pool."}},"getDataParameter(uint256)":{"params":{"rate":"(uint256) The fixed exchange rate"},"returns":{"_0":"(bytes)"}},"name(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"(string) A human readable name about this oracle."}},"peek(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"success if no valid (recent) rate is available, return false else true.","_1":"rate The rate of the requested asset / pair / pool."}},"symbol(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"(string) A human readable symbol name about this oracle."}}},"title":"PeggedOracle","version":1},"userdoc":{"kind":"user","methods":{"get(bytes)":{"notice":"Get the latest exchange rate."},"getDataParameter(uint256)":{"notice":"@dev"},"name(bytes)":{"notice":"Returns a human readable name about this oracle."},"peek(bytes)":{"notice":"Check the last exchange rate without any state changes."},"symbol(bytes)":{"notice":"Returns a human readable (short) name about this oracle."}},"notice":"Oracle used for pegged prices that don't change","version":1}},"settings":{"compilationTarget":{"browser/PeggedOracle.sol":"PeggedOracleV1"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":50000},"remappings":[]},"sources":{"browser/PeggedOracle.sol":{"keccak256":"0x44568dd0ee7be65cb165e7f5bb86ba1ce78841b73d55386d17ca2199cf68e92a","license":"MIT","urls":["bzz-raw://bb50ff21224c487ca4208874bef19a4dc30c47ed8f3e59c3d3979166623b3fac","dweb:/ipfs/QmWiRj7iPtc4GpXNCFKDyMi3A5sEstN5o8TSKqSwyCLNMB"]}},"version":1},"version":1,"checkPoints":[]}