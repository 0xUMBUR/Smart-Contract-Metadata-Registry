{"address":"0x4BAa6e96d5750994fc7a7914441AA7FaFF90bd82","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_defiPortal","type":"address"},{"internalType":"address","name":"_bancorData","type":"address"},{"internalType":"address","name":"_poolPortal","type":"address"},{"internalType":"address","name":"_oneInch","type":"address"},{"internalType":"address","name":"_cEther","type":"address"},{"internalType":"address","name":"_tokensTypes","type":"address"},{"internalType":"address","name":"_merkleTreeWhiteList","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"trader","type":"address"},{"indexed":false,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"srcAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"dest","type":"address"},{"indexed":false,"internalType":"uint256","name":"destReceived","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"exchangeType","type":"uint8"}],"name":"Trade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"srcAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"dest","type":"address"},{"indexed":false,"internalType":"uint256","name":"destReceived","type":"uint256"}],"name":"Trade","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"bancorData","outputs":[{"internalType":"contract IGetBancorData","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cEther","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defiPortal","outputs":[{"internalType":"contract DefiPortalInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getCompoundUnderlyingRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_fromAddresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"address","name":"_to","type":"address"}],"name":"getTotalValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueForBalancerPool","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueForUniswapPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueForUniswapV2Pools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueViaBancor","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueViaCompound","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"getValueViaDEXsAgregators","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleTreeWhiteList","outputs":[{"internalType":"contract IMerkleTreeTokensVerification","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oneInch","outputs":[{"internalType":"contract IOneSplitAudit","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolPortal","outputs":[{"internalType":"contract PoolPortalInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_defiPortal","type":"address"}],"name":"setNewDefiPortal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_bancorData","type":"address"}],"name":"setNewGetBancorData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oneInch","type":"address"}],"name":"setNewOneInch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolPortal","type":"address"}],"name":"setNewPoolPortal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_oneInchFlags","type":"uint256"}],"name":"setOneInchFlags","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_enabled","type":"bool"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokensTypes","outputs":[{"internalType":"contract ITokensTypeStorage","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_source","type":"address"},{"internalType":"uint256","name":"_sourceAmount","type":"uint256"},{"internalType":"contract IERC20","name":"_destination","type":"address"},{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"},{"internalType":"uint256[]","name":"_positions","type":"uint256[]"},{"internalType":"bytes","name":"_additionalData","type":"bytes"},{"internalType":"bool","name":"_verifyDestanation","type":"bool"}],"name":"trade","outputs":[{"internalType":"uint256","name":"receivedAmount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"contructor","params":{"_bancorData":"address of GetBancorData helper","_cEther":"address of the COMPOUND cEther","_defiPortal":"address of defiPortal contract","_merkleTreeWhiteList":"address of the IMerkleTreeWhiteList","_oneInch":"address of 1inch OneSplitAudit contract","_poolPortal":"address of pool portal","_tokensTypes":"address of the ITokensTypeStorage"}},"getTotalValue(address[],uint256[],address)":{"details":"Gets the total value of array of tokens and amounts","params":{"_amounts":"The amounts of all the tokens","_fromAddresses":"Addresses of all the tokens we're converting from","_to":"The token who's value we're converting to"},"returns":{"_0":"The total value of _fromAddresses and _amounts in terms of _to"}},"getValue(address,address,uint256)":{"details":"Gets the ratio by amount of token _from in token _to by totekn type","params":{"_amount":"The amount of _from","_from":"Address of token we're converting from","_to":"Address of token we're getting the value in"},"returns":{"_0":"best price from 1inch for ERC20, or ratio for Uniswap and Bancor pools"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setToken(address,bool)":{"details":"Allows the owner to disable/enable the buying of a token","params":{"_enabled":"New token permission","_token":"Token address whos trading permission is to be set"}},"trade(address,uint256,address,uint256,bytes32[],uint256[],bytes,bool)":{"details":"Facilitates a trade for a SmartFund","params":{"_additionalData":"For additional data (if not used just set 0x0)","_destination":"ERC20 token to convert to","_positions":"Merkle tree positions (if not used just set [])","_proof":"Merkle tree proof (if not used just set [])","_source":"ERC20 token to convert from","_sourceAmount":"Amount to convert from (in _source token)","_type":"The type of exchange to trade with","_verifyDestanation":"For additional check if token in list or not"},"returns":{"receivedAmount":"   The amount of _destination received from the trade"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/ExchangePortalTestNet.sol":"ExchangePortal"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/ExchangePortalTestNet.sol":{"keccak256":"0x89493f81a80ad045a96a6783e8439487d479a8f143fbe3115b79e2d0845e47e3","urls":["bzz-raw://7ba4c6c84b81714490d699146f6a2f84aa1c148151b6ae0e47fe5cffee1dad78","dweb:/ipfs/Qmax6jWQjyysCpBwaS8sTQ3P8E9FgwgPbXVajXdEt3qEES"]}},"version":1},"version":1,"checkPoints":[]}