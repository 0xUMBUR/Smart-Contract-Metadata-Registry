{"address":"0x59cDF9Bf5bfCB85Fd1C053f248420BBa74e15ff7","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_compoundMonitorProxy","type":"address"},{"internalType":"address","name":"_subscriptions","type":"address"},{"internalType":"address","name":"_compoundFlashLoanTaker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BOOST_GAS_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BOOST_GAS_TOKEN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFISAVER_LOGGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_TOKEN_INTERFACE_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_GAS_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPAY_GAS_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPAY_GAS_TOKEN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"addCaller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"approvedCallers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[5]","name":"_data","type":"uint256[5]"},{"internalType":"address[3]","name":"_addrData","type":"address[3]"},{"internalType":"bytes","name":"_callData","type":"bytes"},{"internalType":"address","name":"_user","type":"address"}],"name":"boostFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasAmount","type":"uint256"}],"name":"calcGasCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum CompoundMonitor.Method","name":"_method","type":"uint8"},{"internalType":"address","name":"_user","type":"address"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCost","type":"uint256"}],"name":"changeBoostGasCost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCost","type":"uint256"}],"name":"changeRepayGasCost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"comp","outputs":[{"internalType":"contract ComptrollerInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compoundFlashLoanTakerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"compoundMonitorProxy","outputs":[{"internalType":"contract CompoundMonitorProxy","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasToken","outputs":[{"internalType":"contract GasTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getSafetyRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"logger","outputs":[{"internalType":"contract DefisaverLogger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract CompoundOracleInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum CompoundMonitor.Method","name":"_method","type":"uint8"},{"internalType":"address","name":"_user","type":"address"}],"name":"ratioGoodAfter","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"removeCaller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[5]","name":"_data","type":"uint256[5]"},{"internalType":"address[3]","name":"_addrData","type":"address[3]"},{"internalType":"bytes","name":"_callData","type":"bytes"},{"internalType":"address","name":"_user","type":"address"}],"name":"repayFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"setAdminByAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"setAdminByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwnerByAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"subscriptionsContract","outputs":[{"internalType":"contract CompoundSubscriptions","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferEth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawStuckFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"addCaller(address)":{"params":{"_caller":"Bot address"}},"boostFor(uint256[5],address[3],bytes,address)":{"details":"If the contract ownes gas token it will try and use it for gas price reduction","params":{"_addrData":"cTokens addreses and exchange [cCollAddress, cBorrowAddress, exchangeAddress]","_callData":"0x callData","_data":"Amount and exchange data [amount, minPrice, exchangeType, gasCost, 0xPrice]","_user":"The actual address that owns the Compound position"}},"calcGasCost(uint256)":{"details":"Gas price is limited to MAX_GAS_PRICE to prevent attack of draining user CDP","params":{"_gasAmount":"Amount of gas used for the tx"}},"canCall(uint8,address)":{"details":"Called by MCDMonitor to enforce the min/max check","params":{"_method":"Type of action to be called","_user":"The actual address that owns the Compound position"},"returns":{"_0":"Boolean if it can be called and the ratio"}},"changeBoostGasCost(uint256)":{"params":{"_gasCost":"New gas cost for boost method"}},"changeRepayGasCost(uint256)":{"params":{"_gasCost":"New gas cost for repay method"}},"constructor":{"params":{"_compoundFlashLoanTaker":"Contract that actually performs Repay/Boost","_compoundMonitorProxy":"Proxy contracts that actually is authorized to call DSProxy","_subscriptions":"Subscriptions contract for Compound positions"}},"getSafetyRatio(address)":{"params":{"_user":"Address of the user"}},"ratioGoodAfter(uint8,address)":{"details":"After the Boost/Repay check if the ratio doesn't trigger another call","params":{"_method":"Type of action to be called","_user":"The actual address that owns the Compound position"},"returns":{"_0":"Boolean if the recent action preformed correctly and the ratio"}},"removeCaller(address)":{"params":{"_caller":"Bot address"}},"repayFor(uint256[5],address[3],bytes,address)":{"details":"If the contract ownes gas token it will try and use it for gas price reduction","params":{"_addrData":"cTokens addreses and exchange [cCollAddress, cBorrowAddress, exchangeAddress]","_callData":"0x callData","_data":"Amount and exchange data [amount, minPrice, exchangeType, gasCost, 0xPrice]","_user":"The actual address that owns the Compound position"}},"setAdminByAdmin(address)":{"params":{"_admin":"Address of multisig that becomes new admin"}},"setAdminByOwner(address)":{"params":{"_admin":"Address of multisig that becomes admin"}},"setOwnerByAdmin(address)":{"params":{"_owner":"Address of new owner"}},"transferERC20(address,address,uint256)":{"params":{"_amount":"The amount to be sent","_to":"Address of the receiver","_tokenAddress":"Address of the ERC20 token"}},"transferEth(address,uint256)":{"params":{"_amount":"The amount to be sent","_to":"Address of the receiver"}}},"title":"Contract implements logic of calling boost/repay in the automatic system"},"userdoc":{"methods":{"addCaller(address)":{"notice":"Adds a new bot address which will be able to call repay/boost"},"boostFor(uint256[5],address[3],bytes,address)":{"notice":"Bots call this method to boost for user when conditions are met"},"calcGasCost(uint256)":{"notice":"Calculates gas cost (in Eth) of tx"},"canCall(uint8,address)":{"notice":"Checks if Boost/Repay could be triggered for the CDP"},"changeBoostGasCost(uint256)":{"notice":"Allows owner to change gas cost for boost operation, but only up to 3 millions"},"changeRepayGasCost(uint256)":{"notice":"Allows owner to change gas cost for repay operation, but only up to 3 millions"},"getSafetyRatio(address)":{"notice":"Calcualted the ratio of debt / adjusted collateral"},"kill()":{"notice":"Destroy the contract"},"removeCaller(address)":{"notice":"Removes a bot address so it can't call repay/boost"},"repayFor(uint256[5],address[3],bytes,address)":{"notice":"Bots call this method to repay for user when conditions are met"},"setAdminByAdmin(address)":{"notice":"Admin is able to set new admin"},"setAdminByOwner(address)":{"notice":"Admin is set by owner first time, after that admin is super role and has permission to change owner"},"setOwnerByAdmin(address)":{"notice":"Admin is able to change owner"},"transferERC20(address,address,uint256)":{"notice":"If any tokens gets stuck in the contract owner can withdraw it"},"transferEth(address,uint256)":{"notice":"If any Eth gets stuck in the contract owner can withdraw it"},"withdrawStuckFunds(address,uint256)":{"notice":"withdraw stuck funds"}}}},"settings":{"compilationTarget":{"browser/CompoundMonitor.sol":"CompoundMonitor"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/CompoundMonitor.sol":{"keccak256":"0x4fa3209baa9e51e7ce7cc794c092ce806389b0ef276fd0d69c2d764fa2dcd25f","urls":["bzz-raw://672d60addd3c09f92a9e43e7662dbbff30817deb726ad43ad885cc2fa4c844f7","dweb:/ipfs/Qmb8dXXnRvy5xXPZDa7guC7YspKP3SEgv1gpXVi28aXKHz"]}},"version":1},"version":1,"checkPoints":[]}