{"address":"0x82A1c1d1543f325A298952E69981AA49CBA7A4C4","name":"","metadata":{"compiler":{"version":"0.5.11+commit.c082d0b4"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"killContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"MAX_UINT256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"ownerTransferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"salvageTokensFromContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_untilBlock","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"}],"name":"lockUntil","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupplyLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"newOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lockedUntilBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mintTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_untilBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"_reason","type":"string"}],"name":"ContractLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_prevOwner","type":"address"},{"indexed":false,"internalType":"address","name":"_newOwner","type":"address"}],"name":"OwnerUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"methods":{"allowance(address,address)":{"details":"Returns the amount od tokens that can be sent from this addres by spender","params":{"_owner":"Account that has tokens","_spender":"Account that can spend tokens"},"return":"remaining balance to spend"},"approve(address,uint256)":{"details":"This is used to allow some account to utilise transferFrom and sends tokens on your behalf, this method is disabled if emergencyLock is activated","params":{"_spender":"Who can send tokens on your behalf","_value":"The amount of tokens that are allowed to be sent "},"return":"if successful returns true"},"approveAndCall(address,uint256,bytes)":{"details":"This is used to send tokens and execute code on other smart contract, this method is disabled if emergencyLock is activated","params":{"_extraData":"Additional params that can be used on reciving smart contract","_spender":"Contract that is receiving tokens","_value":"The amount that msg.sender is sending"},"return":"if successful returns true"},"balanceOf(address)":{"details":"Returns the balance of specific account","params":{"_owner":"The account that caller wants to querry"},"return":"the balance on this account"},"burn(uint256)":{"details":"Destroys the amount of tokens and lowers total supply","params":{"_amount":"Number of tokens user wants to destroy"}},"killContract()":{"details":"Disables the contract and wipes all the balances, can be used only by owner"},"mintTokens(address,uint256)":{"details":"Creates new tokens as long as total supply does not reach limit","params":{"_amount":"Amount of tokens to be created;","_to":"Reciver od newly created tokens"}},"ownerTransferFrom(address,address,uint256)":{"details":"Owner can transfer tokens on others behalf withouth any allowance","params":{"_from":"The account that will send tokens","_to":"Account that will recive the tokens","_value":"The amount that msg.sender is sending"},"return":"if successful returns true"},"salvageTokensFromContract(address,address,uint256)":{"details":"Saves exidentaly sent tokens to this contract, can be used only by owner","params":{"_amount":"The amount of tokens that we are salvaging","_to":"Where to send the tokens","_tokenAddress":"Address of tokens smart contract"}},"totalSupply()":{"details":"Returns number of tokens in circulation","return":"total number od tokens"},"transfer(address,uint256)":{"details":"User can transfer tokens with this method, method is disabled if emergencyLock is activated","params":{"_to":"Reciever of tokens","_value":"The amount of tokens that will be sent "},"return":"if successful returns true"},"transferFrom(address,address,uint256)":{"details":"Sender can transfer tokens on others behalf, this method is disabled if emergencyLock is activated","params":{"_from":"The account that will send tokens","_to":"Account that will recive the tokens","_value":"The amount that msg.sender is sending"},"return":"if successful returns true"}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/Untitled1.sol":"ERC20Token"},"evmVersion":"petersburg","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Untitled1.sol":{"keccak256":"0x83d8c2fa4fbfdd5e4a4b8c04185addb8d8f4e40b15c4ba77a47e146617587204","urls":["bzz-raw://5d2f8807ad25b37bcf93ebc881d68b56908133f5c3cc0b2d8167095ff06f42fb","dweb:/ipfs/QmcQwHb6HnnLtqSJuFbadADLLToSXiRuxfRmNg47S9bAkw"]}},"version":1},"version":1,"checkPoints":[]}