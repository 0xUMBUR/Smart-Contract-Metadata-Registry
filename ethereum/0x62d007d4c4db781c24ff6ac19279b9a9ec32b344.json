{"address":"0x62D007D4c4Db781C24FF6ac19279B9A9Ec32b344","name":"","metadata":{"compiler":{"version":"0.8.4+commit.c7e474f2"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract Arbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"}],"name":"Dispute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract Arbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"},{"indexed":true,"internalType":"address","name":"_party","type":"address"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"Evidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_claimID","type":"uint256"},{"indexed":false,"internalType":"enum Recover.Party","name":"_party","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Fund","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_claimID","type":"uint256"},{"indexed":false,"internalType":"enum Recover.Party","name":"_party","type":"uint8"}],"name":"HasToPayFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_finder","type":"address"},{"indexed":false,"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"ItemClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"MetaEvidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"address","name":"relayerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"functionSignature","type":"bytes"}],"name":"MetaTransactionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract Arbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"Ruling","type":"event"},{"inputs":[],"name":"CHILD_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CHILD_CHAIN_ID_BYTES","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERC712_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_CHAIN_ID_BYTES","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"acceptClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"internalType":"address","name":"_addressForEncryption","type":"address"},{"internalType":"string","name":"_descriptionEncryptedLink","type":"string"},{"internalType":"uint256","name":"_rewardAmount","type":"uint256"},{"internalType":"uint256","name":"_timeoutLocked","type":"uint256"}],"name":"addItem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"appeal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"arbitrator","outputs":[{"internalType":"contract Arbitrator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbitratorExtraData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"internalType":"address","name":"_addressForEncryption","type":"address"},{"internalType":"string","name":"_descriptionEncryptedLink","type":"string"}],"name":"changeAddressAndDescriptionEncrypted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract Arbitrator","name":"_arbitrator","type":"address"},{"internalType":"bytes","name":"_arbitratorExtraData","type":"bytes"}],"name":"changeArbitrator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_description","type":"string"}],"name":"changeDescription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeTimeout","type":"uint256"}],"name":"changeFeeTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}],"name":"changeRewardAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"internalType":"uint256","name":"_timeoutLocked","type":"uint256"}],"name":"changeTimeoutLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"},{"internalType":"address payable","name":"_finder","type":"address"},{"internalType":"string","name":"_descriptionLink","type":"string"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"claims","outputs":[{"internalType":"bytes32","name":"itemID","type":"bytes32"},{"internalType":"address","name":"finder","type":"address"},{"internalType":"string","name":"descriptionLink","type":"string"},{"internalType":"uint256","name":"amountLocked","type":"uint256"},{"internalType":"uint256","name":"lastInteraction","type":"uint256"},{"internalType":"uint256","name":"finderFee","type":"uint256"},{"internalType":"uint256","name":"disputeID","type":"uint256"},{"internalType":"bool","name":"isAccepted","type":"bool"},{"internalType":"enum Recover.Status","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"disputeIDtoClaimAcceptedID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"bytes","name":"functionSignature","type":"bytes"},{"internalType":"bytes32","name":"sigR","type":"bytes32"},{"internalType":"bytes32","name":"sigS","type":"bytes32"},{"internalType":"uint8","name":"sigV","type":"uint8"}],"name":"executeMetaTransaction","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"executeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTimeout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_finder","type":"address"}],"name":"getClaimIDsByAddress","outputs":[{"internalType":"uint256[]","name":"claimIDs","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"}],"name":"getClaimsByItemID","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeperator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getItemIDsByOwner","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_governor","type":"address"},{"internalType":"contract Arbitrator","name":"_arbitrator","type":"address"},{"internalType":"bytes","name":"_arbitratorExtraData","type":"bytes"},{"internalType":"uint256","name":"_feeTimeout","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_itemID","type":"bytes32"}],"name":"isItemExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"items","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"internalType":"address","name":"addressForEncryption","type":"address"},{"internalType":"string","name":"descriptionEncryptedLink","type":"string"},{"internalType":"uint256","name":"timeoutLocked","type":"uint256"},{"internalType":"uint256","name":"ownerFee","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"owners","outputs":[{"internalType":"string","name":"description","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"pay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"payArbitrationFeeByFinder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"payArbitrationFeeByOwner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"},{"internalType":"uint256","name":"_amountReimbursed","type":"uint256"}],"name":"reimburse","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"rule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"},{"internalType":"string","name":"_evidence","type":"string"}],"name":"submitEvidence","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"timeOutByFinder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimID","type":"uint256"}],"name":"timeOutByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Fund(uint256,uint8,uint256)":{"details":"To be emitted when a party pays or reimburses the other.","params":{"_amount":"The amount paid.","_claimID":"The index of the claim.","_party":"The party that paid."}},"HasToPayFee(uint256,uint8)":{"details":"Indicate that a party has to pay a fee or would otherwise be considered as losing.","params":{"_claimID":"The index of the claim.","_party":"The party who has to pay."}},"ItemClaimed(bytes32,address,uint256)":{"details":"To be emitted when the finder claims an item.","params":{"_claimID":"The index of the claim.","_finder":"The address of the finder.","_itemID":"The index of the item."}}},"kind":"dev","methods":{"acceptClaim(uint256)":{"details":"Accept a claim an item.","params":{"_claimID":"The index of the claim."}},"addItem(bytes32,address,string,uint256,uint256)":{"details":"Add item.","params":{"_addressForEncryption":"Link to the meta-evidence.","_descriptionEncryptedLink":"Time after which a party can automatically execute the arbitrable transaction.","_itemID":"The index of the item.","_rewardAmount":"The recipient of the transaction.","_timeoutLocked":"Timeout after which the finder can call the function `executePayment`."}},"appeal(uint256)":{"details":"Appeal an appealable ruling.  Transfer the funds to the arbitrator.  Note that no checks are required as the checks are done by the arbitrator.","params":{"_claimID":"The index of the claim."}},"changeAddressAndDescriptionEncrypted(bytes32,address,string)":{"details":"Change the address used to encrypt the description link and the description.","params":{"_addressForEncryption":"Time after which a party can automatically execute the arbitrable transaction.","_descriptionEncryptedLink":"The recipient of the transaction.","_itemID":"The index of the item."}},"changeArbitrator(address,bytes)":{"details":"Change the arbitrator to be used for disputes that may be raised in the next requests. The arbitrator is trusted to support appeal periods and not reenter.","params":{"_arbitrator":"The new trusted arbitrator to be used in the next requests.","_arbitratorExtraData":"The extra data used by the new arbitrator."}},"changeDescription(string)":{"details":"Change the general contact fallback information.","params":{"_description":"The contact information."}},"changeFeeTimeout(uint256)":{"details":"Change the timeout fee.","params":{"_feeTimeout":"The new timeout fee."}},"changeRewardAmount(bytes32,uint256)":{"details":"Change the reward amount of the item.","params":{"_itemID":"The index of the item.","_rewardAmount":"The amount of the reward for the item."}},"changeTimeoutLocked(bytes32,uint256)":{"details":"Change the reward amount of the item.","params":{"_itemID":"The index of the item.","_timeoutLocked":"Timeout after which the finder can call the function `executePayment`."}},"claim(bytes32,address,string)":{"details":"Claim an item.","params":{"_descriptionLink":"The link to the description of the item (optionnal).","_finder":"The address of the finder.","_itemID":"The index of the item."}},"executeTransaction(uint256)":{"details":"Transfer the transaction's amount to the finder if the timeout has passed.","params":{"_claimID":"The index of the claim."}},"getClaimIDsByAddress(address)":{"details":"Get IDs for claims where the specified address is the finder.  Note that the complexity is O(c), where c is the number of claims.","params":{"_finder":"The specified address."},"returns":{"claimIDs":"The claim IDs."}},"getClaimsByItemID(bytes32)":{"details":"Get claims of an item.","params":{"_itemID":"The index of the item."},"returns":{"_0":"The claim IDs."}},"getItemIDsByOwner(address)":{"details":"Get IDs for items where the specified address is the owner.","params":{"_owner":"The specified address."},"returns":{"_0":"itemIDs The items IDs."}},"initialize(address,address,bytes,uint256)":{"details":"Constructs the Recover contract.","params":{"_arbitrator":"The arbitrator of the contract.","_arbitratorExtraData":"Extra data for the arbitrator.","_feeTimeout":"Arbitration fee timeout for the parties."}},"isItemExist(bytes32)":{"details":"Get the existence of an item.","params":{"_itemID":"The index of the item."},"returns":{"_0":"True if the item exists else false."}},"pay(uint256,uint256)":{"details":"Pay finder. To be called if the item has been returned.","params":{"_amount":"Amount to pay in wei.","_claimID":"The index of the claim."}},"payArbitrationFeeByFinder(uint256)":{"details":"Pay the arbitration fee to raise a dispute. To be called by the finder. UNTRUSTED.  Note that this function mirrors payArbitrationFeeByFinder.","params":{"_claimID":"The index of the claim."}},"payArbitrationFeeByOwner(uint256)":{"details":"Pay the arbitration fee to raise a dispute. To be called by the owner. UNTRUSTED.  Note that the arbitrator can have createDispute throw,  which will make this function throw and therefore lead to a party being timed-out.  This is not a vulnerability as the arbitrator can rule in favor of one party anyway.","params":{"_claimID":"The index of the claim."}},"reimburse(uint256,uint256)":{"details":"Reimburse owner of the item. To be called if the item can't be fully returned.","params":{"_amountReimbursed":"Amount to reimburse in wei.","_claimID":"The index of the claim."}},"rule(uint256,uint256)":{"details":"Give a ruling for a dispute. Must be called by the arbitrator.  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.","params":{"_disputeID":"ID of the dispute in the Arbitrator contract.","_ruling":"Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."}},"submitEvidence(uint256,string)":{"details":"Submit a reference to evidence. EVENT.","params":{"_claimID":"The index of the claim.","_evidence":"A link to an evidence using its URI."}},"timeOutByFinder(uint256)":{"details":"Pay finder if the owner of the item fails to pay the fee.","params":{"_claimID":"The index of the claim."}},"timeOutByOwner(uint256)":{"details":"Reimburse owner of the item if the finder fails to pay the fee.","params":{"_claimID":"The index of the claim."}}},"title":"Recover  Lost and Found service smart contract","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/recover/recover.sol":"Recover"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/recover/recover.sol":{"keccak256":"0x8a13f4419b323a72b8b7ea7c4e6fa20013ae95c71fca88b04950eeff11358637","license":"GPL-3.0","urls":["bzz-raw://dece3314dd4d7941b5d0c2cf0f497615cbecc7593992ff464f37f0c83732cfb8","dweb:/ipfs/QmZeQAqRKNkMr2ZfQzSjm3a8gw4x97JXbjKLZwBLFYFgY4"]}},"version":1},"version":1,"checkPoints":[]}