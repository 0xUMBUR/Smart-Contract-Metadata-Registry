{"address":"0x7823C424DFd64E4c1377b3BA2a58ABaf2C69292D","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_proxyRegistryAddress","type":"address"},{"internalType":"address","name":"_nftAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"numOptions","type":"uint256"}],"name":"addOptions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"canMint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factorySchemaName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"address","name":"_toAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyRegistryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newNFTAddress","type":"address"}],"name":"setNFTAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"supportsFactoryInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"addOptions(uint256)":{"details":"Allows adding minting options for future gangs"},"canMint(uint256,uint256)":{"details":"Returns whether the option ID can be minted. Can return false if the developer wishes to restrict a total supply per option ID (or overall)."},"mint(uint256,address,uint256,bytes)":{"details":"Mints asset(s) in accordance to a specific address with a particular \"option\". This should be callable only by the contract owner or the owner's Wyvern Proxy (later universal login will solve this). Options should also be delineated 0 - (numOptions() - 1) for convenient indexing.","params":{"_amount":"amount of the option to mint","_data":"Extra data to pass during safeTransferFrom","_optionId":"the option id","_toAddress":"address of the future owner of the asset(s)"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uri(uint256)":{"details":"Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC1155 metadata."}},"version":1},"userdoc":{"kind":"user","methods":{"factorySchemaName()":{"notice":"Indicates the Wyvern schema name for assets in this lootbox, e.g. \"ERC1155\""},"isApprovedForAll(address,address)":{"notice":"Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names."},"name()":{"notice":"Returns the name of this factory."},"numOptions()":{"notice":"Number of options the factory supports."},"ownerOf(uint256)":{"notice":"Hack to get things to work automatically on OpenSea. Use ownerOf so the frontend doesn't have to worry about different method names."},"supportsFactoryInterface()":{"notice":"Indicates that this is a factory contract. Ideally would use EIP 165 supportsInterface()"},"symbol()":{"notice":"Returns the symbol for this factory."}},"version":1}},"settings":{"compilationTarget":{"browser/GangMemberFactory.sol":"GangMemberFactory"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","license":"MIT","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"]},"browser/GangMemberFactory.sol":{"keccak256":"0xc75bd3388e1f76aff19d9bda97144fa2f95911b4069975254889857c3b7d41ef","license":"MIT","urls":["bzz-raw://e2f284cff0000acad8ce6c1e21949349a390f95da0a107fe723ee4c32bcbc325","dweb:/ipfs/QmQmD5MGPvAoFJkSQ9wDhCvSyxT8VQZfEyzTLL2EZJbyuZ"]},"browser/IFactoryERC1155.sol":{"keccak256":"0x50eaa4195e2decad4bf3b5124bde81e18b8bf12e48cee5e6e8ec1715e0e6f501","license":"MIT","urls":["bzz-raw://9a6d6ba24d765d651eeba3f48cf210e61f2a109498c2e688d596b343a1f6fdce","dweb:/ipfs/QmZ42JAGpuSsRc7mLBHJpHL31SCEJou2PAKFci5Gvm4V3w"]},"browser/Ownable.sol":{"keccak256":"0xec963f42ba8fd6c047b7c3af373a89cb32085004c88b06b39c89e0e40fc88428","license":"MIT","urls":["bzz-raw://c6ec33264dc39b4b1729a1b0f0fb81ade19eeecef80af4415ba499334f7a668c","dweb:/ipfs/QmU9EzaNpZqkDiiBuRUUZrWxAYUVf7SR2JePni5tzBczCj"]},"browser/Strings.sol":{"keccak256":"0xf317de767baa91b41f80572b82e3caa5c086e0b7838d230f4b5c0e7c5cc5b23b","license":"MIT","urls":["bzz-raw://1cb06bbe1e0f6567701107b3d8aca8c7166d8a519675af2c0da8c51237a61733","dweb:/ipfs/QmbWDzRhyoirQ3gkJCwPwyefUMDg2pqLY1tRivjUQRYc26"]}},"version":1},"version":1,"checkPoints":[]}