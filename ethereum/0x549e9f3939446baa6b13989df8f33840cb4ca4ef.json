{"address":"0x549e9F3939446BAa6b13989dF8f33840CB4cA4ef","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"releaseTime","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"beneficiary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"releaseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\". For a more complete vesting schedule, see {TokenVesting}.","kind":"dev","methods":{"beneficiary()":{"returns":{"_0":"the beneficiary of the tokens."}},"releaseTime()":{"returns":{"_0":"the time when the tokens are released."}},"token()":{"returns":{"_0":"the token being held."}}},"version":1},"userdoc":{"kind":"user","methods":{"release()":{"notice":"Transfers tokens held by timelock to beneficiary."}},"version":1}},"settings":{"compilationTarget":{"browser/MarkPandaToken/TokenTimelock.sol":"TokenTimelock"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/MarkPandaToken/Address.sol":{"keccak256":"0x5ae128820877ab0ce84cb0e1b4d431304e409c76cf1ed87cf5bfd97b6640eb71","urls":["bzz-raw://2fea95b1a32947cebcff4dec1e1e2ebe65986acb6c7e999d60900b31f9b306b1","dweb:/ipfs/Qmcn6TvmfJohfQbhp5cXFft4tWgrFowxmfEDM4WQZXxGuU"]},"browser/MarkPandaToken/IERC20.sol":{"keccak256":"0xd6804ff8f100e0aec1780f1683248ce2e79b1bf9bc960774c98dc6884f935320","urls":["bzz-raw://e56b67de4cb322e3d788353af5b8969cf415e3b66936aab6cabd0991ac00e840","dweb:/ipfs/QmboV6zW6KKuAfVnLpRZDLDySKxs2cyssmA33VFcJt4YQH"]},"browser/MarkPandaToken/SafeERC20.sol":{"keccak256":"0xd9024f00bf72a0fe56d76d80f607f3498bd5e7385b6cb54bb2772334e63f0dcd","urls":["bzz-raw://c2cac3ab352bf4c14a51c83cb0293a7ea07f4cc8899bd83a5710b06d05ad1364","dweb:/ipfs/QmRBasPewbRtpY9beMdYd6zuCzhsBA88Vyw6CJg4jHbLw3"]},"browser/MarkPandaToken/SafeMath.sol":{"keccak256":"0xa7d504503a91e2d5e5f265dd121006ae7542666a4071879f79468353ad52941f","urls":["bzz-raw://367c2db672eed33f85ec5a48d8e6e70a5b729852267eec18d6bb0211456c932f","dweb:/ipfs/QmcEGZUYAcXXqppB8Qr4mbK1nEQGoddaHqJDfno8HTJ2CT"]},"browser/MarkPandaToken/TokenTimelock.sol":{"keccak256":"0xc297c6e786e021f19714198160ea4a51e0425f1aa0ba3987b798d92a172a9c84","urls":["bzz-raw://005dbefcfdff2971367c643f1ce5c3caa406f2e1532fef6e8d21c55d9e8eda16","dweb:/ipfs/QmQv4vWE7qmzxRByCjKg5tP4ph1Ym3cxqJaLG9PhvsmtnV"]}},"version":1},"version":1,"checkPoints":[]}