{"address":"0xE40782171Fd4f583c98E41bD889b702bA9574BBB","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memberID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"saleID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"level","type":"uint256"}],"name":"GenerationalBonus","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memberID","type":"uint256"}],"name":"NewMember","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memberID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"saleID","type":"uint256"}],"name":"ReferalBonus","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memberID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"saleID","type":"uint256"}],"name":"TeamGrowthBonus","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"_member","type":"address"},{"internalType":"address","name":"_enroller","type":"address"}],"name":"addSpecialMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberID","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberID","type":"uint256"}],"name":"getEnrollerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_member","type":"address"}],"name":"getEnrollerID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_member","type":"address"}],"name":"getID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_member","type":"address"}],"name":"getMemberByAddress","outputs":[{"components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"enroller","type":"address"},{"internalType":"uint256","name":"salesMade","type":"uint256"},{"internalType":"bool","name":"masterLevel","type":"bool"},{"internalType":"uint256","name":"membershipEnds","type":"uint256"}],"internalType":"struct ETHGen.Member","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberID","type":"uint256"}],"name":"getMemberByID","outputs":[{"components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"enroller","type":"address"},{"internalType":"uint256","name":"salesMade","type":"uint256"},{"internalType":"bool","name":"masterLevel","type":"bool"},{"internalType":"uint256","name":"membershipEnds","type":"uint256"}],"internalType":"struct ETHGen.Member","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getMembersByOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_provider","type":"address"}],"name":"getProviderFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"hasMembers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_member","type":"address"}],"name":"isActiveByAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_memberID","type":"uint256"}],"name":"isActiveByID","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"isSmartAffiliate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"isSuperAffiliate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_from","type":"uint256"}],"name":"isTeamGrowthQualified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"memberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"members","outputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"enroller","type":"address"},{"internalType":"uint256","name":"salesMade","type":"uint256"},{"internalType":"bool","name":"masterLevel","type":"bool"},{"internalType":"uint256","name":"membershipEnds","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"membershipsSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_enroller","type":"address"},{"internalType":"uint256","name":"_numPeriods","type":"uint256"}],"name":"newMemberJoin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_provider","type":"address"},{"internalType":"address","name":"_enroller","type":"address"},{"internalType":"uint256","name":"_providerAmountInWEI","type":"uint256"},{"internalType":"uint256","name":"_distAmountInWEI","type":"uint256"}],"name":"processProductPurchase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"purchasePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"purchaseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_numPeriods","type":"uint256"}],"name":"renewMembership","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPrime","type":"address"}],"name":"setPrimary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_provider","type":"address"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setProviderFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"setPurchasePrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"setPurchaseTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"setTransferPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"transferMemberPosition","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"addSpecialMember(address,address)":{"details":"The addition of a special (always active) user in the system"},"constructor":{"details":"The Member constructor adds the owner as the base user account in the system (ID 1)"},"getAddress(uint256)":{"details":"Quick way to get the address from an ID in the system"},"getEnrollerAddress(uint256)":{"details":"Quick way to get the enroller address from a member ID in the system"},"getEnrollerID(address)":{"details":"Quick way to get the enroller ID from a member address in the system"},"getID(address)":{"details":"Quick way to get the ID from an address in the system"},"getMemberByAddress(address)":{"details":"Quick way to get a member structure from a member address"},"getMemberByID(uint256)":{"details":"Quick way to get a member structure from a member ID"},"getMembersByOwner(address)":{"details":"Traverse the list to get the IDs of all members enrolled by this address"},"getProviderFee(address)":{"details":"Get the fee percentage for a specified provider...    Note: 500 = 5.00% or 399 = 3.99%"},"hasMembers(address)":{"details":"Determines whether the member has sold any memberships yet at all"},"isActiveByAddress(address)":{"details":"Determines if the user is special (always active) or has remaining days left of their membership"},"isActiveByID(uint256)":{"details":"Determines if the user is special (always active) or has remaining days left of their membership"},"isOwner()":{"returns":{"_0":"true if `msg.sender` is the owner of the contract."}},"isSmartAffiliate(address)":{"details":"Determines whether the member still has at least 3 Active Affiliates"},"isSuperAffiliate(address)":{"details":"Determines whether the member still has at least 3 Active Smart Affiliates"},"isTeamGrowthQualified(address,uint256)":{"details":"Make sure they have two sales and the _from ID member is not in the 1st line of their team"},"membershipsSold(address)":{"details":"Determines how many members have ever purchased from a user (need to know if they have at least 2 or not in some cases)       same as number of directs to this user"},"newMemberJoin(address,uint256)":{"details":"The addition of a new member for the specified time and price under the specified enroller"},"owner()":{"returns":{"_0":"the address of the owner."}},"processProductPurchase(address,address,uint256,uint256)":{"details":"Allows a Provider to send commissions to the network (the provider MUST be a Member as well)    _providerAmountInGWEI + _distAmountInGWEI must match the amount sent by the purchaser    A percentage of the provider amount goes to ETH Gen as sales commissions unless the entire amount is sent to commission tree       Note: This will use the stored fee...or default to a standard 5.00% fee...providerToFee is set in setProviderFee by the contract owner    If the sender is in the system, it determines the enroller and ignores the _enroller passed   Otherwise, if the sender is not in the system, the sender is assumed to be a customer and an enroller should be specified who is responsible for the sale       Note: This means the provider tracked who the customer was brought to their site by (in other words, the affiliate who IS a member of this system)       Note: This is on the honor of the provider as the smart contract would not know this...they could pass a bad address and keep the customer as their own   But, if there is no _enroller passed, then the amount is considered a house sale and distribution amount starts with the provider as the enroller"},"renewMembership(uint256)":{"details":"Add the specified time and distribute the price for the renewal"},"setPrimary(address)":{"details":"Allows the account that over runs will roll up into to be changed"},"setProviderFee(address,uint256)":{"details":"Set the fee percentage for a specified provider...    Calculation will be: Amount * Fee / 10000       ex. Amount of 100 WEI, Fee of 1000: 100*1000/10000 = 10 WEI (10.00% of 100)       ex. Amount of 1000 WEI, Fee of 5: 1000*500/10000 = 50 WEI (5.00% of 1000)    Note: Used in processProductPurchase"},"setPurchasePrice(uint256)":{"details":"Allows the Purchase Price to be changed from 0.05 ether to keep it priced similar to starting USD price for future membership purchases"},"setPurchaseTime(uint256)":{"details":"Allows the Purchase Time to be changed from 35 days for future membership purchases"},"setTransferPrice(uint256)":{"details":"Allows the Transfer Price to be changed from 0.1 ether to keep it priced similar to starting USD price for transfers"},"transferMemberPosition(address)":{"details":"Allows a User to change the address associated with their membership to a new address (theirs or someone they are selling it to)"},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/ETHGen.sol":"ETHGen"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/ETHGen.sol":{"keccak256":"0xb1a79a87955b7907efbfe877b1913f256407eefea63c82cb65b7c0dbce94990a","license":"GPL-3.0","urls":["bzz-raw://43128ebe3e2d9634524eca92fd0e99271b04a447a16a3681b9a7d040ed51dd8f","dweb:/ipfs/QmNXRM7zzaktXB7EuDdksdo5UJfyMxPyb5PVs1ebKSYEhG"]},"contracts/Ownable.sol":{"keccak256":"0x2f004df18a39aabf945a9e66e5206a38c16a4088630bd9273fb7822eb78d9803","license":"GPL-3.0","urls":["bzz-raw://2845e382a047d637097ac04c973faa07e48ac48c8f9f69e09620c49c153d7768","dweb:/ipfs/QmPWHf8WqzqGok9NzeEbH6Z78wabbZuui4J89eLJVNYhP9"]},"contracts/SafeMath.sol":{"keccak256":"0x7b216759f170c91425b771401d83b5fcfe6c6107f225688d2edc1af517cb71c4","license":"GPL-3.0","urls":["bzz-raw://2a220b684bfdff62f863a7a83eb7f98ae6cf87084e3c2be3a8c786c411bd91a8","dweb:/ipfs/Qmcp3TwY4V69kpnu5qTfo4vhXNZ3n9Gsz6MQQJc9h3TCLG"]}},"version":1},"version":1,"checkPoints":[]}