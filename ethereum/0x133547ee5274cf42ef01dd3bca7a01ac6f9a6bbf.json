{"address":"0x133547ee5274CF42eF01Dd3bca7a01ac6f9a6BbF","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"senderID","type":"uint32"},{"indexed":false,"internalType":"address","name":"newPIN","type":"address"}],"name":"PINChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"orderID","type":"uint32"},{"indexed":false,"internalType":"bool","name":"_statusFlag","type":"bool"},{"indexed":false,"internalType":"bool","name":"_status","type":"bool"}],"name":"dataDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"CustomerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"MonetaryAmount","type":"uint256"}],"name":"fallbackCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"senderID","type":"uint32"},{"indexed":false,"internalType":"address","name":"PIN","type":"address"},{"indexed":false,"internalType":"address","name":"PUK","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2a","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2b","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2c","type":"address"}],"name":"newClaim","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"senderID","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"commitmentID","type":"uint32"}],"name":"newCommitment","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_PIN","type":"address"},{"indexed":false,"internalType":"uint32","name":"orderID","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"commitmentID","type":"uint32"},{"indexed":false,"internalType":"string","name":"_location","type":"string"},{"indexed":false,"internalType":"uint32","name":"_orderDate","type":"uint32"},{"indexed":false,"internalType":"uint40","name":"_gasForDelivery","type":"uint40"},{"indexed":false,"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"indexed":false,"internalType":"bool","name":"condition","type":"bool"},{"indexed":false,"internalType":"address","name":"receiverAddress","type":"address"}],"name":"newOrder","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"senderID","type":"uint32"},{"indexed":false,"internalType":"address","name":"PIN","type":"address"},{"indexed":false,"internalType":"address","name":"PUK","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2a","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2b","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2c","type":"address"}],"name":"newSender","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"BCPGross","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BCPOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BCPWebsite","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"senderID","type":"uint32"},{"internalType":"address payable","name":"_newPIN","type":"address"}],"name":"ChangePIN","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"orderID","type":"uint32"}],"name":"GetReceiverFromOrderID","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"senderID","type":"uint32"}],"name":"GetSenderInformation","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_commitmentID","type":"uint32"},{"internalType":"uint40","name":"_gasForMailbox","type":"uint40"}],"name":"GetTransactionCosts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GetsenderID","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"commitmentID","type":"uint32"},{"internalType":"uint32","name":"_newHorizon","type":"uint32"}],"name":"HorizonExtension","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"senderID","type":"uint32"},{"internalType":"uint32","name":"_horizon","type":"uint32"},{"internalType":"uint64","name":"_senderFee","type":"uint64"},{"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"internalType":"bytes32","name":"_descriptionHash","type":"bytes32"}],"name":"NewCommitment","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_PIN","type":"address"},{"internalType":"address payable","name":"_PUK","type":"address"}],"name":"NewSender","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_PIN","type":"address"},{"internalType":"address payable","name":"_PUK","type":"address"},{"internalType":"address","name":"_PUK2a","type":"address"},{"internalType":"address","name":"_PUK2b","type":"address"},{"internalType":"address","name":"_PUK2c","type":"address"}],"name":"NewSenderPro","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"commitmentID","type":"uint32"},{"internalType":"uint40","name":"_gasForMailbox","type":"uint40"},{"internalType":"string","name":"_location","type":"string"},{"internalType":"uint32","name":"_orderDate","type":"uint32"}],"name":"ORDER","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"orderID","type":"uint32"},{"internalType":"int88","name":"_data","type":"int88"},{"internalType":"bool","name":"_statusFlag","type":"bool"}],"name":"Relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"senderID","type":"uint32"},{"internalType":"address payable","name":"_newPIN","type":"address"},{"internalType":"address payable","name":"_newPUK","type":"address"},{"internalType":"address","name":"_newPUK2a","type":"address"},{"internalType":"address","name":"_newPUK2b","type":"address"},{"internalType":"address","name":"_newPUK2c","type":"address"}],"name":"ResetPINPUK","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"commitments","outputs":[{"internalType":"uint32","name":"senderID","type":"uint32"},{"internalType":"uint32","name":"_horizon","type":"uint32"},{"internalType":"uint64","name":"_senderFee","type":"uint64"},{"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"internalType":"bytes32","name":"_descriptionHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"ChangePIN(uint32,address)":{"params":{"_newPIN":"alternative PIN for the deleted one","senderID":"uint that identifies a specific sender (is constant)"}},"GetReceiverFromOrderID(uint32)":{"params":{"orderID":"uint that identifies a specific order (is constant)"}},"GetSenderInformation(uint32)":{"params":{"senderID":"uint that identifies a specific sender (is constant)"}},"HorizonExtension(uint32,uint32)":{"params":{"_newHorizon":"the date until when a sender commits himself (in epochtime)","commitmentID":"uint that identfies the senders most recent .xlsx file  -> here that ID should be chosen the sender wishes to extend"}},"NewCommitment(uint32,uint32,uint64,uint64,bytes32)":{"params":{"_descriptionHash":"sets the identification parameter for the commited data","_gasPrice":"sets the gas Price for the delivery process of that .xlsx file","_horizon":"the date until when a sender commits himself (in epochtime)","_senderFee":"sets the fee that is required to be paid within the order process","senderID":"uint that identifies a specific sender (is constant)"}},"NewSender(address,address)":{"params":{"_PIN":"is the SCAs main address","_PUK":"is the senders main address"}},"NewSenderPro(address,address,address,address,address)":{"params":{"_PIN":"is the SCAs main address","_PUK":"is the senders main address","_PUK2a":"first of the PUK2 triplet. Is held by the sender","_PUK2b":"second of the PUK2 triplet. Is held by the first trusted party","_PUK2c":"third of the PUK2 triplet. Is held by the second trusted party"}},"ORDER(uint32,uint40,string,uint32)":{"params":{"_gasForMailbox":"is the maximum of gas that is available for the delivery process (set by the receiver)","_location":"is the position (column and row) in the .xlsx file","_orderDate":"date on which the order should arrive (in epochtime)","commitmentID":"uint that identifies a specific commitment"}},"Relay(uint32,int88,bool)":{"params":{"_data":"is the finally requested information behind the order","_statusFlag":"is a control variable that shows if the incoming transaction contains the datapoint","orderID":"uint that identifies a specific order (is constant)"}}}},"userdoc":{"methods":{"ChangePIN(uint32,address)":{"notice":"to change the PIN address via the PUKhas to be called by the PUK"},"Collect()":{"notice":"transfers all collected payments from this contract to the owner"},"GetReceiverFromOrderID(uint32)":{"notice":"necessary to be able to display the receiver address on our webpage"},"GetSenderInformation(uint32)":{"notice":"returns the hole sender structhas to be called by the PUKis needed for testing purposes, you have to check whether PIN and/or PUK got changed"},"GetTransactionCosts(uint32,uint40)":{"notice":"The order & delivery module consists of nine order functions and the Relay function: The order functions differ in the number of function arguments: - GetTransactionCosts: Determines the transaction costs - GeneralOrder: Is the only order function that contains the hole function body - Relay: Receives the incoming data and transfers it to the final receiver and substracts the fee from the original payment of the receiver."},"GetsenderID()":{"notice":"determines the senderID via the addressthe possibility to easlily get your senderID increases the sender convenienceis needed for testing purposes, you have to know the senderID"},"HorizonExtension(uint32,uint32)":{"notice":"extends the senders commitment"},"NewCommitment(uint32,uint32,uint64,uint64,bytes32)":{"notice":"sets up new commitments for .xlsx files"},"NewSender(address,address)":{"notice":"function registers new senders within a lower security level using the PUK address as PUK und PUK2 triplet"},"NewSenderPro(address,address,address,address,address)":{"notice":"function register allows to set PIN, PUK and PUK2 triplet, thereby creating the senderIDthis function has to be called via the PUK address"},"ORDER(uint32,uint40,string,uint32)":{"notice":"general order function for customized orders"},"Relay(uint32,int88,bool)":{"notice":"receives the final data and collects the fee"},"constructor":"sets the BCPGross to be 0defines the initial safe lowdefines the owner to be the message sender"},"notice":"The Blockchain Presence smart contract consists of four modules: - Order & Delivery - Commitments - Account Management - Contract Governance"}},"settings":{"compilationTarget":{"browser/BCP.sol":"BlockchainPresence"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/BCP.sol":{"keccak256":"0x7cb6f951b78de9ecaf5edbead31362d52e7cb9d654259ebbf86b38d93c9a42e0","urls":["bzz-raw://0bfba51508bd9ba4ac10e2c1b015e3ed9c54eaed18710afb6845d74bc358ef2f","dweb:/ipfs/QmW2WxXvuHZ2LaiauhPLukK41yAQu9YJ2z7sDd8QD6nMUH"]}},"version":1},"version":1,"checkPoints":[]}