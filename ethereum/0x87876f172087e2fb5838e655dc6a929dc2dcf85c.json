{"address":"0x87876F172087E2fb5838E655DC6A929dC2Dcf85c","name":"","metadata":{"compiler":{"version":"0.6.2+commit.bacdbe57"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IShareToken","name":"_shareToken","type":"address"},{"internalType":"contract IERC20","name":"_cash","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"WrapperCreated","type":"event"},{"inputs":[],"name":"cash","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"name":"newERC20Wrapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_tokenIds","type":"uint256[]"},{"internalType":"string[]","name":"_names","type":"string[]"},{"internalType":"string[]","name":"_symbols","type":"string[]"},{"internalType":"uint8[]","name":"_decimals","type":"uint8[]"}],"name":"newERC20Wrappers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shareToken","outputs":[{"internalType":"contract IShareToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"unWrapMultipleTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"unWrapTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_tokenIds","type":"uint256[]"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"wrapMultipleTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"wrapTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"wrappers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"yashnaman as shares on outcomes of a markets. For every outcome there will be one wrapper.","details":"This is a factory that creates Wrappers around ERC1155 shareTokens generated by Augur","methods":{"constructor":{"details":"sets value for {shareToken} and {cash}","params":{"_shareToken":"address of shareToken associated with a augur universe param _cash DAI"}},"newERC20Wrapper(uint256,string,string,uint8)":{"details":"creates new ERC20 wrappers for a outcome of a market param _tokenId token id associated with a outcome of a market param _name a descriptive name mentioning market and outcome param _symbol symbol for the ERC20 wrapper param decimals decimals for the ERC20 wrapper"},"newERC20Wrappers(uint256[],string[],string[],uint8[])":{"details":"creates new ERC20 wrappers for multiple tokenIds"},"unWrapMultipleTokens(uint256[],uint256[])":{"details":"unwraps multiple tokens "},"unWrapTokens(uint256,uint256)":{"details":"A function that burns ERC20s and gives back ERC1155s Requirements:     * - msg.sender has more than _amount of ERC20 tokens associated with _tokenId. - if the market has finalized then it is  advised that you call claim() on ERC20Wrapper contract associated with the winning outcome","params":{"_amount":"amount of tokens to be unwrapped","_tokenId":"token id associated with a outcome of a market"}},"wrapMultipleTokens(uint256[],address,uint256[])":{"details":"wraps multiple tokens "},"wrapTokens(uint256,address,uint256)":{"details":"A function that wraps ERC1155s shareToken into ERC20s Requirements:     * -  msg.sender has setApprovalForAll to this contract","params":{"_account":"account the newly minted ERC20s will go to","_amount":"amount of tokens to be wrapped","_tokenId":"token id associated with a outcome of a market"}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/AugurFoundry.sol":"AugurFoundry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/AugurFoundry.sol":{"keccak256":"0x6c957619a56bfa6e5bde8d948b2abbfcdd82f819c4aec4be1df97e0d63eb587b","urls":["bzz-raw://47a49f0b3835c5c09c975749afdf536075cc05d8300a514249afa2e0ed6cd467","dweb:/ipfs/QmXV9ENrec35MoEHAZhZcBxKDouWSZjBAsDcEr8mq5uZk8"]}},"version":1},"version":1,"checkPoints":[]}