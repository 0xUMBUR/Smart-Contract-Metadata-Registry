{"address":"0x17e8f719BaE3081B289C225e05a19d252425BC58","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract EtruriaV1","name":"_etruria","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_withdrawBlockTimeout","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"addTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rwdAmount","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rwdToken","outputs":[{"internalType":"contract AureusV1","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokensHeld","outputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokensHeldLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"}],"name":"withdrawExcess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawTimeout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"addTokens(address,uint256)":{"details":"- This function allows the owner to add tokens to this contract that can be distributed at the end of the farming program","params":{"_amount":"- The amount of ERC20 tokens that will be transferred from the owner to this contract","_token":"- The address of the ERC20 token that will be deposited in the contract"}},"claim(uint256)":{"details":"- Claim function which is called by the user to claim their share of reward tokens after the end of the farming program","params":{"_rwdAmount":"- The amount of reward tokens that the user accumulated and will be burned to unlock the tokens held in this contract"}},"constructor":{"details":"- Constructor","params":{"_etruria":"- This is the address of the master contract used to farm the ERC20 token that will be used to unlock rewards from this contract","_owner":"- The address to which ownership of this contract will be passed in the constructor","_withdrawBlockTimeout":"- The timeout added after the end of the program after which the owner can withdraw any excess tokens left in this contract"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"tokensHeldLength()":{"details":"- A function to check the length of the array of structs"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawExcess(address)":{"details":"- A function to withdraw any excess tokens left in this contract after the program has ended and the timeout has expired","params":{"_receiver":"- The address to which the remaining excess tokens will be sent"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"AerariumSanctiusV1.sol":"AerariumSanctiusV1"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c","license":"MIT","urls":["bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7","dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b","license":"MIT","urls":["bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c","dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835","license":"MIT","urls":["bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f","dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"]},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"keccak256":"0x821af334ad764368c6b1f549e66b0bb29a96af560a2336ea5d833529f7d5525c","license":"MIT","urls":["bzz-raw://964556033234fa07765890a58fba434c68da0952d1e70d24e56c3b5b2c9a6ce4","dweb:/ipfs/QmbkW9NZgHMNjYge7v9ZmftCvTrmwbv3QRjo7qChmjtQXC"]},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2","license":"MIT","urls":["bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013","dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY"]},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7","license":"MIT","urls":["bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451","dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45","license":"MIT","urls":["bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e","dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0","license":"MIT","urls":["bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395","dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e","license":"MIT","urls":["bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509","dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT"]},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9","license":"MIT","urls":["bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544","dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS"]},"AerariumSanctiusV1.sol":{"keccak256":"0x9bfcd74645d9c2769f947d4a07fc4a8a1da99e5fb8c6ec10bafbd3bdcd356a89","license":"MIT","urls":["bzz-raw://e7aadc0c80c7d1c3bcc6df1f4bdfda7c0bb6d35e745bd5dee43cce76dd41e7d9","dweb:/ipfs/QmTM4rm7QaJpRZaf8NfErcotfp3qDtXnBza6c7gQxU5DM9"]},"AureusV1.sol":{"keccak256":"0x6d18b23306272f51623dc0dba1507ef09caa916341ab3ea3989f6bbf950cf2e5","license":"MIT","urls":["bzz-raw://46e067c668e0681ca1a1163185a137123f3f629d561246be4db19d1ea3f685ef","dweb:/ipfs/QmVMNZ1yTQJmD4ADfLdmaPQ7ixwJfQbXZroeLmhHanHsPD"]},"EtruriaV1.sol":{"keccak256":"0x5d53135daa1916538a24e89151b8b829df8bcb9ffa146b2e743514d57aae30e0","license":"MIT","urls":["bzz-raw://b67b348f578c72f00a4f5f17d65f929dcd903a559590b74ecd5315335125b9cb","dweb:/ipfs/QmTDXPsPZyNw3NcaNhzScFNpbAUXbsrc6bKjYRueGHhpnX"]}},"version":1},"version":1,"checkPoints":[]}