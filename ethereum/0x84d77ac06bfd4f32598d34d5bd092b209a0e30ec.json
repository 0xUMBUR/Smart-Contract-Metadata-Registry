{"address":"0x84d77aC06bFd4F32598d34D5BD092b209A0e30Ec","name":"","metadata":{"compiler":{"version":"0.6.10+commit.00c0fcaf"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IBaseManager","name":"_manager","type":"address"},{"internalType":"contract IStreamingFeeModule","name":"_streamingFeeModule","type":"address"},{"internalType":"contract IIssuanceModule","name":"_issuanceModule","type":"address"},{"internalType":"uint256","name":"_operatorFeeSplit","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bool","name":"_status","type":"bool"}],"name":"AnyoneCallableUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_caller","type":"address"},{"indexed":false,"internalType":"bool","name":"_status","type":"bool"}],"name":"CallerStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":true,"internalType":"address","name":"_methodologist","type":"address"},{"indexed":false,"internalType":"uint256","name":"_operatorTake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_methodologistTake","type":"uint256"}],"name":"FeesAccrued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"_upgradeHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"UpgradeRegistered","type":"event"},{"inputs":[],"name":"accrueFeesAndDistribute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"anyoneCallable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"callAllowList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"issuanceModule","outputs":[{"internalType":"contract IIssuanceModule","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"contract IBaseManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operatorFeeSplit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timeLockPeriod","type":"uint256"}],"name":"setTimeLockPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setToken","outputs":[{"internalType":"contract ISetToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"streamingFeeModule","outputs":[{"internalType":"contract IStreamingFeeModule","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeLockPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"timeLockedUpgrades","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"updateAnyoneCallable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_callers","type":"address[]"},{"internalType":"bool[]","name":"_statuses","type":"bool[]"}],"name":"updateCallerStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newFeeRecipient","type":"address"}],"name":"updateFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFeeSplit","type":"uint256"}],"name":"updateFeeSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateIssueFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateRedeemFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateStreamingFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol Smart contract adapter that allows for splitting and setting streaming and mint/redeem fees. ","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setTimeLockPeriod(uint256)":{"params":{"_timeLockPeriod":"Time in seconds that upgrades need to be evaluated before execution"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateAnyoneCallable(bool)":{"params":{"_status":"Boolean indicating whether to allow anyone call"}},"updateCallerStatus(address[],bool[])":{"params":{"_callers":"Array of caller addresses to toggle status","_statuses":"Array of statuses for each caller"}}},"title":"FeeSplitAdapter"},"userdoc":{"methods":{"accrueFeesAndDistribute()":{"notice":"ANYONE CALLABLE: Accrues fees from streaming fee module. Gets resulting balance after fee accrual, calculates fees for operator and methodologist, and sends to each. NOTE: mint/redeem fees will automatically be sent to this address so reading the balance of the SetToken in the contract after accrual is sufficient for accounting for all collected fees."},"setTimeLockPeriod(uint256)":{"notice":"Change timeLockPeriod period. Generally called after initially settings have been set up."},"updateAnyoneCallable(bool)":{"notice":"OPERATOR ONLY: Toggle whether anyone can call function, bypassing the callAllowlist "},"updateCallerStatus(address[],bool[])":{"notice":"OPERATOR ONLY: Toggle ability for passed addresses to call only allowed caller functions"},"updateFeeRecipient(address)":{"notice":"ONLY OPERATOR: Updates fee recipient on both streaming fee and issuance modules."},"updateFeeSplit(uint256)":{"notice":"ONLY OPERATOR: Updates fee split between operator and methodologist. Split defined in precise units (1% = 10^16)."},"updateIssueFee(uint256)":{"notice":"ONLY OPERATOR: Updates issue fee on IssuanceModule. Only is executed once time lock has passed."},"updateRedeemFee(uint256)":{"notice":"ONLY OPERATOR: Updates redeem fee on IssuanceModule. Only is executed once time lock has passed."},"updateStreamingFee(uint256)":{"notice":"ONLY OPERATOR: Updates streaming fee on StreamingFeeModule. NOTE: This will accrue streaming fees though not send to operator and methodologist."}}}},"settings":{"compilationTarget":{"browser/FeeSplit.sol":"FeeSplitAdapter"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/FeeSplit.sol":{"keccak256":"0x81839d64e10543365b7d32161a942f6dbaa26ec9d7ad803e78933094b9ce2f50","urls":["bzz-raw://42d653d43020fa813d0cb2d6ae2981fb8346a9cb54883a9ace97eec4ea21fc6f","dweb:/ipfs/QmeMbL8TRhnotWqfNv1XK1c1gjjdgMhsG9MtGBaS1xrix9"]}},"version":1},"version":1,"checkPoints":[]}