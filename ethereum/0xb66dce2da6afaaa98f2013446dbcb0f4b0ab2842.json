{"address":"0xb66DcE2DA6afAAa98F2013446dBCB0f4B0ab2842","name":"","metadata":{"compiler":{"version":"0.5.12+commit.7709ece9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract Registry","name":"registry","type":"address"},{"internalType":"contract MintingController","name":"mintingController","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"string","name":"keyIndex","type":"string"},{"indexed":false,"internalType":"string","name":"key","type":"string"}],"name":"NewKey","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ResetRecords","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"string","name":"keyIndex","type":"string"},{"indexed":true,"internalType":"string","name":"valueIndex","type":"string"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"Set","type":"event"},{"constant":true,"inputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"get","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"keyHash","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getByHash","outputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMany","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256[]","name":"keyHashes","type":"uint256[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getManyByHash","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"keyHash","type":"uint256"}],"name":"hashToKey","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256[]","name":"hashes","type":"uint256[]"}],"name":"hashesToKeys","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"nonceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"preconfigure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"reconfigure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"reconfigureFor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"reset","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"resetFor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setFor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"setMany","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string[]","name":"keys","type":"string[]"},{"internalType":"string[]","name":"values","type":"string[]"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setManyFor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"get(string,uint256)":{"details":"Function to get record.","params":{"key":"The key to query the value of.","tokenId":"The token id to fetch."},"return":"The value string."},"getByHash(uint256,uint256)":{"details":"Function get value by provied key hash. Keys hashes can be found in Sync event emitted by Registry.sol contract.","params":{"keyHash":"The key to query the value of.","tokenId":"The token id to set."},"return":"Key and value."},"getMany(string[],uint256)":{"details":"Function to get multiple record.","params":{"keys":"The keys to query the value of.","tokenId":"The token id to fetch."},"return":"The values."},"getManyByHash(uint256[],uint256)":{"details":"Function get values by provied key hashes. Keys hashes can be found in Sync event emitted by Registry.sol contract.","params":{"keyHashes":"The key to query the value of.","tokenId":"The token id to set."},"return":"Keys and values."},"hashToKey(uint256)":{"details":"Function to get key by provided hash. Keys hashes can be found in Sync event emitted by Registry.sol contract.","params":{"keyHash":"The key to query the value of."},"return":"The key string."},"hashesToKeys(uint256[])":{"details":"Function to get keys by provided key hashes. Keys hashes can be found in Sync event emitted by Registry.sol contract.","params":{"hashes":"The key to query the value of."},"return":"Keys"},"nonceOf(uint256)":{"details":"Gets the nonce of the specified address.","params":{"tokenId":"token ID for nonce query"},"return":"nonce of the given address"},"reconfigure(string[],string[],uint256)":{"details":"Function to reset all domain records and set new ones.","params":{"keys":"records keys.","tokenId":"domain token id.","values":"records values."}},"reconfigureFor(string[],string[],uint256,bytes)":{"details":"Delegated version of reconfigure() function.","params":{"keys":"records keys.","signature":"user signature.","tokenId":"domain token id.","values":"records values."}},"set(string,string,uint256)":{"details":"Function to set record.","params":{"key":"The key set the value of.","tokenId":"The token id to set.","value":"The value to set key to."}},"setFor(string,string,uint256,bytes)":{"details":"Function to set record on behalf of an address.","params":{"key":"The key set the value of.","signature":"The signature to verify the transaction with.","tokenId":"The token id to set.","value":"The value to set key to."}},"setManyFor(string[],string[],uint256,bytes)":{"details":"Function to set record on behalf of an address.","params":{"keys":"The keys set the values of.","signature":"The signature to verify the transaction with.","tokenId":"The token id to set.","values":"The values to set keys to."}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/Resolver.sol":"Resolver"},"evmVersion":"petersburg","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Resolver.sol":{"keccak256":"0xcd75e7dd64636551adbf48cbf80807d554604b7404f3fcf25e1fa7bb153f5c1d","urls":["bzz-raw://498886699f4c0567e1373d3df92af386a5972c4d7af8db77ae142a51b870c19d","dweb:/ipfs/QmTZbZY1XT756C1Yv8iTisQ7bzWpc4wSxRrJWrJbZXPwX2"]}},"version":1},"version":1,"checkPoints":[]}