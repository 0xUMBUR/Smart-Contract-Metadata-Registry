{"address":"0x1cEb17F481B893201F3d0503AEd91f1886695Df1","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"execHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"task","type":"address"}],"name":"RequestCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"execHash","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"timestamp","type":"int256"}],"name":"RequestEnableOrDisableTimeoutStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"execHash","type":"bytes32"}],"name":"RequestTokensRemoved","type":"event"},{"inputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"},{"internalType":"uint256","name":"gasPrice","type":"uint256"}],"name":"bumpGas","outputs":[{"internalType":"bytes32","name":"newExecHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"},{"internalType":"uint256","name":"withdrawDelaySeconds","type":"uint256"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"},{"internalType":"address","name":"executor","type":"address"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"bool","name":"reverted","type":"bool"}],"name":"execCompleted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"}],"name":"isDisabled","outputs":[{"internalType":"bool","name":"isDisabled","type":"bool"},{"internalType":"int256","name":"disableTimestamp","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestBounties","outputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestCalldatas","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestCreators","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"task","type":"address"},{"internalType":"bytes","name":"l1calldata","type":"bytes"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"components":[{"internalType":"contract IERC20","name":"l2Token","type":"address"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct L2_NovaRegistry.InputToken[]","name":"inputTokens","type":"tuple[]"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct L2_NovaRegistry.Bounty[]","name":"bounties","type":"tuple[]"}],"name":"requestExec","outputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"task","type":"address"},{"internalType":"bytes","name":"l1calldata","type":"bytes"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"components":[{"internalType":"contract IERC20","name":"l2Token","type":"address"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct L2_NovaRegistry.InputToken[]","name":"inputTokens","type":"tuple[]"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct L2_NovaRegistry.Bounty[]","name":"bounties","type":"tuple[]"},{"internalType":"uint256","name":"autoCancelDelay","type":"uint256"}],"name":"requestExecWithTimeout","outputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestGasLimits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestGasPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestInputTokens","outputs":[{"internalType":"contract IERC20","name":"l2Token","type":"address"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requestTasks","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"execHash","type":"bytes32"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"requestExec(address,bytes,uint256,uint256,(address,address,uint256)[],(address,uint256)[])":{"params":{"bounties":"An array of tokens that will be awarded to the bot who executes the request. Only 50% of the bounty will be paid to the bot if the `task` reverts on L1.","gasLimit":"The gas limit a bot should use on L1.","gasPrice":"The gas price a bot should use on L1.","inputTokens":"An array of token amounts that a bot will need on L1 to execute the request (`l1Token`s) along with the equivalent tokens that will be returned on L2 (`l2Token`s). `inputTokens` will not be awarded if the `task` reverts on L1.","l1calldata":"The abi encoded calldata a bot should call the `task` with on L1.","task":"The address of the \"task\" contract on L1 a bot should call with `calldata`."}},"requestExecWithTimeout(address,bytes,uint256,uint256,(address,address,uint256)[],(address,uint256)[],uint256)":{"details":"See `requestExec` and `cancel` for more information."}},"stateVariables":{"requestDisableOrEnableTimestamps":{"details":"Maps execHashes to a timestamp representing when the request will be disabled/enabled.If the timestamp is negative it means the request will be disabled at (the absolute value of) that timestamp.If the timestamp is positive it means the request will be enabled at that timestamp."},"requestTokensRemoved":{"details":"Maps execHashes to a boolean indicating whether the tokens (inputs/bounties) have been removed, either via a bot successfully executing the request, a withdrawal, or a bump."},"systemNonce":{"details":"The most recent nonce assigned to an execution request."}},"version":1},"userdoc":{"events":{"RequestCreated(bytes32,address)":{"notice":"Emitted when `requestExec` is called."},"RequestEnableOrDisableTimeoutStarted(bytes32,int256)":{"notice":"Emitted when an update to `requestDisableOrEnableTimestamps` is made."},"RequestTokensRemoved(bytes32)":{"notice":"Emitted when an update to `requestTokensRemoved` is made."}},"kind":"user","methods":{"requestBounties(bytes32,uint256)":{"notice":"Maps execHashes to the 'bounty' tokens a bot will recieve for executing the request."},"requestCalldatas(bytes32)":{"notice":"Maps execHashes to the calldata associated with the request."},"requestCreators(bytes32)":{"notice":"Maps execHashes to the creator of each request."},"requestExecWithTimeout(address,bytes,uint256,uint256,(address,address,uint256)[],(address,uint256)[],uint256)":{"notice":"Calls `requestExec` with all relevant parameters along with calling `cancel` with the `autoCancelDelay` argument."},"requestGasLimits(bytes32)":{"notice":"Maps execHashes to the gas limit a bot should use to execute the request."},"requestGasPrices(bytes32)":{"notice":"Maps execHashes to the gas price a bot must use to execute the request."},"requestInputTokens(bytes32,uint256)":{"notice":"Maps execHashes to the input tokens a bot must have to execute the request."},"requestTasks(bytes32)":{"notice":"Maps execHashes to the address of the task associated with the request."}},"version":1}},"settings":{"compilationTarget":{"contracts/1_Storage.sol":"L2_NovaRegistry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":999999},"remappings":[]},"sources":{"contracts/1_Storage.sol":{"keccak256":"0x634b5774ec437544af825626cb0025d2f826119183f1eb13f83dfc03704e19e2","license":"AGPL-3.0-only","urls":["bzz-raw://53d93e521e0480c7726c3f2c1f7c76d619b5589b640600cd97ffbe2ecafecdd3","dweb:/ipfs/QmSC8EkiMgMNMuUre67VBesmPcckjQ8gExmDssdUVpCXZA"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol":{"keccak256":"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52","license":"MIT","urls":["bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c","dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5","license":"MIT","urls":["bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08","dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc","license":"MIT","urls":["bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a","dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol":{"keccak256":"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea","license":"MIT","urls":["bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c","dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"]}},"version":1},"version":1,"checkPoints":[]}