{"address":"0xd2b82b4A403eCF6b2ce2BFeF316e9e5df949273b","name":"","metadata":{"compiler":{"version":"0.8.2+commit.661d1103"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"fees_","type":"uint256"},{"internalType":"address","name":"safe_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"fees","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAAmount","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenBAmount","type":"uint256"},{"indexed":true,"internalType":"bool","name":"completed","type":"bool"}],"name":"EndOfOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"fees","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAAmount","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenBAmount","type":"uint256"}],"name":"NewOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"SafeEx","outputs":[{"internalType":"contract SafeExContract","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"name":"createOffer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"offerID","type":"uint256"}],"name":"getOfferFromId","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"uint256","name":"fees","type":"uint256"},{"internalType":"contract IERC20","name":"tokenA","type":"address"},{"internalType":"uint256","name":"tokenAAmount","type":"uint256"},{"internalType":"contract IERC20","name":"tokenB","type":"address"},{"internalType":"uint256","name":"tokenBAmount","type":"uint256"}],"internalType":"struct Exchange.Offer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"}],"name":"offersFrom","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"offersTo","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"offerID","type":"uint256"}],"name":"removeOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fees_","type":"uint256"}],"name":"setFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract SafeExContract","name":"safe_","type":"address"}],"name":"setSafeEx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"offerID","type":"uint256"}],"name":"validateOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Exchange contract. This contract gives to the user the ability to create offers to a specific address or to the 0 address. In the first case only the given address will be able to achieve the transaction, in the second case, the offer is openned to anybody. An offer is basically a transaction from a token A with amount x to a token B with amount y. Any user can create an offer by paying the offer creation fees in SAFE.","kind":"dev","methods":{"SafeEx()":{"details":"Returns the SafeExToken contract address"},"balanceOf(address)":{"details":"Returns the deposited amount of SAFE for `account` with the same number of decimals as the SAFE token (e.g. 0)"},"createOffer(address,address,address,uint256,uint256)":{"details":"Creates a new offer. Requirements:  - the caller must have a balance of at least `fees` SAFE token locked in    this contract  - `tokenA` cannot be 0x0  - `tokenB` cannot be 0x0  - the caller must have at least `amountA` of `tokenA`  - `amountA` cannot be equal to 0  - `amountB` cannot be equal to 0"},"deposit(uint256)":{"details":"Deposits `amount` of SAFE token. Requirements:  - the contract must have an allowance of at least `amount`  - the caller must have at least `amount` of token"},"fees()":{"details":"Returns fees in SAFE to be paid for creating an offer."},"getOfferFromId(uint256)":{"details":"Returns the detailed offer from its `offerID`"},"offersFrom(address)":{"details":"Returns an array containing all offer ids concerning the seller address `from`"},"offersTo(address)":{"details":"Returns an array containing all offer ids concerning the buyer address `to` To see open offers, it is possible to call this method with the zero address"},"owner()":{"details":"Returns the address of the current owner."},"removeOffer(uint256)":{"details":"Removes an offer before its validation. Fees will be re-funded to the caller. Requirements:  - the caller must be the seller of the offer identified by `offerID`"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setFees(uint256)":{"details":"Set the fees. Note here fees can be 0. See {fees} for more information Requirements:  - the caller must be the contract owner  - fees must be strictly positive"},"setSafeEx(address)":{"details":"Sets the SafeExToken contract address Requirements:  - the caller must be the contract owner  - `safe_` cannot be the 0x0 address"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validateOffer(uint256)":{"details":"Validates an offer by transferring `amountB` of `tokenB` and getting `amountA` of `tokenA`. `amountB` will be sent to the seller; From this point the offer is automatically removed from active offers. Requirements:  - the caller must be the buyer of the offer identified by `offerID`, or buyer address must be    defined as the 0x0 address  - the caller must have at least `amountB` of `tokenB`"},"withdraw(uint256)":{"details":"Withdraws `amount` of SAFE token. Requirements:  - the caller must have deposited at least `amount` of token"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/contracts/ex.sol":"Exchange"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/contracts/ex.sol":{"keccak256":"0xe2721493de539bb2dbfb936425618efead793f68c66db1cef05303630aa637c4","license":"MIT","urls":["bzz-raw://94caf9886360e347899b3ed571da7e1a61c138fde6ce786c5c84efbfa82a8f2f","dweb:/ipfs/QmYGRrztUxfe6sKBQqtVN6Amzgpc46trmJhkzNr2grSyxz"]}},"version":1},"version":1,"checkPoints":[]}