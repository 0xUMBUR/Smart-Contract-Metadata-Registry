{"address":"0x0D9992985FAc6ac964Eb73529E6d6F5D1Cfaa978","name":"","metadata":{"compiler":{"version":"0.5.16+commit.9c3226ce"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_proxyRegistryAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":false,"internalType":"bool","name":"_approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"_uri","type":"string"},{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"}],"name":"URI","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_quantities","type":"uint256[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"batchMint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"},{"internalType":"string","name":"_uri","type":"string"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"create","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"creators","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"isOperator","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_newBaseMetadataURI","type":"string"}],"name":"setBaseMetadataURI","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes4","name":"_interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"balanceOf(address,uint256)":{"params":{"_id":"ID of the Token","_owner":"The address of the token holder"},"return":"The _owner's balance of the Token type requested"},"balanceOfBatch(address[],uint256[])":{"params":{"_ids":"ID of the Tokens","_owners":"The addresses of the token holders"},"return":"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"},"batchMint(address,uint256[],uint256[],bytes)":{"details":"Mint tokens for each id in _ids","params":{"_data":"Data to pass if receiver is contract","_ids":"Array of ids to mint","_quantities":"Array of amounts of tokens to mint per id","_to":"The address to mint tokens to"}},"create(address,uint256,string,bytes)":{"details":"Creates a new token type and assigns _initialSupply to an address NOTE: remove onlyOwner if you want third parties to create new tokens on your contract (which may change your IDs)","params":{"_data":"Data to pass if receiver is contract","_initialOwner":"address of the first owner of the token","_initialSupply":"amount to supply the first owner","_uri":"Optional URI for this token type"},"return":"The newly created token ID"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"mint(address,uint256,uint256,bytes)":{"details":"Mints some amount of tokens to an address","params":{"_data":"Data to pass if receiver is contract","_id":"Token ID to mint","_quantity":"Amount of tokens to mint","_to":"Address of the future owner of the token"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"params":{"_amounts":"Transfer amounts per token type","_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source addresses","_ids":"IDs of each token type","_to":"Target addresses"}},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"params":{"_amount":"Transfered amount","_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source address","_id":"ID of the token type","_to":"Target address"}},"setApprovalForAll(address,bool)":{"params":{"_approved":"True if the operator is approved, false to revoke approval","_operator":"Address to add to the set of authorized operators"}},"setBaseMetadataURI(string)":{"details":"Will update the base URL of token's URI","params":{"_newBaseMetadataURI":"New base URL of token's URI"}},"supportsInterface(bytes4)":{"params":{"_interfaceID":"The interface identifier, as specified in ERC-165"},"return":"`true` if the contract implements `_interfaceID` and"},"totalSupply(uint256)":{"details":"Returns the total quantity for a token ID","params":{"_id":"uint256 ID of the token to query"},"return":"amount of token in existence"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"ERC1155Tradable ERC1155Tradable - ERC1155 contract that whitelists an operator address, has create and mint functionality, and supports useful standards from OpenZeppelin, like _exists(), name(), symbol(), and totalSupply()"},"userdoc":{"methods":{"balanceOf(address,uint256)":{"notice":"Get the balance of an account's Tokens"},"balanceOfBatch(address[],uint256[])":{"notice":"Get the balance of multiple account/token pairs"},"isApprovedForAll(address,address)":{"notice":"Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-free listings."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"notice":"Send multiple types of Tokens from the _from address to the _to address (with safety call)"},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"notice":"Transfers amount amount of an _id from the _from address to the _to address specified"},"setApprovalForAll(address,bool)":{"notice":"Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"},"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"}}}},"settings":{"compilationTarget":{"browser/ERC1155Tradable.sol":"ERC1155Tradable"},"evmVersion":"istanbul","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/ERC1155Tradable.sol":{"keccak256":"0x7d2d3d73e79e77257a0dbcd9cab13ae93af597ef7dbc1cdd2a667071e9201b3e","urls":["bzz-raw://0095e846482717f711df0add4c4b6350595630ba08f1fd266855e966bb0bc1f7","dweb:/ipfs/QmZvHknF5A5asUjZmmuyrBczurKaqQrfAZ1RD6ymQCY46t"]},"browser/Strings.sol":{"keccak256":"0x9b8fbbe7631bdefbc43d541513641a8c560036fff257722fbef18d85d7134d5c","urls":["bzz-raw://6eaff14f2ea8ed43b23cc63b4b1367fe9192b82b7d04e041e9172b599923d823","dweb:/ipfs/QmcJ1GuPaky89WYDDRYK7pRpyrTYeA8NJccScwGL9ewWS7"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/GSN/Context.sol":{"keccak256":"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061","urls":["bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436","dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/ownership/Ownable.sol":{"keccak256":"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24","urls":["bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e","dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/interfaces/IERC1155.sol":{"keccak256":"0x68b549031029b9f8a0eec4da4a9c7fd83030a6e666fefffbe97d3d683c0a35d4","urls":["bzz-raw://d4bcbb13f2b0b68061c37a5d7e4290f7dea7f27de342e53f2bb4b2562ff8beb2","dweb:/ipfs/QmS8huMSyernufyPXqWDBVVPzzpuFgFdsgA2g4PZncgmHj"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/interfaces/IERC1155TokenReceiver.sol":{"keccak256":"0x3cdf862cc5d3403ea83f548e5a5fbd11d4fb9a4f2da9b8b234c1799419b39f2b","urls":["bzz-raw://49bfef837d71ee5cf3e4aba2bbdc449c4226517488915cf3294c1e056d21eeeb","dweb:/ipfs/Qmazz5HHpkRS7esc6y7f5RtRBLZAxjvFuuBX698ZFT4NoP"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/interfaces/IERC165.sol":{"keccak256":"0xa652c218ad6778ac294c6900f50e8f3c3f373277a7f9afba24297f986805e2bc","urls":["bzz-raw://a4fb41b4291a623b9725ee5d6b363377b94b302ead873f57f4ca18b81e6a7b21","dweb:/ipfs/QmPiWmRMktZTrUJPD3pYqZmBzVUdf3f9WmgHfcBK2Qgi8U"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/tokens/ERC1155/ERC1155.sol":{"keccak256":"0x73b2983ddcb1103fdc75a96e8c29865be6df0feefc8b7fa016d218b70b275a8f","urls":["bzz-raw://7fbd8fdc0c22001f4fa6f60af2f0f70b8f6e0b2096b3315eb85686966f432244","dweb:/ipfs/QmNz2uFFBUy4BJFNS37BHRxDuzH9x9eYXp1FByYkX46iZX"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol":{"keccak256":"0x89f189ac68d98a82a78b9d8625cc80640e725ec9c67f01e2e61e11885aac6561","urls":["bzz-raw://e339f8f561ee79e9a65c52a900b239a42c96eb86b193cb538cdf4e66ebd25b86","dweb:/ipfs/QmWffW6xg3GYBpTEf53GzF13ccH5q1Agz4eFKpkjbBfBsF"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol":{"keccak256":"0xa979a927aaa5d0c6d46b0995675f8bdd99e74e74f548f111c8af695d305bf817","urls":["bzz-raw://ccd7dc822b2c754ab23716ac29fe853c96b841b186d63a941491f3a202842e41","dweb:/ipfs/QmXPFvGKwdfD7bH1kDpE5HqaCUsG2tETKXsPM1jaFuX1RT"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/utils/Address.sol":{"keccak256":"0x92f1e6990efaaf076a66e47541e40f90c7146c045b3ad9b74e1f76e510a431f4","urls":["bzz-raw://a79582d210212c4fb1420fa5c7b438731bf7fcb172080e8074cc257793adb476","dweb:/ipfs/QmRTFVRJCStccWvAWdPKatBJLrbJqPuZopXCLKWJ8UtaPA"]},"https://github.com/ProjectOpenSea/multi-token-standard/contracts/utils/SafeMath.sol":{"keccak256":"0xe244d8105233bbf40e1a904aad734d06a12a042125ab5b54602b139a944f93eb","urls":["bzz-raw://485341243f10e172ba41995f6ee10d9f472ab19b47dc8832ad7d9fc920da99e2","dweb:/ipfs/QmPSRmyKZx6rTGPjBzk5wNnVkGweBAjyxpLa277KHhKVQs"]}},"version":1},"version":1,"checkPoints":[]}