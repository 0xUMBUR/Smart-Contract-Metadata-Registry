{"address":"0x68Cf58DD7d90bBcfAc51D52bF5005c202B17974c","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"deployer","type":"address"}],"name":"DeploymentApprovalGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"deployer","type":"address"}],"name":"DeploymentApprovalRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"indexed":false,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ManyToOne_ImplementationCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"implementationID","type":"bytes32"}],"name":"ManyToOne_ImplementationLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"indexed":false,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ManyToOne_ImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"}],"name":"ManyToOne_ProxyDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"}],"name":"OneToOne_ImplementationLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"OneToOne_ImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"OneToOne_ProxyDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"name":"approveDeployer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"}],"name":"computeHolderAddressManyToOne","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"originator","type":"address"},{"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"internalType":"bytes32","name":"suppliedSalt","type":"bytes32"}],"name":"computeProxyAddressManyToOne","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"originator","type":"address"},{"internalType":"bytes32","name":"suppliedSalt","type":"bytes32"}],"name":"computeProxyAddressOneToOne","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"}],"name":"createManyToOneProxyRelationship","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"internalType":"bytes32","name":"suppliedSalt","type":"bytes32"}],"name":"deployProxyManyToOne","outputs":[{"internalType":"address","name":"proxyAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"suppliedSalt","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"}],"name":"deployProxyOneToOne","outputs":[{"internalType":"address","name":"proxyAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getImplementationHolder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"}],"name":"getImplementationHolder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"name":"isApprovedDeployer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"}],"name":"isImplementationLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proxyAddress","type":"address"}],"name":"isImplementationLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"}],"name":"lockImplementationManyToOne","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxyAddress","type":"address"}],"name":"lockImplementationOneToOne","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"name":"revokeDeployerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"implementationID","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"}],"name":"setImplementationAddressManyToOne","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxyAddress","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"setImplementationAddressOneToOne","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract that manages deployment and upgrades of delegatecall proxies. An implementation identifier can be created on the proxy manager which is used to specify the logic address for a particular contract type, and to upgrade the implementation as needed. ====== Proxy Types ====== A one-to-one proxy is a single proxy contract with an upgradeable implementation address. A many-to-one proxy is a single upgradeable implementation address that may be used by many proxy contracts. ====== Access Control ====== The proxy manager has a single address as its owner. The owner is the sole account with the following permissions: - Create new many-to-one implementations - Create new one-to-one proxies - Modify the implementation address of existing proxies - Lock proxies - Designate approved deployers - Remove approved deployers - Modify the owner address Approved deployers may only deploy many-to-one proxies. ====== Upgrades ====== Proxies can be upgraded by the owner if they are not locked. Many-to-one proxy implementations are upgraded by calling the holder contract for the implementation ID being upgraded. One-to-one proxies are upgraded by calling the proxy contract directly. The owner can lock a one-to-one proxy or many-to-one implementation ID so that it becomes impossible to upgrade.","kind":"dev","methods":{"approveDeployer(address)":{"details":"Allows `deployer` to deploy many-to-one proxies."},"computeHolderAddressManyToOne(bytes32)":{"details":"Computes the create2 address of the implementation holder for `implementationID`.","params":{"implementationID":"The identifier for the contract implementation."}},"computeProxyAddressManyToOne(address,bytes32,bytes32)":{"details":"Computes the create2 address for a many-to-one proxy for the implementation `implementationID` requested by `originator` using `suppliedSalt`.","params":{"implementationID":"The identifier for the contract implementation.","originator":"Address of the account requesting deployment.","suppliedSalt":"Salt provided by the account requesting deployment."}},"computeProxyAddressOneToOne(address,bytes32)":{"details":"Computes the create2 address for a one-to-one proxy requested by `originator` using `suppliedSalt`.","params":{"originator":"Address of the account requesting deployment.","suppliedSalt":"Salt provided by the account requesting deployment."}},"createManyToOneProxyRelationship(bytes32,address)":{"details":"Creates a many-to-one proxy relationship. Deploys an implementation holder contract which stores the implementation address for many proxies. The implementation address can be updated on the holder to change the runtime code used by all its proxies.","params":{"implementation":"Address with the runtime code the proxies should use.","implementationID":"ID for the implementation, used to identify the proxies that use it. Also used as the salt in the create2 call when deploying the implementation holder contract."}},"deployProxyManyToOne(bytes32,bytes32)":{"details":"Deploy a proxy with a many-to-one relationship with its implemenation. The proxy will call the implementation holder for every transaction to determine the address to use in calls.","params":{"implementationID":"Identifier for the proxy's implementation.","suppliedSalt":"Salt provided by the account requesting deployment."}},"deployProxyOneToOne(bytes32,address)":{"details":"Deploy a proxy contract with a one-to-one relationship with its implementation. The proxy will have its own implementation address which can be updated by the proxy manager.","params":{"implementation":"Address of the contract with the runtime code that the proxy should use.","suppliedSalt":"Salt provided by the account requesting deployment."}},"getImplementationHolder()":{"details":"Queries the temporary storage value `_implementationHolder`. This is used in the constructor of the many-to-one proxy contract so that the create2 address is static (adding constructor arguments would change the codehash) and the implementation holder can be stored as a constant."},"getImplementationHolder(bytes32)":{"details":"Returns the address of the implementation holder contract for `implementationID`."},"isApprovedDeployer(address)":{"details":"Returns a boolean stating whether `deployer` is allowed to deploy many-to-one proxies."},"isImplementationLocked(address)":{"details":"Returns a boolean stating whether `proxyAddress` is locked."},"isImplementationLocked(bytes32)":{"details":"Returns a boolean stating whether `implementationID` is locked."},"lockImplementationManyToOne(bytes32)":{"details":"Lock the current implementation for `implementationID` so that it can never be upgraded again."},"lockImplementationOneToOne(address)":{"details":"Lock the current implementation for `proxyAddress` so that it can never be upgraded again."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"revokeDeployerApproval(address)":{"details":"Prevents `deployer` from deploying many-to-one proxies."},"setImplementationAddressManyToOne(bytes32,address)":{"details":"Updates the implementation address for a many-to-one proxy relationship.","params":{"implementation":"Address with the runtime code the proxies should use.","implementationID":"Identifier for the implementation."}},"setImplementationAddressOneToOne(address,address)":{"details":"Updates the implementation address for a one-to-one proxy. Note: This could work for many-to-one as well if the caller provides the implementation holder address in place of the proxy address, as they use the same access control and update mechanism.","params":{"implementation":"Address with the runtime code for the proxy to use.","proxyAddress":"Address of the deployed proxy"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/DelegateCallProxyManager.sol":"DelegateCallProxyManager"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"@openzeppelin/contracts/proxy/Proxy.sol":{"keccak256":"0x302c3404769f7a5a3d68a7035b9ed71a4b1f8a1669afa7895558a11b6accebfa","license":"MIT","urls":["bzz-raw://c413ff3bdda059e93afc96fbcc44c700e5578b7752eb1a3f166dd52d80e27a31","dweb:/ipfs/QmY9xsG9pPtCdwVDWZ58Gmah6dgFBMWTZYQvqLxikKTYdU"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390","license":"MIT","urls":["bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37","dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"]},"@openzeppelin/contracts/utils/Create2.sol":{"keccak256":"0x16926b3c19504ea52f73abe41dfa9c1ef9c328d6088b82162d475caecaa47a6d","license":"MIT","urls":["bzz-raw://bc578656a08c07f33ecf4a54324bad5f951afdcd990cdab1dcde493d6bb49d9c","dweb:/ipfs/QmbXLJtTaqBg7WwC4p9gsRjA3VEwNwGc6W9afJeAaacF71"]},"contracts/CodeHashes.sol":{"keccak256":"0x2c82d565ac205e9f0de57beba110dc60a816baf11d95a5bfa7a86f5bc93100d9","license":"GPL-3.0","urls":["bzz-raw://6ff1117b88b6ff6e43e634f2d0ac398da58c55bd434a2af3b470795d3aa90ab3","dweb:/ipfs/QmVG71LRUcYwmTNHS2ZJccd8uFqKPCYXt4ahCkRKDHfUvd"]},"contracts/DelegateCallProxyManager.sol":{"keccak256":"0xad6004d879a171c7a111333aa5f0a56b18434f87fa96e741c91e94d38c31dfbb","license":"GPL-3.0","urls":["bzz-raw://6c0da285745e3657792b3b416d925180a2f95c30167807fed994fc84681753bd","dweb:/ipfs/QmeBHdkjm69YCZxnXbmxtiqGpi9s2AaR8HWbxqr46UWvQn"]},"contracts/DelegateCallProxyManyToOne.sol":{"keccak256":"0x24a20a3778980eba1ab27c08c82c973addc1c5b1e64f9efa9535b4275cc86d98","license":"GPL-3.0","urls":["bzz-raw://e9eb96528c406fccbd50c52ceabfbb6b1815c008cb7bb8e846c0b24eee9050ad","dweb:/ipfs/QmaMFwJ5Pdx7kvtrBs6BUPJJzP6NmHKs1KQiVqCLbxurnn"]},"contracts/DelegateCallProxyOneToOne.sol":{"keccak256":"0xdacbe19ff830076669630ccf0a392a98cbccd4234b656e2dd51cf98899b74bf7","license":"GPL-3.0","urls":["bzz-raw://8d37ea6c81c79b027dec9702517bbd0e286da01a1bacdc6e40afc8186b52b94b","dweb:/ipfs/QmT4rSUa2K979rd1o6jV1jXk7dgDBCTqfNLg5psQ9uBBMH"]},"contracts/ManyToOneImplementationHolder.sol":{"keccak256":"0x7045007870fb6ef7000a640ccf4a508dad6bfa33280270c42f1cc3ff006fb075","license":"GPL-3.0","urls":["bzz-raw://be5cab4a88e7e7035501292df790c21c6d42586fde105628d5bbaee8045f9743","dweb:/ipfs/Qmaifp4Txt7TBGBXKNUQemusDGJyESVf9E4aDcjfoKxTUW"]},"contracts/SaltyLib.sol":{"keccak256":"0xdd4f18bcfc3f0761c822c079c2b8177f317edd40c84f85c77fa07a1827b1796b","license":"GPL-3.0","urls":["bzz-raw://ef7e1818cb47a6ff6ab364162f051d6a3444eb8438015259a71fefd547ccb98e","dweb:/ipfs/QmV2gNBns5YTiF2ENEf7B5SZNUeC6Thw89jGECUoRG5FnN"]},"contracts/interfaces/IDelegateCallProxyManager.sol":{"keccak256":"0x24f7aa01dd4c8592b889d6d81badd244ad9e602232406be5941413418d171421","license":"GPL-3.0","urls":["bzz-raw://3edfca6e8b608f4e4fd2c86a3eb3146202f9bfd7f26ff4608172894313ea911d","dweb:/ipfs/QmdSvcGykCzAgfkyzofX6DEwbtFnAtjtnb9KddA7YJVtHZ"]}},"version":1},"version":1,"checkPoints":[]}