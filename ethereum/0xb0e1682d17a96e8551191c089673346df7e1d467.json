{"address":"0xB0e1682D17A96E8551191c089673346dF7e1D467","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"ERR_ALREADY_IN_CONTRACT_CHANGE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ALREADY_IN_WAIT_PERIOD_CHANGE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_CHANGE_NOT_READY","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_EMPTY_PREV_ADDR","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ENTRY_ALREADY_EXISTS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ENTRY_NON_EXISTENT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ENTRY_NOT_IN_CHANGE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_WAIT_PERIOD_SHORTER","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_contractAddr","type":"address"},{"internalType":"uint256","name":"_waitPeriod","type":"uint256"}],"name":"addNewContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"adminVault","outputs":[{"internalType":"contract AdminVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"approveContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"approveWaitPeriodChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"cancelContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"cancelWaitPeriodChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAdminVault","type":"address"}],"name":"changeAdminVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"entries","outputs":[{"internalType":"address","name":"contractAddr","type":"address"},{"internalType":"uint256","name":"waitPeriod","type":"uint256"},{"internalType":"uint256","name":"changeStartTime","type":"uint256"},{"internalType":"bool","name":"inContractChange","type":"bool"},{"internalType":"bool","name":"inWaitPeriodChange","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"logger","outputs":[{"internalType":"contract DefisaverLogger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pendingAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pendingWaitTimes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"previousAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"revertToPreviousAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_newContractAddr","type":"address"}],"name":"startContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_newWaitPeriod","type":"uint256"}],"name":"startWaitPeriodChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawStuckFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addNewContract(bytes32,address,uint256)":{"params":{"_contractAddr":"Address of the contract","_id":"Id of contract","_waitPeriod":"Amount of time to wait before a contract address can be changed"}},"approveContractChange(bytes32)":{"params":{"_id":"Id of contract"}},"approveWaitPeriodChange(bytes32)":{"params":{"_id":"Id of contract"}},"cancelContractChange(bytes32)":{"params":{"_id":"Id of contract"}},"cancelWaitPeriodChange(bytes32)":{"params":{"_id":"Id of contract"}},"changeAdminVault(address)":{"params":{"_newAdminVault":"Address of the new Admin Vault contract"}},"getAddr(bytes32)":{"details":"Id is keccak256 of the contract name","params":{"_id":"Id of contract"}},"isRegistered(bytes32)":{"params":{"_id":"Id of contract"}},"revertToPreviousAddress(bytes32)":{"details":"In case the new version has a fault, a quick way to fallback to the old contract","params":{"_id":"Id of contract"}},"startContractChange(bytes32,address)":{"details":"Can override a change that is currently in progress","params":{"_id":"Id of contract","_newContractAddr":"Address of the new contract"}},"startWaitPeriodChange(bytes32,uint256)":{"params":{"_id":"Id of contract","_newWaitPeriod":"New wait time"}}},"title":"Stores all the important DFS addresses and can be changed (timelock)","version":1},"userdoc":{"kind":"user","methods":{"addNewContract(bytes32,address,uint256)":{"notice":"Adds a new contract to the registry"},"approveContractChange(bytes32)":{"notice":"Changes new contract address, correct time must have passed"},"approveWaitPeriodChange(bytes32)":{"notice":"Changes new wait period, correct time must have passed"},"cancelContractChange(bytes32)":{"notice":"Cancel pending change"},"cancelWaitPeriodChange(bytes32)":{"notice":"Cancel wait period change"},"changeAdminVault(address)":{"notice":"Changes the admin vault that is currently used"},"getAddr(bytes32)":{"notice":"Given an contract id returns the registred address"},"isRegistered(bytes32)":{"notice":"Helper function to easily query if id is registred"},"kill()":{"notice":"Destroy the contract"},"revertToPreviousAddress(bytes32)":{"notice":"Revertes to the previous address immediately"},"startContractChange(bytes32,address)":{"notice":"Starts an address change for an existing entry"},"startWaitPeriodChange(bytes32,uint256)":{"notice":"Starts the change for waitPeriod"},"withdrawStuckFunds(address,address,uint256)":{"notice":"withdraw stuck funds"}},"version":1}},"settings":{"compilationTarget":{"browser/DSProxy.sol":"DFSRegistry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/DSProxy.sol":{"keccak256":"0xd66cfdb0509ffd08cb52bf45e16c43979be74c5002457b685cef60494150258d","urls":["bzz-raw://60dca44f27516b63c76b9e8bbf62070c55b9baa46c36e976a0d5fbb9f1f0deca","dweb:/ipfs/QmWfbVgkT816kVZwtu3R8SVxpNidUW38p3b9NJiduQtphu"]}},"version":1},"version":1,"checkPoints":[]}