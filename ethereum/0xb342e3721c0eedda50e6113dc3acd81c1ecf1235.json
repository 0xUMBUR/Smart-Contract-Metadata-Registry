{"address":"0xb342E3721c0eEdda50E6113DC3AcD81c1eCF1235","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionFailed","type":"event"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"addTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"policy_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"policy","outputs":[{"internalType":"contract BaseTokenMonetaryPolicy","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"removeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_policy","type":"address"}],"name":"setMonetaryPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setTransactionEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transactionsSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addTransaction(address,bytes)":{"params":{"data":"Transaction data payload","destination":"Address of contract destination"}},"initialize(address)":{"params":{"policy_":"Address of the NotBaseToken policy."}},"owner()":{"details":"Returns the address of the current owner."},"removeTransaction(uint256)":{"params":{"index":"Index of transaction to remove.              Transaction ordering may have changed since adding."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setTransactionEnabled(uint256,bool)":{"params":{"enabled":"True for enabled, false for disabled.","index":"Index of transaction. Transaction ordering may have changed since adding."}},"transactionsSize()":{"returns":{"_0":"Number of transactions, both enabled and disabled, in transactions list."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"NotBaseTokenOrchestrator","version":1},"userdoc":{"kind":"user","methods":{"addTransaction(address,bytes)":{"notice":"Adds a transaction that gets called for a downstream receiver of rebases"},"rebase()":{"notice":"Main entry point to initiate a rebase operation.         The NotBaseTokenOrchestrator calls rebase on the policy and notifies downstream applications.         Contracts are guarded from calling, to avoid flash loan attacks on liquidity         providers.         If a transaction in the transaction list reverts, it is swallowed and the remaining         transactions are executed."}},"notice":"The orchestrator is the main entry point for rebase operations. It coordinates the policy actions with external consumers.","version":1}},"settings":{"compilationTarget":{"browser/NotBaseTokenOrchestrator.sol":"NotBaseTokenOrchestrator"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/NotBaseTokenOrchestrator.sol":{"keccak256":"0x0da2fdfef53b31ceb9913d9a5fbab8670648596a820dc6f9642b001342e13e86","license":"MIT","urls":["bzz-raw://fa00c47c840223c597c783bb22eab19517727aa03c2b6e37682c574d6498858d","dweb:/ipfs/QmXxcXf3SuG3qMu1fFefLeCasMLud7iiqCfLV6hh2Ymvtr"]}},"version":1},"version":1,"checkPoints":[]}