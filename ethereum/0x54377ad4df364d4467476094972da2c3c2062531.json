{"address":"0x54377AD4dF364d4467476094972DA2C3C2062531","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_pool","type":"address"},{"internalType":"address","name":"_solos","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"publicKeys","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_validatorId","type":"bytes32"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removePauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Validators contract keeps track of all the registered validators. Only collectors can register validators.","kind":"dev","methods":{"addAdmin(address)":{"details":"See {IOwnablePausable-addAdmin}."},"addOperator(address)":{"details":"See {IValidators-addOperator}."},"addPauser(address)":{"details":"See {IOwnablePausable-addPauser}."},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address)":{"details":"See {IValidators-initialize}."},"isAdmin(address)":{"details":"See {IOwnablePausable-isAdmin}."},"isOperator(address)":{"details":"See {IValidators-isOperator}."},"isPauser(address)":{"details":"See {IOwnablePausable-isPauser}."},"pause()":{"details":"See {IOwnablePausable-pause}."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"register(bytes32)":{"details":"See {IValidators-register}."},"removeAdmin(address)":{"details":"See {IOwnablePausable-removeAdmin}."},"removeOperator(address)":{"details":"See {IValidators-removeOperator}."},"removePauser(address)":{"details":"See {IOwnablePausable-removePauser}."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"unpause()":{"details":"See {IOwnablePausable-unpause}."}},"stateVariables":{"publicKeys":{"details":"Function for checking whether public key was already used.","params":{"_publicKey":"- hash of public key to check."}}},"title":"Validators","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"Validators.sol":"Validators"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"AccessControlUpgradeable.sol":{"keccak256":"0xf6760d3e2971310f647e0c2558f09fa79bf486a81f170d834f840c05cb7b18b6","license":"MIT","urls":["bzz-raw://6544303d2bab595c26e6827de97aae357c27c7cfebe0d0c1ee653fffa1865cc8","dweb:/ipfs/QmQGwCospqsGh13CuWqY8Z4aquHH29YfPH8KrgYbMTqSJf"]},"AddressUpgradeable.sol":{"keccak256":"0x06bb5c6bee2e3e5113b782cc564db9479b45955889bf1bd3f84b9858b1c1d649","license":"MIT","urls":["bzz-raw://a39139155815293b903d0cfa7436925a38fa47412862b4023ef935df22af5680","dweb:/ipfs/Qmd2xsNZZXGfrkWa2z4m9BPtJTr3qkRD1WAbtKEQnk69Nn"]},"ContextUpgradeable.sol":{"keccak256":"0xff21e885c360a5b789e973eeb8976efce8101eba4147092c58fba8e7afecd297","license":"MIT","urls":["bzz-raw://cd8ee421dbdc796fe18dffd1d4aecfcaac05a45721e2aa8df261c77cf0ec8241","dweb:/ipfs/QmXNT6Fvgd2XLpPe2nenHKyci1iBsab8ahEVVowijzsrEt"]},"EnumerableSetUpgradeable.sol":{"keccak256":"0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335","license":"MIT","urls":["bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381","dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4"]},"IOwnablePausable.sol":{"keccak256":"0x17c8a75ad1be48d2bc342d1094e1647c4618ebc5163158f415ed89c510d99540","license":"AGPL-3.0-only","urls":["bzz-raw://e4e8305e10dd120c77d8495fb87e148498adb91f4918a408d0a9ed9dab5ae786","dweb:/ipfs/QmS6T9pXwrwEQPAE3KaApaFFpsusSKpPd5aGoWvSYThQhb"]},"IValidators.sol":{"keccak256":"0x421c853fc1ad7c0f1fe8ba0fd2ff935fafb9938ce7c75ddb9dc7752e8e991706","license":"AGPL-3.0-only","urls":["bzz-raw://413fc4affc75fbc83971db233a6bc65c4ce2ce123d0daba9f3579cf131dab95d","dweb:/ipfs/QmeFLa2X2MuygXTog77buAFob1ye3nixPf2wDHRiegzDJM"]},"Initializable.sol":{"keccak256":"0x287f1c2806cd06dcac2b4a2270d7ee46ffdc4676cb95f2e52021c792f2f95022","license":"MIT","urls":["bzz-raw://3fc3cbd1cd0bbef618e94d8a53d5555387cac3984070afabfc4a72c278cfbb86","dweb:/ipfs/QmYJhEUv2zPQ8kdw7tbc7H2TrdFqgMZ1hstBBDg7woYWEU"]},"OwnablePausableUpgradeable.sol":{"keccak256":"0x0dc5235c1fa619f1078936a2c7548f8d8e44ada9fee22659ea5323ba438bb925","license":"AGPL-3.0-only","urls":["bzz-raw://076b72acf4886880d365da5b40ab640acc0b68ff5cdb2fd36704cd969bc459e0","dweb:/ipfs/QmY4tqvbr1gDsVxiaB2ji6vaFAVrKMKiT24fdBrQDSn1dY"]},"PausableUpgradeable.sol":{"keccak256":"0x9f2802e302c5a82a7505530e1e5d5bc241f0f68a8ebc8044660503dfda5f5775","license":"MIT","urls":["bzz-raw://3f37fc0088b94509a4dd5db66fdf86f3c7977b3f3618cd21fd287597b969ceb9","dweb:/ipfs/QmXUbKX5yXZQB1fKASxCCWDsR3XVgXVmCenD8AVVF3x9de"]},"Validators.sol":{"keccak256":"0x3eb022f8757403471e779db7086ebcfcf96a679b1c64834f3069ff3230901212","license":"AGPL-3.0-only","urls":["bzz-raw://c90e5a02aece98c9f4ac550e2d695a07060a67201f2681f102ae0f868d96cd32","dweb:/ipfs/QmYeGrUfFhcw8icUTTQ1nGweV5hbLgjsvk9QHgyXaHugbu"]}},"version":1},"version":1,"checkPoints":[]}