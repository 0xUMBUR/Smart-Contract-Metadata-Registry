{"address":"0xa21dbe7bd47ec01a5a7d1cD086E09e808bf7c0b5","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"rate_","type":"uint256"},{"internalType":"contract IERC20","name":"token_","type":"address"},{"internalType":"uint256","name":"startTime_","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"address payable","name":"wallet_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"weiAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"inputs":[],"name":"MAX_PURCHASE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_PURCHASE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"hasEnded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wallet","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRemaining","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"events":{"TokensPurchased(address,address,uint256,uint256)":{"details":"Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`."}},"kind":"dev","methods":{"buyTokens(address)":{"details":"Called by buyers to purchase tokens. All ETH sent to this function is converted into tokens, which are sent to `beneficiary`. Tokens can only be bought while the Crowdsale is active. The amount of ETH received must not be less than the minimum or more than the maximum."},"constructor":{"details":"See the definition of the state variables above for detailed explanation of constructor arguments. Instead of passing an end time, a duration (in seconds) is received instead. The end time will be at start time plus duration."},"hasEnded()":{"details":"Returns true if the Crowdsale has ended. Once it has ended, buyers cannot purchase tokens anymore, and the owner can withdraw any remaining tokens."},"isActive()":{"details":"Returns true if the Crowdsale is active. While active, buyers can buy tokens with ETH."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawRemaining()":{"details":"Called by the owner after the Crowdsale ends to withdraw any tokens remaining in the contract. These will be sent to the owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"TimedTokensForETHCrowdsale.flattened.sol":"TimedTokensForEthCrowdsale"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"TimedTokensForETHCrowdsale.flattened.sol":{"keccak256":"0x1d49866db094c50ef1bc4a2f158076d987c30c8914b32385b3a1a8671d1464df","urls":["bzz-raw://d002d6bf4910b29bd9336e706c8faa5d3366e583c05f6ddfe42ca81f24a9bf65","dweb:/ipfs/QmUxcUnGL8WgtB9vwtSHmuZdPbEtJcE9nDm4mHfEYYPrUb"]}},"version":1},"version":1,"checkPoints":[]}