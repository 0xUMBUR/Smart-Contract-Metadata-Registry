{"address":"0x309623d9c33080e07F196C5FEeF3144C69a9Bfc7","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"asset","type":"address"}],"name":"approveBorrower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPull","type":"bool"}],"name":"depositCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"asset","type":"address"}],"name":"repayBorrower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"withdrawCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"comments","kind":"dev","methods":{"approveBorrower(address,uint256,address)":{"params":{"amount":"The amount the borrower is allowed to borrow (i.e. their line of credit)","asset":"The asset they are allowed to borrow  Add permissions to this call, e.g. only the owner should be able to approve borrowers!","borrower":"The borrower of the funds (i.e. delgatee)"}},"depositCollateral(address,uint256,bool)":{"params":{"amount":"The amount to be deposited as collateral","asset":"The asset to be deposited as collateral","isPull":"Whether to pull the funds from the caller, or use funds sent to this contract  User must have approved this contract to pull funds if `isPull` = true "}},"repayBorrower(uint256,address)":{"params":{"amount":"The amount to repay","asset":"The asset to be repaid  User calling this function must have approved this contract with an allowance to transfer the tokens  You should keep internal accounting of borrowers, if your contract will have multiple borrowers"}},"withdrawCollateral(address)":{"params":{"asset":"The underlying asset to withdraw  Add permissions to this call, e.g. only the owner should be able to withdraw the collateral!"}}},"version":1},"userdoc":{"kind":"user","methods":{"approveBorrower(address,uint256,address)":{"notice":"Approves the borrower to take an uncollaterised loan"},"depositCollateral(address,uint256,bool)":{"notice":"Deposits collateral into the Aave, to enable credit delegation This would be called by the delegator."},"repayBorrower(uint256,address)":{"notice":"Repay an uncollaterised loan"},"withdrawCollateral(address)":{"notice":"Withdraw all of a collateral as the underlying asset, if no outstanding loans delegated"}},"notice":"This is a proof of concept starter contract, showing how uncollaterised loans are possible using Aave v2 credit delegation. This example supports stable interest rate borrows. It is not production ready (!). User permissions and user accounting of loans should be implemented.","version":1}},"settings":{"compilationTarget":{"MyV2CreditDelegation.sol":"MyV2CreditDelegation"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"Interfaces.sol":{"keccak256":"0xe20c5bc13bec023d28f831e19e2574a9f49ea0f79b01692f41519b78eef0b76f","license":"agpl-3.0","urls":["bzz-raw://03c212a6c78c9e9bc6ba369c766369f2a6e71c303fb3c5de48162a1d2a4bb11e","dweb:/ipfs/QmRAQriu4uncFdNNf6BiffhJpkyEw55eR55vv4HQt2WkQV"]},"Libraries.sol":{"keccak256":"0x8148c2e5dfe860999b068eac50535531ef5ca03df3ddda696850fe28e285e088","license":"agpl-3.0","urls":["bzz-raw://57438727547271e910f06539f9014684f84eaa3c81990a081fd8f31bf1a18f46","dweb:/ipfs/QmcV1zzwfxVbBa1wHJmDsUTKEE3rHZEz4PagVYUiavqbdb"]},"MyV2CreditDelegation.sol":{"keccak256":"0x2cca49c02dae6071e684627402e4e2a51bdac433d9e32a407ba893f02f0fc4cc","license":"agpl-3.0","urls":["bzz-raw://5aee9dfadcad2df75acfb95af15326187da7c6591e21311c4136f20913dc74a1","dweb:/ipfs/QmcyDvWZ1MnEMRtvjpYQ2H2q2hqXqJGbTRmpxuCLMv5bQL"]}},"version":1},"version":1,"checkPoints":[]}