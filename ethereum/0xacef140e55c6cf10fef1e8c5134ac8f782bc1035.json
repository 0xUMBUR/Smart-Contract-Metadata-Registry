{"address":"0xaceF140e55c6cF10Fef1E8c5134ac8f782bC1035","name":"","metadata":{"compiler":{"version":"0.7.4+commit.3f05b770"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":false,"internalType":"bool","name":"_approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token_address","type":"address"},{"indexed":false,"internalType":"uint256","name":"token_id","type":"uint256"}],"name":"TokenRegistration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_operator","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getIdAddress","outputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenID","outputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"isOperator","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address payable","name":"_from","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address payable","name":"_from","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address payable","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"params":{"_id":"ID of the Token","_owner":"The address of the token holder"},"returns":{"_0":"The _owner's balance of the Token type requested"}},"balanceOfBatch(address[],uint256[])":{"params":{"_ids":"ID of the Tokens","_owners":"The addresses of the token holders"},"returns":{"_0":"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"}},"deposit(address,address,uint256)":{"details":"Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s","params":{"_recipient":"Address that will receive the ERC-1155 tokens","_token":"The addess of the token to deposit in this contract","_value":"The amount of token to deposit in this contract Note: Users must first approve this contract addres on the contract of the ERC20 to be deposited"}},"getIdAddress(uint256)":{"params":{"_id":"Meta-ERC20 token ID to get the corresponding ERC-20 token address"},"returns":{"token":"ERC-20 token address"}},"getTokenID(address)":{"params":{"_token":"ERC-20 token address to get the corresponding Meta-ERC20 token ID"},"returns":{"tokenID":"Meta-ERC20 token ID"}},"isApprovedForAll(address,address)":{"params":{"_operator":"Address of authorized operator","_owner":"The owner of the Tokens"},"returns":{"isOperator":"True if the operator is approved, false if not"}},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"params":{"_from":"The address which previously owned the token","_ids":"An array containing ids of each token being transferred","_values":"An array containing amounts of each token being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"params":{"_from":"The address which previously owned the token","_id":"The id of the token being transferred","_value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"}},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"params":{"_amounts":"Transfer amounts per token type","_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source addresses","_ids":"IDs of each token type","_to":"Target addresses"}},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"params":{"_amount":"Transfered amount","_data":"Additional data with no specified format, sent in call to `_to`","_from":"Source address","_id":"ID of the token type","_to":"Target address"}},"setApprovalForAll(address,bool)":{"params":{"_approved":"True if the operator is approved, false to revoke approval","_operator":"Address to add to the set of authorized operators"}},"supportsInterface(bytes4)":{"details":"This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.      This function MUST NOT consume more than 5,000 gas.","params":{"interfaceID":"The ERC-165 interface ID that is queried for support.s"},"returns":{"_0":"Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported."}},"withdraw(address,address,uint256)":{"details":"Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH","params":{"_to":"The address where the withdrawn tokens will go to","_token":"The addess of the token to withdrww from this contract","_value":"The amount of tokens to withdraw"}}},"version":1},"userdoc":{"kind":"user","methods":{"balanceOf(address,uint256)":{"notice":"Get the balance of an account's Tokens"},"balanceOfBatch(address[],uint256[])":{"notice":"Get the balance of multiple account/token pairs"},"getIdAddress(uint256)":{"notice":"Return the ERC-20 token address for the given Meta-ERC20 token ID"},"getNTokens()":{"notice":"Returns number of tokens currently registered"},"getTokenID(address)":{"notice":"Return the Meta-ERC20 token ID for the given ERC-20 token address"},"isApprovedForAll(address,address)":{"notice":"Queries the approval status of an operator for a given owner"},"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"notice":"Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart"},"onERC1155Received(address,address,uint256,uint256,bytes)":{"notice":"Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart"},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"notice":"Send multiple types of Tokens from the _from address to the _to address (with safety call)"},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"notice":"Transfers amount amount of an _id from the _from address to the _to address specified"},"setApprovalForAll(address,bool)":{"notice":"Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"},"supportsInterface(bytes4)":{"notice":"Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types."}},"notice":"Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio   of corresponding ERC-1155 tokens. Each ERC-20 is assigned an ERC-1155 id   for more efficient CALLDATA usage when doing transfers.","version":1}},"settings":{"compilationTarget":{"HyperPortalToken.sol":"HyperPortalToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@0xsequence/erc-1155/contracts/interfaces/IERC1155.sol":{"keccak256":"0x875745649480a47bfd0a7f1d4a3a2fe3c1d18ab86e7e5b414c7bf77b9b9b927b","license":"Apache-2.0","urls":["bzz-raw://e46c792edc2e9eda0d4a5b7436afa3b9028064c004ff9d62d86d9aa4ecd36bfa","dweb:/ipfs/QmNjvLPhevaeKJQDtSxj3z4z3qBu5ExiYzsk5cX5Dxa1Pr"]},"@0xsequence/erc-1155/contracts/interfaces/IERC1155TokenReceiver.sol":{"keccak256":"0x46528ddd8edfda8ae713443871c56f25d06270e2ea49cdbd575122ea21d279b7","license":"Apache-2.0","urls":["bzz-raw://c0ab85ee29d0ed85bf4807955e560055857c8de9ecb60e54171da2bdf3b0b57b","dweb:/ipfs/QmcXCYTT8eYtc7t15UmvcGw5LhNsh7ohPbkfKj8auWvtgx"]},"@0xsequence/erc-1155/contracts/interfaces/IERC165.sol":{"keccak256":"0xe2617e5ea379e2cc4a2ce6cd8e05208a0509d5d5c92b00c329745c8f1d4d9dc6","license":"Apache-2.0","urls":["bzz-raw://60f609155f93818b742bd942b14df29b4ae777042274cf7144f5629dc31a5fac","dweb:/ipfs/QmT4wz42k59BQktnQ9Vz6ftGSXxvfhQGbq2WSKoh2WWSWY"]},"@0xsequence/erc-1155/contracts/interfaces/IERC20.sol":{"keccak256":"0x8cc67b05c299edc4ed6bdcdc4fb4fd22cd68e81a8987a2d78443e5b3f0bbd184","license":"Apache-2.0","urls":["bzz-raw://4ac52f4004a9951c7858c68e7063fa4aca5bc0e53979d5b3670ea9325de5dabd","dweb:/ipfs/QmdrLi5b1WbJfQ22fWc1u595fNKGgEDigXB2j8U6VTzc19"]},"@0xsequence/erc-1155/contracts/tokens/ERC1155/ERC1155.sol":{"keccak256":"0x1417d39503a84525ae5f5fb481a47135694b445c270d4094c1cd44b7a98b5d52","license":"Apache-2.0","urls":["bzz-raw://428f62f181fbc2ecc96785d8665434664d642810885e055ff9ad1796a046b04e","dweb:/ipfs/QmZdFhFAciQACia33NsLhSxuUF29NmL45agtgAk1V7yHdb"]},"@0xsequence/erc-1155/contracts/tokens/ERC1155/ERC1155MintBurn.sol":{"keccak256":"0x111941661352f4ce017c4ba1729af79452bdee8a4ff4e0b54a88590544243aed","license":"Apache-2.0","urls":["bzz-raw://cf2527aa8f02bf280dc47d7bc886542307f23ce754ecfd8e3f3fdc30c0280ccb","dweb:/ipfs/QmVR7GasmAnWzzhnKpW7z3eBfm7LUx7vrpgmXdkUcPqM4E"]},"@0xsequence/erc-1155/contracts/utils/Address.sol":{"keccak256":"0x8bb1c56edfeb70c168826f21d3a7f6fb392a051c435e0d6c201192e2bc66adf3","urls":["bzz-raw://89026145aece6da55ef3d23f47278fd0e0c79a8acb2e43c12774dcf0b82419d7","dweb:/ipfs/QmXrwqHkaXsibssvV38ME7qJSgZtLcZbZEFvPX8roHFgd5"]},"@0xsequence/erc-1155/contracts/utils/ERC165.sol":{"keccak256":"0x81f75e23be623d10c92c5a4feee320d5a082f2f33fcad7b9942fc9843bfa6583","urls":["bzz-raw://e61e07d8c8910e2a460ab98e34a1f380b90ee26ad7ae71b0b8eb36ed01131b61","dweb:/ipfs/Qmes1Eeea8CnSDnDg99N4WKrcMDRaRfsMECcDLyLm3eUFv"]},"@0xsequence/erc-1155/contracts/utils/SafeMath.sol":{"keccak256":"0xaf1d9662825e69afa9bef8411c409e1b05bf2de080008aa1e239227887c4b6bb","urls":["bzz-raw://edf9448c82ef5cc43e29653777ea282df9e01625884aa9b7ef1a9be6d0997f5c","dweb:/ipfs/Qmckq4JV3oB61fWz2QeC924q2rex4Cs5vfSVLakUP5btMq"]},"HyperPortalToken.sol":{"keccak256":"0x3de91b6aa8f40f035ca26d839ccd108567f6b6c1f00b11539c0248ae7d51c831","urls":["bzz-raw://69a2bc661c783d67c2cdb6911e4fa4e3765651617ff654a9398846f26ba55a42","dweb:/ipfs/QmW68JmWb6t2ZTxc3ZHuaaY9efgftv4m1vxizi7Ad6wFHQ"]}},"version":1},"version":1,"checkPoints":[]}