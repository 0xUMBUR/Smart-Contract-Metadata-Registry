{"address":"0xF0C3bB01D686e68d3F596434A40feF14B69D5d72","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"minCount","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"generateNextBatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"fromIndex","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"toAddress","type":"address"}],"name":"harvestERC20Batch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"batch","type":"address[]"},{"internalType":"address","name":"toAddress","type":"address"}],"name":"harvestERC20BatchFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"payinAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payins","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newSuccessor","type":"address"}],"name":"setSuccessor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"successor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"takeOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"generateNextBatch(uint256,uint256)":{"params":{"":"{uint256} maxCount - the maximum payins count to generate."},"returns":{"_0":"{uint256,uint256} - the tuple (fromIndex, count) of: lowest payin index of generated batch and the batch size. NOTE: the function is not restricted by the isOwner modifier       since there is nothing to protect: the subcontracts are owned       by the factory (this contract) and this one is owned by the       owner, anyone can spend gas to help us to generate the pool."}},"harvestERC20Batch(address,uint256,uint256,address)":{"params":{"":"{address} toAddress - the destination address to send harvested tokens to."},"returns":{"_0":"{uint256} totalAmount - the total harvested amount."}},"harvestERC20BatchFor(address,address[],address)":{"params":{"":"{address} toAddress - the destination address to send harvested tokens to."},"returns":{"_0":"{uint256} totalAmount - the total harvested amount."}},"payinAddress(uint256)":{"params":{"":"{uint256} index - the payin index."},"returns":{"_0":"{address} the corresponding payin subcontract address."}}},"version":1},"userdoc":{"kind":"user","methods":{"generateNextBatch(uint256,uint256)":{"notice":"Generates next batch of payin subcontracts, up to maxCount (as much as enough gas left), but not less than minCount (be sure you have enough gas to covert the minimum)."},"harvestERC20Batch(address,uint256,uint256,address)":{"notice":"Harvests (withdraw whole balance) ERC20 tokens from batch of payins."},"harvestERC20BatchFor(address,address[],address)":{"notice":"Harvests (withdraw whole balance) ERC20 tokens from batch of payins."},"payinAddress(uint256)":{"notice":"Converts payin index into subcontract address. Indexing starts from 0."},"setSuccessor(address)":{"notice":"Sets new successor (only owner)."},"takeOwnership()":{"notice":"Takes ownership (only successor)."}},"version":1}},"settings":{"compilationTarget":{"ChangeNowMasterPayinV5.sol":"ChangeNowMasterPayinV5"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"ChangeNowMasterPayinV5.sol":{"keccak256":"0x7dbdc9a2a1c18f4e0f3f5d515c3a400547ab545f2cb9599476b5a59db8523c93","license":"MIT","urls":["bzz-raw://8fbd4e0d2912284243488b83ceae99fcd545575170c5dbe5407b3807fb8e393f","dweb:/ipfs/QmfNgc1xt2vDmo2QRa96DW8K7uhtcpfBE7Fr81qspe65zK"]},"IERC20.sol":{"keccak256":"0x234a5383f12290d16d9e8822bef909daa80b6d1eb01b562921f12794c5d14d60","license":"MIT","urls":["bzz-raw://e74a4634aa2dac9dfe5868bf9556f57378dc2fc61d1f2f664cf388a99e24c1dc","dweb:/ipfs/QmVJkRXGLRB59jqXcTCrB6aw7dkimXmPcBKuRgmFLVxc27"]},"PreparedPayinV5.sol":{"keccak256":"0xc83d77967ed471bbd882fcfe5436d2b51cb1ad8fc2906989f89d81c878b251e7","license":"MIT","urls":["bzz-raw://0e69b6f7b524714dbe9805bd9db1bfa48bdef9456f3504194fddcb48eeb9fc7c","dweb:/ipfs/Qmap5JPG6dazaSmwJGYUXBCyLz1WhisE5RANUp1eVxFp3A"]}},"version":1},"version":1,"checkPoints":[]}