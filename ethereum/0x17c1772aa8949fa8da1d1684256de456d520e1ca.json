{"address":"0x17c1772aA8949FA8dA1D1684256de456D520E1ca","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"LINKAddress","type":"address"},{"internalType":"uint256","name":"minimumLINKJuels","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"from","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"to","type":"uint256"}],"name":"MinLINKChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"displayName","type":"string"},{"indexed":true,"internalType":"uint256","name":"upkeepId","type":"uint256"}],"name":"RegistrationApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"indexed":true,"internalType":"address","name":"upkeepContract","type":"address"},{"indexed":false,"internalType":"uint32","name":"gasLimit","type":"uint32"},{"indexed":false,"internalType":"address","name":"adminAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"checkData","type":"bytes"},{"indexed":true,"internalType":"uint8","name":"source","type":"uint8"}],"name":"RegistrationRequested","type":"event"},{"inputs":[],"name":"LINK_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"string","name":"displayName","type":"string"},{"internalType":"uint256","name":"upkeepId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMinLINKJuels","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegistrationConfig","outputs":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"uint32","name":"windowSizeInBlocks","type":"uint32"},{"internalType":"uint16","name":"allowedPerWindow","type":"uint16"},{"internalType":"address","name":"keeperRegistry","type":"address"},{"internalType":"uint64","name":"windowStart","type":"uint64"},{"internalType":"uint16","name":"approvedInCurrentWindow","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"internalType":"address","name":"upkeepContract","type":"address"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"uint8","name":"source","type":"uint8"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"upkeepContract","type":"address"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"sendRegisterUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"minimumLINKJuels","type":"uint256"}],"name":"setMinLINKJuels","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"uint32","name":"windowSizeInBlocks","type":"uint32"},{"internalType":"uint16","name":"allowedPerWindow","type":"uint16"},{"internalType":"address","name":"keeperRegistry","type":"address"}],"name":"setRegistrationConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"Allows an ownership transfer to be completed by the recipient."},"approve(bytes32,string,uint256)":{"params":{"displayName":"display name for the upkeep being approved","hash":"hash of the message data of the registration request that is being approved","upkeepId":"id of the upkeep that has been registered"}},"onTokenTransfer(address,uint256,bytes)":{"params":{"amount":"Amount of LINK sent (specified in Juels)","data":"Payload of the transaction"}},"register(string,bytes,address,uint32,address,bytes,uint8)":{"params":{"adminAddress":"address to cancel upkeep and withdraw remaining funds","checkData":"data passed to the contract when checking for upkeep","encryptedEmail":"Amount of LINK sent (specified in Juels)","gasLimit":"amount of gas to provide the target contract when performing upkeep","name":"name of the upkeep to be registered","source":"application sending this request","upkeepContract":"address to peform upkeep on"}},"sendRegisterUpkeep(string,address,uint32,address,bytes,bytes32)":{"details":"auto register only if max number of allowed registrations are not already completed for this auto approve window"},"setMinLINKJuels(uint256)":{"params":{"minimumLINKJuels":"minimum LINK required to send registration request"}},"setRegistrationConfig(bool,uint32,uint16,address)":{"params":{"allowedPerWindow":"number of registrations that can be auto approved in above window","enabled":"setting for autoapprove registrations","keeperRegistry":"new keeper registry address","windowSizeInBlocks":"window size defined in number of blocks"}},"transferOwnership(address)":{"details":"Allows an owner to begin transferring ownership to a new address, pending."}},"version":1},"userdoc":{"kind":"user","methods":{"approve(bytes32,string,uint256)":{"notice":"this function is called after registering upkeep on the Registry contract"},"getMinLINKJuels()":{"notice":"read the minimum LINK required to send registration request"},"getRegistrationConfig()":{"notice":"read the current registration configuration"},"onTokenTransfer(address,uint256,bytes)":{"notice":"Called when LINK is sent to the contract via `transferAndCall`"},"register(string,bytes,address,uint32,address,bytes,uint8)":{"notice":"register can only be called through transferAndCall on LINK contract"},"setMinLINKJuels(uint256)":{"notice":"owner calls this function to set minimum LINK required to send registration request"},"setRegistrationConfig(bool,uint32,uint16,address)":{"notice":"owner calls this function to set if registration requests should be sent directly to the Keeper Registry"}},"version":1}},"settings":{"compilationTarget":{"tempRR.sol":"NewUpkeepRegistrationRequests"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"tempRR.sol":{"keccak256":"0x4b63b120f37fdf497944a515c695f920ddaae7f1e33edc2aebca52cb54f10342","license":"MIT","urls":["bzz-raw://0c5716b244f9c73f0a7fc22e856e9e58c9ec4ab1be200d267ad08d51d0829649","dweb:/ipfs/QmfKTrZLwfLg8cLGDnxLfFEHJhD4eCQYS2RSS8DMQBMVsY"]}},"version":1},"version":1,"checkPoints":[]}