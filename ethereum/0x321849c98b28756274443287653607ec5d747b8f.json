{"address":"0x321849C98b28756274443287653607Ec5D747b8F","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_MARK","type":"address"},{"internalType":"uint256","name":"_markPerBlock","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"},{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"MARK","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"markPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingMark","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accMarkPerShare","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"name":"setEndBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_markPerBlock","type":"uint256"}],"name":"updateMARKPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"add(uint256,address,bool)":{"details":"Adds a new lp to the pool. Can only be called by the owner. DO NOT add the same LP token more than once.","params":{"_allocPoint":"How many allocation points to assign to this pool.","_lpToken":"Address of LP token contract.","_withUpdate":"Whether to update all LP token contracts. Should be true if MARK distribution has already begun."}},"balance()":{"details":"Views total number of MARK tokens deposited for rewards.","returns":{"_0":"MARK token balance of the faucet."}},"deposit(uint256,uint256)":{"details":"Deposit LP tokens to Faucet for MARK allocation.","params":{"_amount":"Amount of LP tokens to deposit.","_pid":"ID of a specific LP token pool. See index of PoolInfo[]."}},"emergencyWithdraw(uint256)":{"details":"Withdraw without caring about rewards. EMERGENCY ONLY.","params":{"_pid":"ID of a specific LP token pool. See index of PoolInfo[]."}},"massUpdatePools()":{"details":"Update reward vairables for all pools. Be careful of gas spending!"},"owner()":{"details":"Returns the address of the current owner."},"pendingMark(uint256,address)":{"details":"View function to see pending MARK on frontend.","params":{"_pid":"ID of a specific LP token pool. See index of PoolInfo[].","_user":"Address of a specific user."},"returns":{"_0":"Pending MARK."}},"poolLength()":{"details":"Views total number of LP token pools.","returns":{"_0":"Size of poolInfo array."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"set(uint256,uint256,bool)":{"details":"Update the given pool's MARK allocation point. Can only be called by the owner.","params":{"_allocPoint":"How many allocation points to assign to this pool.","_pid":"ID of a specific LP token pool. See index of PoolInfo[].","_withUpdate":"Whether to update all LP token contracts. Should be true if MARK distribution has already begun."}},"setEndBlock(uint256)":{"details":"Define last block on which MARK reward distribution occurs.","returns":{"_0":"Last block number."}},"transfer(address,uint256)":{"details":"Transfer MARK tokens.","returns":{"_0":"Success."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateMARKPerBlock(uint256)":{"details":"Update MARK per block.","returns":{"_0":"MARK per block."}},"updatePool(uint256)":{"details":"Update reward variables of the given pool to be up-to-date.","params":{"_pid":"ID of a specific LP token pool. See index of PoolInfo[]."}},"withdraw(uint256,uint256)":{"details":"Withdraw LP tokens from MasterChef.","params":{"_amount":"Amount of LP tokens to withdraw.","_pid":"ID of a specific LP token pool. See index of PoolInfo[]."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/PressBAL.sol":"BalFaucet"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/PressBAL.sol":{"keccak256":"0x0330ad46d57ef5255552325dbd04159a4513ba1cabea87f896d9a5acbf60b171","license":"MIT","urls":["bzz-raw://8d3a26981705d4677220a50a36c804eb43498d25786a849315d45eff64086474","dweb:/ipfs/QmSkHTA1g15CbnAbMYJdLBcivBFjEDViWLdrxBBrrSUKEv"]}},"version":1},"version":1,"checkPoints":[]}