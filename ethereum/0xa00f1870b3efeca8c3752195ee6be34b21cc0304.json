{"address":"0xA00F1870b3EFeCA8C3752195Ee6BE34b21cc0304","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cyclePeriod","type":"uint256"},{"internalType":"uint256","name":"amountPerCycle","type":"uint256"},{"internalType":"address","name":"beneficiary","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_amountPerCycle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_beneficiary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_cyclePeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_lastUnstakeTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"beneficiary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pending","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".","kind":"dev","methods":{"beneficiary()":{"returns":{"_0":"the beneficiary of the tokens."}},"token()":{"returns":{"_0":"the token being held."}}},"version":1},"userdoc":{"kind":"user","methods":{"release()":{"notice":"Transfers tokens held by timelock to beneficiary."}},"version":1}},"settings":{"compilationTarget":{"TimeLock.sol":"TokenTimelock"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"TimeLock.sol":{"keccak256":"0xe89f4018bc98ce44d7ab4fd363768d74d634ea7d65add6c9356d4cda67cd2e7c","license":"MIT","urls":["bzz-raw://556e50ce4585aa1cfc8c054167b7bd42d3dd9e098aca265adf92ce7e02a1e6c0","dweb:/ipfs/QmVyjMDtaC58QnaBrZzE3LNJWRYunZkVcDtXdLsFkV68Rt"]}},"version":1},"version":1,"checkPoints":[]}