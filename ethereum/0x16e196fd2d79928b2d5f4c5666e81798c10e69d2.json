{"address":"0x16e196fd2D79928b2D5F4c5666E81798c10E69d2","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"startSaleTime","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"Boughted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawed","type":"event"},{"inputs":[],"name":"allowWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endSaleTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxCap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"raisedETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startSaleTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"userWithdrawBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"userWithdrawBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"withdrawByTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"methods":{"allowWithdraw()":{"details":"call this if you want to allow withdraw before sale time, this could happen if sold out happen. It is recommended allow withdraw only after Uniswap pool is set  "},"endSaleTime()":{"details":"Returns end sale time"},"maxCap()":{"details":"Returns max cap"},"owner()":{"details":"Returns the address of the current owner."},"raisedETH()":{"details":"Returns raised ETH"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"startSaleTime()":{"details":"Returns sale starting time"},"token()":{"details":"Returns token"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userWithdrawBalance()":{"details":"user withdraw balance"},"userWithdrawBalanceOf(address)":{"details":"user withdraw balance"},"wallet()":{"details":"Returns wallet which receives OTC funds"},"withdrawAllowed()":{"details":"check if withdraw is allowed already"},"withdrawByTokens(address)":{"details":"call this if user not know how to call withdraw tokens function, this withdraw tokens to user in their behalf"},"withdrawETH()":{"details":"Return ETH raised to project. Dev can withdraw at any time, part of OTC value is needed to setup Uniswap Liquidity,  so it is needed to withdraw before users"},"withdrawTokens()":{"details":"User can withdraw after end of sale time or if withdraw is allowed"}}},"userdoc":{"methods":{"release()":{"notice":"Transfers tokens held by sale smartcontract back to dev after 5 days of sale finished. Transfer tokens back to user  before call this function"}},"notice":" * DexKit Sale contract, used to distribute tokens by contract address. This sale has 3 rounds OTC Price 1 = 750 KIT per ETH --> capped to 400 ETH OTC Price 2 = 600 KIT per ETH --> capped to 750 ETH OTC Price 3 = 500 KIT per ETH --> capped to 1500 ETH Max Cap is 2650 ETH How it works? User send ETH to contract, min 1 ETH, max 25 ETH, the otc price is computed according to raised amount User can only interact with smartcontract only one time, after that smartcontract not allow to send ETH again \r Sale opens at 14 of November UTC time 00:00:00"}},"settings":{"compilationTarget":{"browser/DexKitSale.sol":"DexKitSale"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/DexKitSale.sol":{"keccak256":"0x5a31689b1d72f88dc28ca948216c1b787e5843b5f56d700f744ebd53db05718b","urls":["bzz-raw://ca2b2bb36bf876ee1b1a2c905e1755d18539552fef70c3ec139f15d1e690fe4c","dweb:/ipfs/QmQeUQ5vuPRt8PtbonhdC81RFzpm8WQR6Avu9gnS2UScGk"]}},"version":1},"version":1,"checkPoints":[]}