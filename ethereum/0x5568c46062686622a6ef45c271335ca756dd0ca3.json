{"address":"0x5568C46062686622a6eF45c271335CA756dD0CA3","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_jusToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"address_refer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_amountJUS","type":"uint256"},{"internalType":"address","name":"_refer","type":"address"},{"internalType":"uint256","name":"_referLevel","type":"uint256"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_percentReward","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"address","name":"_adrToken","type":"address"}],"name":"buyToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"dayUnblock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dev_adress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_orderId","type":"uint256"}],"name":"getOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userId","type":"address"},{"internalType":"uint256","name":"timestampCreated","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"address","name":"address_refer","type":"address"},{"internalType":"uint256","name":"timestampLastWithDraw","type":"uint256"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"percentReward","type":"uint256"},{"internalType":"uint256","name":"jusRewarded","type":"uint256"},{"internalType":"uint256","name":"jusBlock","type":"uint256"},{"internalType":"uint256","name":"jusTotalBlock","type":"uint256"}],"internalType":"struct Staking.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getOrders","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userId","type":"address"},{"internalType":"uint256","name":"timestampCreated","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"address","name":"address_refer","type":"address"},{"internalType":"uint256","name":"timestampLastWithDraw","type":"uint256"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"percentReward","type":"uint256"},{"internalType":"uint256","name":"jusRewarded","type":"uint256"},{"internalType":"uint256","name":"jusBlock","type":"uint256"},{"internalType":"uint256","name":"jusTotalBlock","type":"uint256"}],"internalType":"struct Staking.Order[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_adr","type":"address"}],"name":"getUser","outputs":[{"components":[{"internalType":"uint256","name":"totalJUS","type":"uint256"},{"internalType":"uint256","name":"totalJUSBlock","type":"uint256"},{"internalType":"uint256","name":"totalREF","type":"uint256"},{"internalType":"uint256","name":"refLevel","type":"uint256"},{"internalType":"address","name":"refParent","type":"address"},{"internalType":"uint256","name":"totalREFBlock","type":"uint256"}],"internalType":"struct Staking.User","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"orderCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"orders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userId","type":"address"},{"internalType":"uint256","name":"timestampCreated","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"address","name":"address_refer","type":"address"},{"internalType":"uint256","name":"timestampLastWithDraw","type":"uint256"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"percentReward","type":"uint256"},{"internalType":"uint256","name":"jusRewarded","type":"uint256"},{"internalType":"uint256","name":"jusBlock","type":"uint256"},{"internalType":"uint256","name":"jusTotalBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"percentDev","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"percentMaxPayout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_percentDev","type":"uint256"}],"name":"sepercentDev","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_admin","type":"address"}],"name":"setAdminReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dayUnblock","type":"uint256"}],"name":"setDayUnblock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_dev","type":"address"}],"name":"setDevReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_percentMaxPayout","type":"uint256"}],"name":"setPercentMaxPayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"setTokenJUSReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenReward","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userIdsOrders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"uint256","name":"totalJUS","type":"uint256"},{"internalType":"uint256","name":"totalJUSBlock","type":"uint256"},{"internalType":"uint256","name":"totalREF","type":"uint256"},{"internalType":"uint256","name":"refLevel","type":"uint256"},{"internalType":"address","name":"refParent","type":"address"},{"internalType":"uint256","name":"totalREFBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_orderId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withDrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/Staking.sol":"Staking"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Staking.sol":{"keccak256":"0x136101f157033de2644ca25d2973df36a6f1d3958933eee0d1c58ea82ceb0136","license":"MIT","urls":["bzz-raw://24dd0be1f43700ce0ce6874e40a3b54089e5c0131a62f4b8af1706573a5f2070","dweb:/ipfs/QmYp5rmUeouVshcpXnHkZaw2SR9th7iGqqnuECu1tR2dGp"]}},"version":1},"version":1,"checkPoints":[]}