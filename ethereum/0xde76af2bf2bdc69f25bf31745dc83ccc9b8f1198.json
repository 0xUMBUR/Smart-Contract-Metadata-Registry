{"address":"0xDe76Af2bf2bDc69F25bF31745Dc83ccC9B8f1198","name":"","metadata":{"compiler":{"version":"0.6.2+commit.bacdbe57"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_agentAddress","type":"address"}],"name":"TokenAgentAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_agentAddress","type":"address"}],"name":"TokenAgentRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenBound","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenUnbound","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_country","type":"uint16"}],"name":"UnwhitelistedCountry","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_country","type":"uint16"}],"name":"WhitelistedCountry","type":"event"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"name":"addTokenAgent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16[]","name":"_countries","type":"uint16[]"}],"name":"batchBlacklistCountries","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16[]","name":"_countries","type":"uint16[]"}],"name":"batchWhitelistCountries","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"bindToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"canTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"created","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"destroyed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"isCountryWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"name":"isTokenAgent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenBound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"name":"removeTokenAgent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnershipOnComplianceContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferred","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"unbindToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"unwhitelistCountry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_country","type":"uint16"}],"name":"whitelistCountry","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"addTokenAgent(address)":{"details":"See {ICompliance-addTokenAgent}."},"batchBlacklistCountries(uint16[])":{"details":"Removes countries from the whitelist. Identities from those countries will be unwhitelisted.","params":{"_countries":"Countries to be unwhitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `UnwhitelistedCountry` event"}},"batchWhitelistCountries(uint16[])":{"details":"Adds countries to the whitelist in batch. Identities from those countries will be whitelisted & authorized to manipulate Tokens linked to this Compliance.","params":{"_countries":"Countries to be whitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `WhitelistedCountry` event"}},"bindToken(address)":{"details":"See {ICompliance-bindToken}."},"canTransfer(address,address,uint256)":{"details":"See {ICompliance-canTransfer}."},"created(address,uint256)":{"details":"See {ICompliance-created}."},"destroyed(address,uint256)":{"details":"See {ICompliance-destroyed}."},"isCountryWhitelisted(uint16)":{"details":"Returns true if country is whitelisted","params":{"_country":", numeric ISO 3166-1 standard of the country to be checked"}},"isOwner()":{"details":"Returns true if the caller is the current owner."},"isTokenAgent(address)":{"details":"See {ICompliance-isTokenAgent}."},"isTokenBound(address)":{"details":"See {ICompliance-isTokenBound}."},"owner()":{"details":"Returns the address of the current owner."},"removeTokenAgent(address)":{"details":"See {ICompliance-isTokenAgent}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferOwnershipOnComplianceContract(address)":{"details":"See {ICompliance-transferOwnershipOnComplianceContract}."},"transferred(address,address,uint256)":{"details":"See {ICompliance-transferred}."},"unbindToken(address)":{"details":"See {ICompliance-unbindToken}."},"unwhitelistCountry(uint16)":{"details":"unwhitelist country. Identities from those countries will be unwhitelisted & forbidden to manipulate Tokens linked to this Compliance.","params":{"_country":"Country to be unwhitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `UnwhitelistedCountry` event"}},"whitelistCountry(uint16)":{"details":"whitelist country. Identities from those countries will be whitelisted & authorised to manipulate Tokens linked to this Compliance.","params":{"_country":"Country to be whitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `WhitelistedCountry` event"}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/Opportunity.sol":"OpportunityCompliance"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Opportunity.sol":{"keccak256":"0x7fd8dec127cb9d5fd4dd998fdd51bc4f278d889c3027c9781a274d6869bb4a0d","urls":["bzz-raw://3a92be74d6ef55e18108fc29f1e6ff8f46e1d33c31200b88cbe955743fd83ec2","dweb:/ipfs/QmNZV4Wqm49wsdE7KEPL195VAvWMha7krHwJvLqtTEwoQf"]}},"version":1},"version":1,"checkPoints":[]}