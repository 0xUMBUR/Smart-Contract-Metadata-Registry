{"address":"0x6c7330466aE67d1Eda70BF3ad50A75E8a269E51F","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"prizeStrategy","type":"address"},{"indexed":false,"internalType":"address","name":"erc721Controlled","type":"address"}],"name":"ERC721ControlledSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"afterDistributeAwards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"erc721ControlledTokens","outputs":[{"internalType":"contract ERC721Controlled","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"prizeStrategy","type":"address"},{"internalType":"contract ERC721Controlled","name":"_erc721Controlled","type":"address"}],"name":"setERC721Controlled","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"title":"Allows a PrizeStrategy to automatically create a new ERC721 after the award","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/LootBoxPrizeStrategyListener.sol":"LootBoxPrizeStrategyListener"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"@openzeppelin/contracts/access/AccessControl.sol":{"keccak256":"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360","license":"MIT","urls":["bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187","dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ"]},"@openzeppelin/contracts/introspection/ERC165.sol":{"keccak256":"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74","license":"MIT","urls":["bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a","dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA"]},"@openzeppelin/contracts/introspection/IERC165.sol":{"keccak256":"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453","license":"MIT","urls":["bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf","dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp"]},"@openzeppelin/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","license":"MIT","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"@openzeppelin/contracts/proxy/Initializable.sol":{"keccak256":"0x8eee8bd8c216a3e437bf7a4c9844348f47a2d990e5b06cd96d250e33ab04c25a","license":"MIT","urls":["bzz-raw://c6bb2af880b12be26b148ee99ac3a984168e7fc74721bab9cd44598a0669b038","dweb:/ipfs/QmPfFDaXZbThJgaVim7nvxrw1RuD2xKWCG89K6pznmC8pJ"]},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xaf936da92f3a9a4f98b237323b5eb1d813fb86c4d07a184beba7027cf0509ba3","license":"MIT","urls":["bzz-raw://aaa210e132e06975eb9f20060db6ba7dee78f6fce691a1c2489525584de521c0","dweb:/ipfs/QmRwzi4nUW3UWBwhY5ik2xW3JZo9NMLN5UyGi1xPpMQYrh"]},"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol":{"keccak256":"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538","license":"MIT","urls":["bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127","dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ"]},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7","license":"MIT","urls":["bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694","dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390","license":"MIT","urls":["bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37","dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"]},"@openzeppelin/contracts/utils/EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","license":"MIT","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558","license":"MIT","urls":["bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969","dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q"]},"contracts/ERC721.sol":{"keccak256":"0x54c117b1e138d80cb54e4992809d54c637b69a0ad4b2c4a239b28704d34c6ef1","license":"MIT","urls":["bzz-raw://84052b80659bd3d9a49dc2afac3f6df022a90e6b590bb8c5e37f8c7bb3a1aedc","dweb:/ipfs/Qma1Ngxed4ZJyhw3c3YQWyNcwfsayrTvYN929eyTaFqYWD"]},"contracts/ERC721Controlled.sol":{"keccak256":"0xe1b44714aae000dc98d32f7a37d5b1fb38a06e36d9c85f24c3ce227adaaa07d3","license":"MIT","urls":["bzz-raw://51ffe3e52765070eb0df5312b75ed534cb0bedfe4519769abc6051aa41627bd5","dweb:/ipfs/QmNxen34URZaSzUP3oaN44m7fkaN5S7ZPAT4RvNax2MT8A"]},"contracts/LootBoxPrizeStrategyListener.sol":{"keccak256":"0xd52aadcca4932968a9c143a3b01c9fcde58308dba1135ce1cdb1d7db3016cfe2","license":"MIT","urls":["bzz-raw://a5b70e589c70a6058395609e8a4c77e5b82ef0152af2958f77d4895cf18020ae","dweb:/ipfs/QmTCEaN4JCiQq5TL57SXuL3m6icAXZDv5sU4y1pR1CrqR3"]},"contracts/external/pooltogether/PeriodicPrizeStrategyInterface.sol":{"keccak256":"0x1dbd3d4a60b80a2612541a2b7e68e3a8d04365026ef9a00d5c52b597d028aa9e","license":"MIT","urls":["bzz-raw://fba156ba28ab746030fbb2bea8afc52aa96917c261dec17d446fdf54cc419bae","dweb:/ipfs/QmRKbEEZA775NtDQp6k2Ehn2ncYE6GuuoBP16pKeJYeyjb"]},"contracts/external/pooltogether/PeriodicPrizeStrategyListener.sol":{"keccak256":"0x33afdc3267488f40512ded5ea744d7fe204b755dfbcd3b69f41ef463d6058967","license":"MIT","urls":["bzz-raw://f0c6e611aaf27dcf8f4998bdec2821787d63f05d4f748489057b2383d34d6202","dweb:/ipfs/QmbeHqqzD1S7TnpR3hG99HY38TwxbLzimVE4jTpFbqAdTy"]}},"version":1},"version":1,"checkPoints":[]}