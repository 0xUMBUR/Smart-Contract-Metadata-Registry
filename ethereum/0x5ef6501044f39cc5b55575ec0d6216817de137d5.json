{"address":"0x5eF6501044f39Cc5B55575eC0d6216817DE137D5","name":"","metadata":{"compiler":{"version":"0.6.11+commit.5ef660b1"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_validatorRegistry","type":"address"},{"internalType":"address","name":"_dataConsumerRegistry","type":"address"},{"internalType":"address","name":"_attributeRegistry","type":"address"},{"internalType":"address","name":"_clientRegistry","type":"address"},{"internalType":"address payable","name":"_taxRegistryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":false,"internalType":"bool","name":"_accepted","type":"bool"},{"indexed":false,"internalType":"address","name":"_client","type":"address"},{"indexed":true,"internalType":"address","name":"_dataConsumer","type":"address"},{"indexed":true,"internalType":"address[]","name":"_validators","type":"address[]"},{"indexed":false,"internalType":"bool","name":"_isPreauthorised","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"_keyExchangeClientConsumer","type":"bytes32"}],"name":"RequestClientAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":false,"internalType":"bool","name":"_accepted","type":"bool"},{"indexed":false,"internalType":"address","name":"_client","type":"address"},{"indexed":true,"internalType":"address","name":"_dataConsumer","type":"address"},{"indexed":true,"internalType":"address[]","name":"_validators","type":"address[]"}],"name":"RequestClientRejected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"},{"indexed":true,"internalType":"address","name":"_client","type":"address"},{"indexed":false,"internalType":"bytes8","name":"_requestAttributeMap","type":"bytes8"},{"indexed":false,"internalType":"bytes32","name":"_keyExchangeConsumerValidator","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"_isPreauthorised","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"_keyExchangeConsumerClient","type":"bytes32"}],"name":"RequestCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_id","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_keyExchangeValidatorConsumer","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"_hashedDataWithSharedSecret","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_dataConsumer","type":"address"},{"indexed":false,"internalType":"bool","name":"_substantialLevel","type":"bool"}],"name":"RequestVerified","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"_client","type":"address"},{"internalType":"bytes8","name":"_requestAttributeMap","type":"bytes8"},{"internalType":"bytes32","name":"_keyExchangeConsumerValidator","type":"bytes32"}],"name":"addPreauthorisedRequest","outputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_client","type":"address"},{"internalType":"bytes8","name":"_requestAttributeMap","type":"bytes8"},{"internalType":"bytes32","name":"_keyExchangeConsumerValidator","type":"bytes32"}],"name":"addPreauthorisedRequestFeeless","outputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_client","type":"address"},{"internalType":"bytes8","name":"_requestAttributeMap","type":"bytes8"},{"internalType":"bytes32","name":"_keyExchangeConsumerValidator","type":"bytes32"},{"internalType":"bytes32","name":"_keyExchangeConsumerClient","type":"bytes32"}],"name":"addRequest","outputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_client","type":"address"},{"internalType":"bytes8","name":"_requestAttributeMap","type":"bytes8"},{"internalType":"bytes32","name":"_keyExchangeConsumerValidator","type":"bytes32"},{"internalType":"bytes32","name":"_keyExchangeConsumerClient","type":"bytes32"}],"name":"addRequestFeeless","outputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"attributeRegistry","outputs":[{"internalType":"contract IAttributeRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clientRegistry","outputs":[{"internalType":"contract IClientRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dappManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dataConsumerRegistry","outputs":[{"internalType":"contract IDataConsumerRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_clientAgreed","type":"bool"},{"internalType":"bytes32","name":"_keyExchangeClientConsumer","type":"bytes32"}],"name":"grantPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_clientAgreed","type":"bool"},{"internalType":"bytes32","name":"_keyExchangeClientConsumer","type":"bytes32"}],"name":"grantPermissionFeeless","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_requester","type":"address"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"isRequesterForRequest","outputs":[{"internalType":"bool","name":"_isRequester","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"}],"name":"performFeelessTransaction","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requests","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"address","name":"client","type":"address"},{"internalType":"bytes8","name":"attributeMap","type":"bytes8"},{"internalType":"bytes32","name":"keyExchangeConsumerValidator","type":"bytes32"},{"internalType":"bytes32","name":"keyExchangeValidatorConsumer","type":"bytes32"},{"internalType":"bytes32","name":"hashedDataWithSharedSecret","type":"bytes32"},{"internalType":"bool","name":"clientAgreed","type":"bool"},{"internalType":"bool","name":"expired","type":"bool"},{"internalType":"bool","name":"clientRejected","type":"bool"},{"internalType":"bool","name":"preauthorised","type":"bool"},{"internalType":"bytes32","name":"keyExchangeConsumerClient","type":"bytes32"},{"internalType":"bytes32","name":"keyExchangeClientConsumer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dappManager","type":"address"}],"name":"setDappManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"taxRegistryAddress","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"validatorRegistry","outputs":[{"internalType":"contract IValidatorRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bytes32","name":"_keyExchangeValidatorConsumer","type":"bytes32"},{"internalType":"bytes32","name":"_hashedDataWithSharedSecret","type":"bytes32"}],"name":"verifyRequest","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Key agreements are logged here.","events":{"RequestClientAccepted(uint256,bool,address,address,address[],bool,bytes32)":{"params":{"_accepted":"Marks if the client granted permission.","_client":"Client for which the request with the specified @param _id was launched.","_dataConsumer":"Data consumer that initially launched this request.","_id":"Id of the request (auto incremented in the requests mapping).","_validators":"The validators that should answer to this specific request."}},"RequestClientRejected(uint256,bool,address,address,address[])":{"params":{"_accepted":"Marks if the client granted permission.","_client":"Client for which the request with the specified @param _id was launched.","_dataConsumer":"Data consumer that initially launched this request.","_id":"Id of the request (auto incremented in the requests mapping).","_validators":"The validators that should answer to this specific request."}},"RequestCreated(uint256,address,address,bytes8,bytes32,bool,bytes32)":{"params":{"_client":"The validated client.","_id":"Id of the request (auto incremented in the requests mapping).","_isPreauthorised":"Indicates if the request was created using addPreauthroisedRequest function.","_keyExchangeConsumerClient":"Will hold a value only if @param _isPreauthorised is false.","_keyExchangeConsumerValidator":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_requestAttributeMap":"Specifies the attributes that the provider wants to certify.","_requester":"The provider address."}},"RequestVerified(uint256,bytes32,bytes32,address,bool)":{"params":{"_dataConsumer":"Data consumer that initially launched this request.","_hashedDataWithSharedSecret":"A message signed with AES-CMAC(requestMasterHash, secret) for this request.","_id":"Id of the request (auto incremented in the requests mapping).","_keyExchangeValidatorConsumer":"Part of the Diffie-Hellman symmetric key exchange algorithm generated by validator."}}},"kind":"dev","methods":{"addPreauthorisedRequest(address,bytes8,bytes32)":{"details":"KeyExchangeConsumerValidator Is computed with provider's privateKey.","params":{"_client":"The validated client.","_keyExchangeConsumerValidator":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_requestAttributeMap":"Specifies the attributes that the provider wants to certify."},"returns":{"_id":"of the newly created request request."}},"addPreauthorisedRequestFeeless(address,bytes8,bytes32)":{"details":"Index is returned.KeyExchangeConsumerValidator Is computed with provider's privateKey.","params":{"_client":"The validated client.","_keyExchangeConsumerValidator":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_requestAttributeMap":"uses the bitmask to specify the attributes required."},"returns":{"_id":"Id of the newly created request request."}},"addRequest(address,bytes8,bytes32,bytes32)":{"details":"KeyExchangeConsumerValidator Is computed with provider's privateKey.","params":{"_client":"The validated client.","_keyExchangeConsumerClient":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_keyExchangeConsumerValidator":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_requestAttributeMap":"Specifies the attributes that the provider wants to certify."},"returns":{"_id":"Id of the newly created request request."}},"addRequestFeeless(address,bytes8,bytes32,bytes32)":{"details":"Index is returned.KeyExchangeConsumerValidator Is computed with provider's privateKey.","params":{"_client":"The validated client.","_keyExchangeConsumerClient":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_keyExchangeConsumerValidator":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by provider.","_requestAttributeMap":"uses the bitmask to specify the attributes required."},"returns":{"_id":"Id of the newly created request request."}},"constructor":{"params":{"_attributeRegistry":"Requires AttributeRegistry to be deployed before this.","_clientRegistry":"Requires ClientRegistry to be deployed before this.","_dataConsumerRegistry":"Requires DataConsumerRegistry to be deployed before this.","_validatorRegistry":"Requires ValidatorRegistry to be deployed before this."}},"grantPermission(uint256,bool,bytes32)":{"details":"updates the request object associated with the ID.","params":{"_id":"Id of the request (auto incremented in the requests mapping).","_keyExchangeClientConsumer":"Part of the Diffie-Hellman symmetric key exchange algorithm. Generated by client."}},"grantPermissionFeeless(uint256,bool,bytes32)":{"details":"updates the request object associated with the ID.","params":{"_id":"Id of the request (auto incremented in the requests mapping)."}},"isRequesterForRequest(address,uint256)":{"details":"Part of the IIdentityRequestRegistry interface"},"pause()":{"details":"Called by the owner to pause, triggers stopped state.Overrides base function with permissioned access."},"performFeelessTransaction(address,address,bytes,uint256,bytes)":{"details":"Signed transactions are passed to this function."},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"setDappManager(address)":{"details":"Needed to move the DappManager here due to the fact that only the owners can call performFeelessTransaction"},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"_newOwner":"The address to transfer ownership to."}},"unpause()":{"details":"Called by the owner to unpause, returns to normal state.Overrides base function with permissioned access."},"verifyRequest(uint256,bytes32,bytes32)":{"details":"SharedSecret is computed from KA1 and KA2 with private key","params":{"_hashedDataWithSharedSecret":"Obtained from a AES-CMAC(hashOfData, sharedSecret)","_id":"Id of the request (auto incremented in the requests mapping).","_keyExchangeValidatorConsumer":"Is computed with provider's privateKey."}}},"stateVariables":{"attributeRegistry":{"details":"Interface reference to attribute registry."},"clientRegistry":{"details":"Interface reference to client registry."},"dataConsumerRegistry":{"details":"Interface reference to validator registry."},"index":{"details":"Index used for id auto-generation."},"requests":{"details":"Auto Incremented Id mapping of requests."},"taxRegistryAddress":{"details":"Interface reference to tax registry."}},"title":"Identity Request Registry","version":1},"userdoc":{"events":{"RequestClientAccepted(uint256,bool,address,address,address[],bool,bytes32)":{"notice":"Offchain eventEvent fired when a request has been confirmed by a client."},"RequestClientRejected(uint256,bool,address,address,address[])":{"notice":"Offchain eventEvent fired when a request has been confirmed by a client."},"RequestCreated(uint256,address,address,bytes8,bytes32,bool,bytes32)":{"notice":"Offchain eventEvent fired when a request has been added."},"RequestVerified(uint256,bytes32,bytes32,address,bool)":{"notice":"Offchain eventEvent fired when a request was verified."}},"kind":"user","methods":{"addPreauthorisedRequest(address,bytes8,bytes32)":{"notice":"Creates a preauthorised request with auto generated index.Requires fee payment directly in the smart contract."},"addPreauthorisedRequestFeeless(address,bytes8,bytes32)":{"notice":"Creates a preauthorised request with auto generated index."},"addRequest(address,bytes8,bytes32,bytes32)":{"notice":"Creates an empty request with auto generated index.Requires fee payment directly in the smart contract."},"addRequestFeeless(address,bytes8,bytes32,bytes32)":{"notice":"An empty request with auto generated index is created."},"grantPermission(uint256,bool,bytes32)":{"notice":"Response for request from client with key exchange."},"grantPermissionFeeless(uint256,bool,bytes32)":{"notice":"Response for request from client with key exchange."},"performFeelessTransaction(address,address,bytes,uint256,bytes)":{"notice":"Only the certSign owner can call this function."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"verifyRequest(uint256,bytes32,bytes32)":{"notice":"Response for request from validator with Validator-Provider's key agreement"}},"notice":"Request for identity shares are added here.","version":1}},"settings":{"compilationTarget":{"browser/IdentityRequestRegistry.sol":"IdentityRequestRegistry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/CertECRecovery.sol":{"keccak256":"0x12647900fb6ea0207ef46e85a7727b92a2df8426b5e63c7cf4c96db6b0bc55ad","license":"MIT","urls":["bzz-raw://42c5813e5bede8894477859f4ae32f26ca15ff2eb447279c63da1d1d25da0269","dweb:/ipfs/QmVbi5dPib56Pm4g141hZfaC5XVx64RVezciq6bRmVgx1P"]},"browser/CertOwnable.sol":{"keccak256":"0x8e2cdfe8dbac8667e097bd6d75424a945acb3373e2dcaaa2aaf510ffabaf56f8","license":"MIT","urls":["bzz-raw://8801974126e04a6c5ac33b5fab9c7a1cc4e934ebf351639a09f9a214f5b51826","dweb:/ipfs/QmTWkTmvRyqMB5RXeNfyXqFGDry3oFKhPuMJd3wiUWrW99"]},"browser/CertPausable.sol":{"keccak256":"0x7101b0bde0e5c685d751c490bfaa1bf72ab3ad2e25c25bd32b1563dbaac61f05","license":"MIT","urls":["bzz-raw://4aaa9f03f246a734998bd796b8c8f36f5c2eea66592f34c74ae50af22b4d12d4","dweb:/ipfs/QmQ1qjpG9MCw8jwqsMx9nweWi3qLPUD5CyiZb2ibQVaBNH"]},"browser/CertSafeMath.sol":{"keccak256":"0x7c3e8d72898b4049be6eb09e8a9cb05d99573fd54bfc5176077248e7bcf099f9","license":"MIT","urls":["bzz-raw://41cb274a4a853233a18370972d742a2fa05c051a616d61485ee031b85a306744","dweb:/ipfs/QmTvgVFvqXmzt7QiEyMhJkkeLNre1MtahqMFQYJZvncMxy"]},"browser/Feeless.sol":{"keccak256":"0x4e29508cd2d07d741c851710c2fd085e15150ffcf2c0c888ad3a045fb33d2657","license":"MIT","urls":["bzz-raw://42deb517b042cfc33b52f8d414e2785188becc54a2c15a1cca693f0331c0a6b3","dweb:/ipfs/QmbXEsfWkWEkm1enjpKoeKTiS8iZDYUJmYK6VkxiK7jq79"]},"browser/IAttributeRegistry.sol":{"keccak256":"0x7e209774584e1469ec93df2b81698fbdcfad863905772e8d7f8083f7daadc733","license":"MIT","urls":["bzz-raw://7f49188d2dc275777e8c3cdef715ee6ee12e2a184f3ec89a35de99ce347801fd","dweb:/ipfs/QmPW2sXux6C7SHVYhrSet5Ezogp7zxwjLzFP1pp7P23T5Q"]},"browser/IClientRegistry.sol":{"keccak256":"0xc14b3a69075db3951f3f042a828e0bc1bb2394bf2c9fd64ede7779dfeed4e43c","license":"MIT","urls":["bzz-raw://f99300e6d562748fb4ca822596b68e9cb9350e3421706129c4f759791b629a64","dweb:/ipfs/QmXSUStj9GXDfTbWzYW677cmZc43WWFWbth18sCbPqWnSM"]},"browser/IDataConsumerRegistry.sol":{"keccak256":"0xea619601d802655b43b44b3b0032d1575c21f4cc1fb63ec3ebd632b370ec2465","license":"MIT","urls":["bzz-raw://3a9da48e9ee071bd22ba14845137e6a36c80533373e49c78039ac28c0815746f","dweb:/ipfs/QmXA2xdsP4jbya7QL2HcHFHqy91iVpW3QsNGfDSyHLMAos"]},"browser/IIdentityRequestRegistry.sol":{"keccak256":"0xfa104f1c39cc4a0164840422f9e76997d22db0c3064fc0970f2a15ed3811bc84","license":"MIT","urls":["bzz-raw://4e8246b666731e826e67379d082e950c5694057fe4e60f8f419479a3707d3b25","dweb:/ipfs/QmeUJMLRFR3ZKtvTF3tDNe2ovk8u11krzrRm51UhpapccJ"]},"browser/ITaxRegistry.sol":{"keccak256":"0x81fbe2d023001324d9f40a12c010746698470a4520625815b796b7151032170a","license":"MIT","urls":["bzz-raw://c355d4ab3b54c8fb01244d2c986a2f1d7faf8e7c90b54600097c570b8b62ff7a","dweb:/ipfs/QmcqxRwyPb1o11bWXrFUZ6H1vE8M2K8xuQYxRakkafFbxv"]},"browser/IValidatorRegistry.sol":{"keccak256":"0x27104488369cdbba9d8d924cbe9635f2125c5c53630cabf25827f5b11968fb02","license":"MIT","urls":["bzz-raw://a4693d37c39438e847186b27a8a93b013a9d37e00c1a3f810d954bae7357451b","dweb:/ipfs/QmdYsW8KZ5vdF1wAefa5htj9g5hQVaukA2shU31MTLoH6E"]},"browser/IdentityRequestRegistry.sol":{"keccak256":"0x4fae72f3bd54f138e16dc24c1d2671cd9f6de1d70937bb827e7029bfc480e034","license":"MIT","urls":["bzz-raw://5c01e5a2ce4d1b7c9764fcf89a47e7568890d636d2a8f4374ad3bb8ecad95bde","dweb:/ipfs/QmQrEA5nBkLqcmmKEY4YPksLj4BrLG4RKZuSG4MJGmLX8h"]}},"version":1},"version":1,"checkPoints":[]}