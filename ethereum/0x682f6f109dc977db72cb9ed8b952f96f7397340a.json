{"address":"0x682F6f109dC977dB72Cb9Ed8b952F96F7397340A","name":"","metadata":{"compiler":{"version":"0.6.8+commit.0bbfe453"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_world","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"room","type":"uint256"},{"indexed":true,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"number","type":"uint256"}],"name":"Buy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"room","type":"uint256"},{"indexed":true,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"number","type":"uint256"}],"name":"Winner","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_myid","type":"bytes32"},{"internalType":"string","name":"_result","type":"string"}],"name":"__callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"string","name":"_res","type":"string"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"name":"__callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"_room","type":"uint8"},{"internalType":"uint8","name":"_number","type":"uint8"}],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"destruct","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"_room","type":"uint8"}],"name":"draw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"_room","type":"uint8"}],"name":"getRoomInfo","outputs":[{"internalType":"address[12]","name":"fill","type":"address[12]"},{"internalType":"address","name":"last_win_address","type":"address"},{"internalType":"uint8","name":"last_win_number","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"provableSetGasLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"provableSetGasPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"provable_gas_limit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"provable_gas_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"world","outputs":[{"internalType":"contract INewWorld","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"methods":{"__callback(bytes32,string)":{"details":"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/ethworld0621.sol":"Roulette"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/ethworld0621.sol":{"keccak256":"0x353be58c1059775fc9e9474d0df35ad1dd6b35209d68426afff466e47cf95b63","license":"MIT License","urls":["bzz-raw://ae5e1743eb73b3d315c9d65d70ed2617549c69dd67a8db1293325ba185201605","dweb:/ipfs/QmRw8vX7aTU3wrNE7g2TkSnajMoacmhDw8izAQTYgH6mSk"]},"github.com/OpenZeppelin/openzeppelin-contracts/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"github.com/OpenZeppelin/openzeppelin-contracts/contracts/access/AccessControl.sol":{"keccak256":"0x4a5c56ea69b24d1b2af981a2e804890002dde965b75285fcfd3c7724df98def3","license":"MIT","urls":["bzz-raw://a50c94fbb03a973347bb8f206e8a6867f149c49021dc04fa95de56d136527f2e","dweb:/ipfs/QmWa25mB5Nt3uTH3JdkwiJnxJtzudWJW388xaoMb8fp4CH"]},"github.com/OpenZeppelin/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x934dbc549a8df514456047ad1c6ab257127a03f4109272834c30e596bbe10d1d","license":"MIT","urls":["bzz-raw://33cf247ade00a28c632dfe2c2521e1952f467c6081b89375c34b1eb297441d9b","dweb:/ipfs/QmYGNAHCtN1m3QDynteTeVCfwFZBZRpGJNMjxwVBUifnfB"]},"github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","license":"MIT","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]},"github.com/provable-things/ethereum-api/blob/master/provableAPI_0.6.sol":{"keccak256":"0x4d4705085b8a1ab415dd0d4b744f6ba5b43acc8c0ebf841290e4f9308cfeb795","urls":["bzz-raw://92ab2f99a6e85cafe056fc717d8608cd27d2e09027c088975fe7d9026516e898","dweb:/ipfs/QmaNChQFyJU9vJJNyirtia1rrdU12S9wDjb71VrLFju6bt"]}},"version":1},"version":1,"checkPoints":[]}