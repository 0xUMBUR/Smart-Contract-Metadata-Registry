{"address":"0xc1aAB2dc3Fe5082D2D3eAaf67f4D49619B9862C9","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"AuthorizedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"partition","type":"bytes32"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"AuthorizedOperatorByPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newCap","type":"uint256"}],"name":"CapSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"fromPartition","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"toPartition","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"ChangedPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"name","type":"bytes32"},{"indexed":false,"internalType":"string","name":"uri","type":"string"},{"indexed":false,"internalType":"bytes32","name":"documentHash","type":"bytes32"}],"name":"Document","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum SecurityTokenStorage.gsnMode","name":"","type":"uint8"}],"name":"GSNModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IRelayRecipient","name":"","type":"address"}],"name":"GSNModuleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Issued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"partition","type":"bytes32"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"IssuedByPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"bytes32","name":"partition","type":"bytes32"},{"indexed":false,"internalType":"contract IConstraintModule[]","name":"newModules","type":"address[]"}],"name":"ModulesByPartitionSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Redeemed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"partition","type":"bytes32"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"RedeemedByPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRelayHub","type":"address"},{"indexed":true,"internalType":"address","name":"newRelayHub","type":"address"}],"name":"RelayHubChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"RevokedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"partition","type":"bytes32"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"RevokedOperatorByPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"RoleRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"fromPartition","type":"bytes32"},{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"TransferByPartition","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"TransferWithData","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"relay","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"bytes","name":"encodedFunction","type":"bytes"},{"internalType":"uint256","name":"transactionFee","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"approvalData","type":"bytes"},{"internalType":"uint256","name":"maxPossibleCharge","type":"uint256"}],"name":"acceptRelayedCall","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"addRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"operator","type":"address"}],"name":"authorizeOperatorByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"balanceOfByPartition","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"roles","type":"bytes32[]"},{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"bulkAddRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address[]","name":"tokenHolders","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"bulkIssueByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"}],"name":"controllersByPartition","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"documentName","type":"bytes32"}],"name":"getDocument","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGSNMode","outputs":[{"internalType":"enum SecurityTokenStorage.gsnMode","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHubAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"}],"name":"getModulesByPartition","outputs":[{"internalType":"contract IConstraintModule[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"granularity","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"controller","type":"address"},{"internalType":"address","name":"issuer","type":"address"},{"internalType":"address","name":"redeemer","type":"address"},{"internalType":"address","name":"module_editor","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isControllable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isIssuable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"isOperatorForPartition","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"tokenHolder","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"issueByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"tokenHolder","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorRedeemByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorTransferByPartition","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"partitionsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"actualCharge","type":"uint256"},{"internalType":"bytes32","name":"preRetVal","type":"bytes32"}],"name":"postRelayedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"context","type":"bytes"}],"name":"preRelayedCall","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"redeemByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"relayHubVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"removeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceControl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceIssuance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperatorByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newCap","type":"uint256"}],"name":"setCap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"documentName","type":"bytes32"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"bytes32","name":"documentHash","type":"bytes32"}],"name":"setDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum SecurityTokenStorage.gsnMode","name":"mode","type":"uint8"}],"name":"setGSNMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IRelayRecipient","name":"newGSNModule","type":"address"}],"name":"setGSNModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"contract IConstraintModule[]","name":"newModules","type":"address[]"}],"name":"setModulesByPartition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPartitions","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"}],"name":"totalSupplyByPartition","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"partition","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferByPartition","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"transferFromWithData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferWithData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRelayHub","type":"address"}],"name":"upgradeRelayHub","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"payee","type":"address"}],"name":"withdrawDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Simon Dosch","details":"Main contract of the micobo Security Token Contract Suite inspired by and modeled after https://github.com/ConsenSys/UniversalToken implements access control for GSN implements new function bulkIssueByPartition implements IERC1400 inherits ERC1400ERC20","methods":{"acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)":{"details":"doc in IRelayRecipient"},"addRole(bytes32,address)":{"details":"Assigns a role to an account only ADMIN","params":{"account":"The address that is being assigned a role","role":"Role that is being assigned"}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.\t * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits an {Approval} event."},"authorizeOperator(address)":{"details":"Set a third party operator address as an operator of 'msg.sender' to transfer and redeem tokens on its behalf.","params":{"operator":"Address to set as an operator for 'msg.sender'."}},"authorizeOperatorByPartition(bytes32,address)":{"details":"Set 'operator' as an operator for 'msg.sender' for a given partition.","params":{"operator":"Address to set as an operator for 'msg.sender'.","partition":"Name of the partition."}},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"balanceOfByPartition(bytes32,address)":{"details":"Get balance of a tokenholder for a specific partition.","params":{"partition":"Name of the partition.","tokenHolder":"Address for which the balance is returned."},"returns":{"_0":"Amount of token of partition 'partition' held by 'tokenHolder' in the token contract."}},"bulkAddRole(bytes32[],address[])":{"details":"Assigns a bulk of roles to accounts only ADMIN","params":{"accounts":"The addresses that are being assigned a role","roles":"Roles that are being assigned"}},"bulkIssueByPartition(bytes32,address[],uint256[],bytes)":{"details":"Mints to a number of token holder at the same time Must be issuable and tokenHolders and values must bne same length","params":{"data":"Additional data for issueByPartition","partition":"partition id tokens should be minted for","tokenHolders":"addresses of all token receiver in the same order as \"values\"","values":"amounts of tokens to be minted in the same order as \"tokenHolders\""}},"cap()":{"details":"Returns the cap on the token's total supply."},"controllersByPartition(bytes32)":{"details":"Get controllers for a given partition. Function used for ERC1400Raw and ERC20 backwards compatibility.","params":{"partition":"Name of the partition."},"returns":{"_0":"Array of controllers for partition."}},"decimals()":{"details":"Returns the ERC20 decimal property as 0","returns":{"_0":"uint8 Always returns decimals as 0"}},"getDocument(bytes32)":{"details":"Access a document associated with the token.","params":{"documentName":"Short name (represented as a bytes32) associated to the document."},"returns":{"_0":"Requested document + document hash."}},"getGSNMode()":{"details":"Gets GSN mode","returns":{"_0":"gsnMode ALL, NONE or MODULE"}},"getHubAddr()":{"details":"Returns the address of the {IRelayHub} contract for this recipient."},"getModulesByPartition(bytes32)":{"details":"Returns all modules for requested partition","params":{"partition":"Partition to get modules for"},"returns":{"_0":"IConstraintModule[]"}},"granularity()":{"details":"Get the smallest part of the token that’s not divisible.","returns":{"_0":"The smallest non-divisible part of the token."}},"hasRole(bytes32,address)":{"details":"check if an account has a role","returns":{"_0":"bool True if account has role"}},"initialize(string,string,uint256,uint256,address,address,address,address,address)":{"details":"Initialize ERC1400 + register the contract implementation in ERC1820Registry.","params":{"granularity":"Granularity of the token.","name":"Name of the token.","symbol":"Symbol of the token."}},"isControllable()":{"details":"Know if the token can be controlled by operators. If a token returns 'false' for 'isControllable()'' then it MUST always return 'false' in the future.","returns":{"_0":"bool 'true' if the token can still be controlled by operators, 'false' if it can't anymore."}},"isIssuable()":{"details":"Know if new tokens can be issued in the future.","returns":{"_0":"bool 'true' if tokens can still be issued by the issuer, 'false' if they can't anymore."}},"isOperator(address,address)":{"details":"Indicate whether the operator address is an operator of the tokenHolder address.","params":{"operator":"Address which may be an operator of tokenHolder.","tokenHolder":"Address of a token holder which may have the operator address as an operator."},"returns":{"_0":"'true' if operator is an operator of 'tokenHolder' and 'false' otherwise."}},"isOperatorForPartition(bytes32,address,address)":{"details":"Indicate whether the operator address is an operator of the tokenHolder address for the given partition.","params":{"operator":"Address which may be an operator of tokenHolder for the given partition.","partition":"Name of the partition.","tokenHolder":"Address of a token holder which may have the operator address as an operator for the given partition."},"returns":{"_0":"'true' if 'operator' is an operator of 'tokenHolder' for partition 'partition' and 'false' otherwise."}},"issueByPartition(bytes32,address,uint256,bytes)":{"details":"Issue tokens from a specific partition.","params":{"data":"Information attached to the issuance, by the issuer.","partition":"Name of the partition.","tokenHolder":"Address for which we want to issue tokens.","value":"Number of tokens issued."}},"name()":{"details":"Get the name of the token, e.g., \"MyToken\".","returns":{"_0":"Name of the token."}},"operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)":{"details":"Redeem tokens of a specific partition.","params":{"data":"Information attached to the redemption.","operatorData":"Information attached to the redemption, by the operator.","partition":"Name of the partition.","tokenHolder":"Address for which we want to redeem tokens.","value":"Number of tokens redeemed."}},"operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)":{"details":"Transfer tokens from a specific partition through an operator.","params":{"data":"Information attached to the transfer.","from":"Token holder.","operatorData":"Information attached to the transfer, by the operator.","partition":"Name of the partition.","to":"Token recipient.","value":"Number of tokens to transfer."},"returns":{"_0":"Destination partition."}},"owner()":{"details":"Returns the address of the current owner."},"partitionsOf(address)":{"details":"Get partitions index of a tokenholder.","params":{"tokenHolder":"Address for which the partitions index are returned."},"returns":{"_0":"Array of partitions index of 'tokenHolder'."}},"pause()":{"details":"Called by a pauser to pause, triggers stopped state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise.","returns":{"_0":"bool True if the contract is paused"}},"postRelayedCall(bytes,bool,uint256,bytes32)":{"details":"See `IRelayRecipient.postRelayedCall`.\t * This function should not be overriden directly, use `_postRelayedCall` instead.\t * * Requirements:\t * - the caller must be the `RelayHub` contract."},"preRelayedCall(bytes)":{"details":"See `IRelayRecipient.preRelayedCall`.\t * This function should not be overriden directly, use `_preRelayedCall` instead.\t * * Requirements:\t * - the caller must be the `RelayHub` contract."},"redeemByPartition(bytes32,uint256,bytes)":{"details":"Redeem tokens of a specific partition. only controllers can redeem","params":{"data":"Information attached to the redemption, by the redeemer.","partition":"Name of the partition.","value":"Number of tokens redeemed."}},"relayHubVersion()":{"details":"Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version."},"removeRole(bytes32,address)":{"details":"Removes a role from an account only ADMIN","params":{"account":"The address that a role is removed from","role":"Role that is being removed"}},"renounceControl()":{"details":"Definitely renounce the possibility to control tokens on behalf of tokenHolders. Once set to false, '_isControllable' can never be set to 'true' again."},"renounceIssuance()":{"details":"Definitely renounce the possibility to issue new tokens. Once set to false, '_isIssuable' can never be set to 'true' again."},"renounceRole(bytes32)":{"details":"Removes a role from the sender's address ATTENTION: it is possible to remove the last ADMINN role by renouncing it!","params":{"role":"Role that is being renounced by the _msgSender()"}},"revokeOperator(address)":{"details":"Remove the right of the operator address to be an operator for 'msg.sender' and to transfer and redeem tokens on its behalf.","params":{"operator":"Address to rescind as an operator for 'msg.sender'."}},"revokeOperatorByPartition(bytes32,address)":{"details":"Remove the right of the operator address to be an operator on a given partition for 'msg.sender' and to transfer and redeem tokens on its behalf.","params":{"operator":"Address to rescind as an operator on given partition for 'msg.sender'.","partition":"Name of the partition."}},"setCap(uint256)":{"details":"Sets cap to a new value New value need to be higher than old one Is only callable by CAP?_EDITOR","params":{"newCap":"value of new cap"}},"setDocument(bytes32,string,bytes32)":{"details":"Associate a document with the token.","params":{"documentHash":"Hash of the document [optional parameter].","documentName":"Short name (represented as a bytes32) associated to the document.","uri":"Document content."}},"setGSNMode(uint8)":{"details":"Sets GSN mode to either ALL, NONE or MODULE","params":{"mode":"ALL, NONE or MODULE"}},"setGSNModule(address)":{"details":"Sets Module address for MODULE mode","params":{"newGSNModule":"Address of new GSN module"}},"setModulesByPartition(bytes32,address[])":{"details":"Sets all modules for partition","params":{"newModules":"IConstraintModule[] array of new modules for this partition","partition":"Partition to set modules for"}},"symbol()":{"details":"Get the symbol of the token, e.g., \"MYT\".","returns":{"_0":"Symbol of the token."}},"totalPartitions()":{"details":"Get list of existing partitions.","returns":{"_0":"Array of all exisiting partitions."}},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"totalSupplyByPartition(bytes32)":{"details":"Returns the total supply of a given partition For ERC20 compatibility via proxy","params":{"partition":"Requested partition"},"returns":{"_0":"uint256 _totalSupplyByPartition"}},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."},"transferByPartition(bytes32,address,uint256,bytes)":{"details":"Transfer tokens from a specific partition.","params":{"data":"Information attached to the transfer, by the token holder.","partition":"Name of the partition.","to":"Token recipient.","value":"Number of tokens to transfer."},"returns":{"_0":"Destination partition."}},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."},"transferFromWithData(address,address,uint256,bytes,bytes)":{"details":"Transfer the amount of tokens on behalf of the address 'from' to the address 'to'.","params":{"data":"Information attached to the transfer, and intended for the token holder ('from').","from":"Token holder (or 'address(0)' to set from to 'msg.sender').","to":"Token recipient.","value":"Number of tokens to transfer."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWithData(address,uint256,bytes)":{"details":"Transfer the amount of tokens from the address 'msg.sender' to the address 'to'.","params":{"data":"Information attached to the transfer, by the token holder.","to":"Token recipient.","value":"Number of tokens to transfer."}},"unpause()":{"details":"Called by a pauser to unpause, returns to normal state."},"upgradeRelayHub(address)":{"details":"Upgrades the relay hub address","params":{"newRelayHub":"Address of new relay hub"}},"version()":{"details":"Returns the version string of the {SecurityToken} for which this recipient implementation was built."},"withdrawDeposits(uint256,address)":{"details":"Withdraws GSN deposits for this contract","params":{"amount":"Amount to be withdrawn","payee":"Address to sned the funds to"}}},"title":"SecurityToken"},"userdoc":{"methods":{"authorizeOperator(address)":{"notice":"[ERC1400Raw INTERFACE (7/13)]"},"authorizeOperatorByPartition(bytes32,address)":{"notice":"[ERC1400Partition INTERFACE (8/10)]"},"balanceOfByPartition(bytes32,address)":{"notice":"[ERC1400Partition INTERFACE (1/10)]"},"controllersByPartition(bytes32)":{"notice":"[ERC1400Partition INTERFACE (7/10)]"},"getDocument(bytes32)":{"notice":"[ERC1400 INTERFACE (1/9)]"},"granularity()":{"notice":"[ERC1400Raw INTERFACE (5/13)]"},"isControllable()":{"notice":"[ERC1400 INTERFACE (3/9)]"},"isIssuable()":{"notice":"[ERC1400 INTERFACE (4/9)]"},"isOperator(address,address)":{"notice":"[ERC1400Raw INTERFACE (9/13)]"},"isOperatorForPartition(bytes32,address,address)":{"notice":"[ERC1400Partition INTERFACE (10/10)]"},"issueByPartition(bytes32,address,uint256,bytes)":{"notice":"[ERC1400 INTERFACE (5/9)]"},"name()":{"notice":"[ERC1400Raw INTERFACE (1/13)]"},"operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)":{"notice":"[ERC1400 INTERFACE (7/9)]"},"operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)":{"notice":"[ERC1400Partition INTERFACE (4/10)]"},"partitionsOf(address)":{"notice":"[ERC1400Partition INTERFACE (2/10)]"},"redeemByPartition(bytes32,uint256,bytes)":{"notice":"[ERC1400 INTERFACE (6/9)]"},"renounceControl()":{"notice":"[NOT MANDATORY FOR ERC1400 STANDARD]"},"renounceIssuance()":{"notice":"[NOT MANDATORY FOR ERC1400 STANDARD]"},"revokeOperator(address)":{"notice":"[ERC1400Raw INTERFACE (8/13)]"},"revokeOperatorByPartition(bytes32,address)":{"notice":"[ERC1400Partition INTERFACE (9/10)]"},"setDocument(bytes32,string,bytes32)":{"notice":"[ERC1400 INTERFACE (2/9)]"},"symbol()":{"notice":"[ERC1400Raw INTERFACE (2/13)]"},"totalPartitions()":{"notice":"[NOT MANDATORY FOR ERC1400Partition STANDARD]"},"transferByPartition(bytes32,address,uint256,bytes)":{"notice":"[ERC1400Partition INTERFACE (3/10)]"}}}},"settings":{"compilationTarget":{"/Users/simondos/projects/micobo-security-token/contracts/token/SecurityToken.sol":"SecurityToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":1024},"remappings":[]},"sources":{"/Users/simondos/projects/micobo-security-token/contracts/erc1820/ERC1820Client.sol":{"keccak256":"0xd5f30da4ef5b8e78c1611e2cd2c66b3a94617782fe51c99fdc1797064ac54caf","urls":["bzz-raw://839843607b74a189ab5726b518424911177cb669bd181972506a678e344e6b7e","dweb:/ipfs/QmaDAJNbwvMESmuGUud5bP1c7RSfx3gq68QyxRnMXzwTf7"]},"/Users/simondos/projects/micobo-security-token/contracts/gsn/GSNRecipient.sol":{"keccak256":"0xecf8465378d2c744033715bc8605726f93af15e49412ac1f5c8382a20295170c","urls":["bzz-raw://bc3a0f38fd8175e0c826a928f49345b8ff8a9cbdb1d7c9d6d1a190b62c1fec07","dweb:/ipfs/QmPUkMC9Muue6SbfGBmy1BWegGYSuB1mHnt4x43b5UoJT2"]},"/Users/simondos/projects/micobo-security-token/contracts/gsn/GSNable.sol":{"keccak256":"0x80ad3b73bc554a7fbcc8b202388a34b42fad95f40b610ceefb2c43effdb8e501","urls":["bzz-raw://6638d513d4a8a445167aa469d966feda11c34592d7c68affda909a0198d948da","dweb:/ipfs/Qmer9mHtspjCjNCfRJ8wQV5oyUZSuYgNPpLU3zAp2KwRCf"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IAdmin.sol":{"keccak256":"0x9373dfc6b200de9ca803dd684c09f716a24252257dd98233a0b740e83f375167","urls":["bzz-raw://ecdc011329fa6f3141d0d5894f493c913675686ba99cd06766d26d54dc759b83","dweb:/ipfs/QmSZpsVD62qhZiRfPzjwwrvWwixemjQ53JSXmXnqd8eSZi"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IConstrainable.sol":{"keccak256":"0x1b1fbd94886ca6713db8913dca135146f2cdbf57af51c4c4fc8bc6e43a04b31a","urls":["bzz-raw://6b4e33440c0d532954f7c7365d3ef34f0090ccb8cd4f539c9ff13dce94e7f1b7","dweb:/ipfs/QmNPqeu1cwFpY8pMNj8Btc2qjSohvLZuuoUYTYL1DM6Sso"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IConstraintModule.sol":{"keccak256":"0x7aac41da2b135275b55338756a3bac73ea354f1a9b56de43a9e2b2cf33d9b550","urls":["bzz-raw://8b5e241d5fcc262705a8cfaa05cf8505c2687797e032363fbc21bdddf2e1b87b","dweb:/ipfs/QmYZfQPqqF7tKrDRsHDxdHdq7Wgd5GHfzZRKzZvuDxRSjB"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IERC1400.sol":{"keccak256":"0xe84fc8473fc78bc2dcdd6fc7528539352567cec8c2bcd24330c6b5ce336dd104","urls":["bzz-raw://6678e41fe92f17f216d6b82e8650556d2851d62309bc601b14b1bebf63775fb4","dweb:/ipfs/QmaAJwkrr56gJrJysbB4y5FdiWTNBoQFKYyHRGzXnBCFEH"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IERC1400Capped.sol":{"keccak256":"0x7d6f7e9493fa9303461113108965e2567241b45b9fae1e44b13c23d1f58e0dac","urls":["bzz-raw://406d8a785f87626a1bc282d88cd411e2a2f4602305cfb9afba5d5faa37646c68","dweb:/ipfs/QmPVa8HnyocGES5cNs46kJ2dy6BYGTu8wrKV9RxFbWzWBw"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IERC1400Partition.sol":{"keccak256":"0x409491257f7350eef9bdad164bfd4b9aa5074eb603f077205cbd3a7ec274ab13","urls":["bzz-raw://98cab2efdca44bb09106a8abe854f9d732e7e3305c3da0de38709811c5dfcbec","dweb:/ipfs/QmZnfcvnHscCpR5Ud8saNgReX3pZsFdcAbJwpq5o2D8fAe"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IERC1400Raw.sol":{"keccak256":"0x0c6da8882072054a916b70aaee4d347f2b6e2dab475949f7a2b937ce565bcb8b","urls":["bzz-raw://a96972e6edc5d1f7ce4e07c864ab30b0065d8ac9422360f12f328faf160d099a","dweb:/ipfs/QmRx4vmihL2KDXHj9vUc2VtnoTxN11w7TSN6G3LC495x47"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IOwnable.sol":{"keccak256":"0x9b1391392e3de9f7a301807492d0bbb9250d1681725fac307d5092dd9e076579","urls":["bzz-raw://e505c9632a88c2b5d978c4b40e87ea89e6c67e389ac1221cb02e849b77c0811e","dweb:/ipfs/QmTTDpHSo8PxbXdT7NqrcGWL6Fy16K1bh6fr16gD1CWA5d"]},"/Users/simondos/projects/micobo-security-token/contracts/interfaces/IPausable.sol":{"keccak256":"0x68f3c580172e231c91aaf3e42df7caf2413a45abb09d5b852f573cee52b6aef5","urls":["bzz-raw://1b0fa8f1dfa826630fc0217c8cd753c6ef9889b409e407850d17b728438fd109","dweb:/ipfs/QmWi1XgX6tBSN8ogg6gqHC5nhyhvimUbTGVeCgLRdzP6Jt"]},"/Users/simondos/projects/micobo-security-token/contracts/storage/SecurityTokenStorage.sol":{"keccak256":"0x87d81e379b3279bdf199fa1ac41d8b44e41b7e3bd4409d07a401f8461a1e6c7f","urls":["bzz-raw://7e9923090f165b8df0a1ce8ce70fa75f145fc40f03116318fd688a94bb75548b","dweb:/ipfs/QmRb7RvfntDs9k7t1AziukeitvL6qCTMvF3b5PHuhzup5k"]},"/Users/simondos/projects/micobo-security-token/contracts/token/Administrable.sol":{"keccak256":"0x3502890328a4452cd6e9982392a506d1646e067410b6cb1bcb8ae3192614d0d6","urls":["bzz-raw://eddb1844353a9ecf20bb5468b855d1262fd357c16833b83aaab03c418bbd0e65","dweb:/ipfs/QmZ9u5ixgD7rraVQLcpuxPruTo7vvxKkeKnxybSnhVwm9E"]},"/Users/simondos/projects/micobo-security-token/contracts/token/Constrainable.sol":{"keccak256":"0xd55e8e7bda521149868d134d37c2cacbb7a78d51a6b65e332754db687d25db60","urls":["bzz-raw://ea6e505c718e69ad2f51437466c619bb62dafc43bc6e847d1b460c54b40cea43","dweb:/ipfs/QmaARtco4edGQEm7GCEsWCakZaUtv9ihYMw785iJCnQiwJ"]},"/Users/simondos/projects/micobo-security-token/contracts/token/ERC1400Capped.sol":{"keccak256":"0xa4e04322c3926f43c64c4c919db8e58a5996ff7c993b145acc3085db3a615ab5","urls":["bzz-raw://cc74c0bc295363e0105ec5e207233b79cf01a8e0f71a3e4081f5df0ce1d41e6a","dweb:/ipfs/QmberRcS8vZkTPvZobMggdtcuJAa2wG6HyQ4VULaArQQmR"]},"/Users/simondos/projects/micobo-security-token/contracts/token/ERC1400ERC20.sol":{"keccak256":"0x1d1af24488d766dff197df9965ec79f30278c1ee642aeff50973f739b8fe64aa","urls":["bzz-raw://8d6f4a8c7513fef4f07a20bed768e2f897efd4c5db9b0380324c5057eeb2a51d","dweb:/ipfs/QmXAvon5R46L6oi2tcgc91nRnrx8GsJCA9bp6ZW5SdCMYB"]},"/Users/simondos/projects/micobo-security-token/contracts/token/ERC1400Partition.sol":{"keccak256":"0x0ac888f6f5084a3c61875740b4678f8f3c313e53e12d0deaac7e78f08e6e5646","urls":["bzz-raw://fe7bf9e73388d89766a4aec5a78fb9d48459b9bb6bd749bfca7d63266b5be445","dweb:/ipfs/QmdHCmc1ZYHGiQqjieMovge8RWTa4n3Nk7QvYbL9JXTrzj"]},"/Users/simondos/projects/micobo-security-token/contracts/token/ERC1400Raw.sol":{"keccak256":"0xb3cc7ca2cfc1c3bc77bed2881f41edd90678ce3407b7562ad26add567d583c67","urls":["bzz-raw://35d909e60c16ade8ef55b7b340323471fddf4c4cb59adc2ac2acf82f9edb5aa1","dweb:/ipfs/QmQtTGhKNnXGoAm9prLzXLXA5Yx7MzrFJwCarA73hyjMCT"]},"/Users/simondos/projects/micobo-security-token/contracts/token/Ownable.sol":{"keccak256":"0x5737da72c167e0739ec663658ca93ba3e3159cbc391a483d48e1a3f3185970c3","urls":["bzz-raw://a22a0a43a615be9436e6be59ce997b0cbb35b062a7f254f0bd5c1731eedf9510","dweb:/ipfs/QmPX3JA5sfCxtaPHUvL6CYnPR2N1hp3nEzgmAtpDgcxgXp"]},"/Users/simondos/projects/micobo-security-token/contracts/token/Pausable.sol":{"keccak256":"0x8757c542d21bb83eb48c868f30cbe8aa2a5291a873504b09ccaf62050b6482b7","urls":["bzz-raw://714da630d6e75cab44ff67a7117f9707abb751c55a35c7dff106274773b8b061","dweb:/ipfs/QmNd5t2ctXQ4ficJiocNDC7YfyJh9L18zEc2YW2NUkjtEd"]},"/Users/simondos/projects/micobo-security-token/contracts/token/SecurityToken.sol":{"keccak256":"0xb38f464ac01c19837b31d3f2e689b375887f436aa7d0d0b3d7ea0ae35750671e","urls":["bzz-raw://e06e24180e0f21d2822940f8ddd7a81667c6e6ba614c52fabd5824bbc6d357e2","dweb:/ipfs/QmT9syfKRo8Gtz3nanzSTaEKWR1UovaT4JsCfTJfLGDy8h"]},"/Users/simondos/projects/micobo-security-token/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xc50526f2147a1be9c110ac29cc696e5f41576de5d7840a51431cbbbc61e12d65","urls":["bzz-raw://2535731dfa42614834f3626a7a6aab03fbc696316b61b5567f125a20efdc0d1b","dweb:/ipfs/QmW2SBC2ccAvPNF29cjb5AtjEogpqLK1PLSYWEz4KECdep"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/contracts/GSN/IRelayHub.sol":{"keccak256":"0x4f248f54ded39020f8ab9b1e79368b8d30b4ddacb6ae0ec42b3606cb65b080da","urls":["bzz-raw://fca1e748ad45db685835e9cff6604443df4ebf14d073c01a6934f2e42529f809","dweb:/ipfs/QmdhutgC39sLvJDfWEheDy1t1PktfHYyyJ5XxpboU195pp"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/contracts/GSN/IRelayRecipient.sol":{"keccak256":"0x66a2a0460f923db138ee3239232a1ce81d9cab330d82360c3bd4fba478b23eaf","urls":["bzz-raw://ca432cc3ad73336992171241877b0ca3d036978ceef1ddd7285cfc78d385440f","dweb:/ipfs/QmbgYz8GCAxav1B7tkSr7rCaU2QKEyqSjZ29QLDqc1pz1h"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"/Users/simondos/projects/micobo-security-token/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol":{"keccak256":"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721","urls":["bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f","dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7"]}},"version":1},"version":1,"checkPoints":[]}