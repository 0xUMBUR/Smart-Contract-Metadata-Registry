{"address":"0x4A13d1CE3683734193F284d1E65F978060AD05d6","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"secondary_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"claimingTokenAdded","type":"event"},{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"amountLockUp","outputs":[{"internalType":"uint256","name":"minimum","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenForClaiming","type":"address"}],"name":"claimingTokenAdd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimingTokensView","outputs":[{"internalType":"address[]","name":"list","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimingTokensWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"result","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxGasPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"isDonate","type":"bool"}],"name":"receiveERC20Token2","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gasPrice","type":"uint256"}],"name":"setMaxGasPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"whitelistAdd","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"whitelistRemove","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"amountLockUp(address)":{"params":{"recipient":"recipient's address"}},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"claim()":{"details":"getting own tokens instead claimed tokens"},"claimingTokensView()":{"returns":{"list":"list of tokens added for claiming"}},"constructor":{"params":{"name":"Token name","secondary_token":"SecondaryToken address instead ETH ","symbol":"Token symbol"}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isWhitelisted(address)":{"params":{"addr":"address"},"returns":{"result":"return true if exist "}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"receiveERC20Token2(bool)":{"details":"getting token2 and mint instead own tokens proceeded if user set allowance in secondary_token contract","params":{"isDonate":"if set true, contract will not send tokens"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMaxGasPrice(uint256)":{"params":{"gasPrice":"maximum Gas Price(in wei) used for transaction"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"params":{"amount":"amount","recipient":"recipient"},"returns":{"_0":"success"}},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"whitelistAdd(address[])":{"details":"available to Owner only Requirements: - `_addresses` cannot contains the zero address. ","params":{"_addresses":"list of addresses which will be added to whitelist"},"returns":{"success":"return true in any cases"}},"whitelistRemove(address[])":{"details":"Available to Owner only Requirements: - `_addresses` cannot contains the zero address. ","params":{"_addresses":"list of addresses which will be removed from whitelist"},"returns":{"success":"return true in any cases "}}},"version":1},"userdoc":{"kind":"user","methods":{"amountLockUp(address)":{"notice":"Do the same as getAmountLockUp but without gas spent (without cleanup expired claim)"},"isWhitelisted(address)":{"notice":"Checks if a address already exists in a whitelist "},"setMaxGasPrice(uint256)":{"notice":"Setting maximum Gas Price"},"transfer(address,uint256)":{"notice":"Overrode {ERC20-transfer} method. There are added some features: 1. added validation of restriction limit to transfer 2. if recipient is self contract than we will       get tokens, burn it and transfer eth to sender (if whitelisted)      In all over cases its simple ERC20 Transfer "},"whitelistAdd(address[])":{"notice":"Adding address list to whitelist  "},"whitelistRemove(address[])":{"notice":"Removing address list from whitelist "}},"version":1}},"settings":{"compilationTarget":{"localhost/contracts/UtilityToken.sol":"UtilityToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"localhost/contracts/Claimed.sol":{"keccak256":"0xaaf54064674f55b559eb32989cf42cf5af6806055425499f15e37bf4f8c62389","urls":["bzz-raw://12b6c2deff6f452beff4f40516ebcdadd144aca564b0c559f1544f57e7606c52","dweb:/ipfs/QmYphRGydSGhPc5dJMxrLzb8DNrba6V1it4wsUHGTHHB6e"]},"localhost/contracts/CommonConstants.sol":{"keccak256":"0xb59eb6798f23d99cca3f93a93c45d251ebbc3b4adb818d94d3d0a93eb08d7fb4","urls":["bzz-raw://378af4016c8d11c88b68fb284169ac33a481cbeab261fb3270087b23dd689351","dweb:/ipfs/QmfNqAJy492oe4HwUzeKuo2BuJwZ9TVe1e57FbJ9XLpB4M"]},"localhost/contracts/UtilityBase.sol":{"keccak256":"0xa7a3e63855fa1707140797ff3497ec3408f65771357c9255ba9bf1a56be1d96d","urls":["bzz-raw://286309c6b33487c90d3c737fd889bb2a5baec1509366e179a0d075402f54965b","dweb:/ipfs/QmT6xBdMfWkjHSej4Pk4LxFQuAZD899JnwYsuG2zJL7zkt"]},"localhost/contracts/UtilityToken.sol":{"keccak256":"0x2af2fdfb579c9aadb2d9acd50bebb35e3c5311cf666efeb0eecf20ff1c459f5f","urls":["bzz-raw://245304fbac090960b1e3f4c138db794de24aa267441c7786ca03c792cc3e867f","dweb:/ipfs/QmS9ZRPx6EKFzWBSKv5JxEx9aoXTjnhFkRFDStvwCkNs6Y"]},"localhost/contracts/Whitelist.sol":{"keccak256":"0xc0aa17e59e0b9166792cd812419c6df4aa9ba01227462335944f07208d5d2730","urls":["bzz-raw://6c7af9accf1d2c1873fce7c43dfb6d0a8085f9d204497f6eaf714cca7d800fda","dweb:/ipfs/QmQaeXjaS7oAApk1bfWuJ3pC88JwGxJLcqynxDPQaffsgz"]},"localhost/contracts/openzeppelin-contracts/contracts/GSN/Context.sol":{"keccak256":"0xd9e1cdbea4cf7c51ac26f5782db0fb3d78c1b37e090547e83aef497a727a18f5","license":"MIT","urls":["bzz-raw://5017e004334d7579774232e18f739ee9eb39438d03c49a9451a35e315c28761b","dweb:/ipfs/QmNb8Q8C6WLgtWqCE7iL5T1UN52Q6QsE7ZtVc6ppcvViXe"]},"localhost/contracts/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0x78d7d9211513b60f81db3089fffbc1ce5c3d87d021d54c9c41a909000ba8bbc4","license":"MIT","urls":["bzz-raw://6c0471235adc538bfe1054546ff5136cf463a0c139b6c38e6aafeeb4a2a00c58","dweb:/ipfs/QmdHm68MUvSaVCbJkDpxyyeMJoG6upDMjBKgt91HZHW71G"]},"localhost/contracts/openzeppelin-contracts/contracts/math/SafeMath.sol":{"keccak256":"0x8d890f7a794b66b8b3ab54779603c254f85ee0d436dd4a17b3543c6629b726f8","license":"MIT","urls":["bzz-raw://887bb68104c8f862a66939b192a85e79564bed9bbe72cda6240fd89bbea642fd","dweb:/ipfs/QmbC56SFqW7UCx26RfPFWPiEXnQTJXSBA5r4SrojRMHqeM"]},"localhost/contracts/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x61dd0dbc72fa0f6f895cd249955be7bfdd74503ab448a129a6d7448ce0ff8d04","license":"MIT","urls":["bzz-raw://0fd95018b1363fc78bc916741461f12d722f5839e5dc4d7609a7b495eeba47ed","dweb:/ipfs/QmZc7XWxwXvVEzipSjuJq9Gm8ea7iY2KbTwupT8G12eVZG"]},"localhost/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x979000648732c91f60536a23950b83e11a1f47204cb280cf2b8dc0a1280258da","license":"MIT","urls":["bzz-raw://880bda603cd4c34690385db83633dd3918de7a96d9361089d9329ca81ef4e273","dweb:/ipfs/QmRZqTMmCpNYqCcEsbMMtvF6NYKDarNnNbJseZ2LLDrevA"]},"localhost/contracts/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xb45dc9b431fd17029e917725b523f7302f31d3501c11f9bf4f985d2b088d36d3","license":"MIT","urls":["bzz-raw://5e276244483cce4d0765d5cd229141a3aa98761e0034736dcd7887e5235acb29","dweb:/ipfs/QmTrizLJ2MCYuaG8YPwg9umQ3XvCd3xjrwkzjcjqvSxYH4"]},"localhost/contracts/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xa5b31f4257f2a2f1e71d4c5864ce467ca7342206857cb643b9f1acaa126c3cc3","license":"MIT","urls":["bzz-raw://45a26a4d6d7375e3004ac308ee67392153fe3ca0448dd8e87d000f1614d0eb33","dweb:/ipfs/QmRXyDPpPZkLjaTmhNPuDFys4Md8sFU4d6JztjitUWTWKC"]}},"version":1},"version":1,"checkPoints":[]}