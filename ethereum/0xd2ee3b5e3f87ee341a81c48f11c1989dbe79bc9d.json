{"address":"0xD2EE3B5E3f87EE341a81C48f11c1989Dbe79Bc9D","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_parAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"action","type":"string"},{"indexed":false,"internalType":"bool","name":"pauseState","type":"bool"}],"name":"ActionPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract FRToken","name":"rToken","type":"address"},{"indexed":false,"internalType":"string","name":"action","type":"string"},{"indexed":false,"internalType":"bool","name":"pauseState","type":"bool"}],"name":"ActionPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"newSpeed","type":"uint256"}],"name":"ContributorParSpeedUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract FRToken","name":"rToken","type":"address"},{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"parDelta","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"parBorrowIndex","type":"uint256"}],"name":"DistributedBorrowerPar","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract FRToken","name":"rToken","type":"address"},{"indexed":true,"internalType":"address","name":"supplier","type":"address"},{"indexed":false,"internalType":"uint256","name":"parDelta","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"parSupplyIndex","type":"uint256"}],"name":"DistributedSupplierPar","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"error","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"info","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"detail","type":"uint256"}],"name":"Failure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract FRToken","name":"rToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"newBorrowCap","type":"uint256"}],"name":"NewBorrowCap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldBorrowCapGuardian","type":"address"},{"indexed":false,"internalType":"address","name":"newBorrowCapGuardian","type":"address"}],"name":"NewBorrowCapGuardian","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldCloseFactorMantissa","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newCloseFactorMantissa","type":"uint256"}],"name":"NewCloseFactor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldLiquidationIncentiveMantissa","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newLiquidationIncentiveMantissa","type":"uint256"}],"name":"NewLiquidationIncentive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldPauseGuardian","type":"address"},{"indexed":false,"internalType":"address","name":"newPauseGuardian","type":"address"}],"name":"NewPauseGuardian","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract PriceOracle","name":"oldPriceOracle","type":"address"},{"indexed":false,"internalType":"contract PriceOracle","name":"newPriceOracle","type":"address"}],"name":"NewPriceOracle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ParGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract FRToken","name":"rToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"newSpeed","type":"uint256"}],"name":"ParSpeedUpdated","type":"event"},{"inputs":[{"internalType":"contract Unitroller","name":"unitroller","type":"address"}],"name":"_become","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_borrowGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"_grantPar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_mintGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newBorrowCapGuardian","type":"address"}],"name":"_setBorrowCapGuardian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract FRToken","name":"rToken","type":"address"},{"internalType":"bool","name":"state","type":"bool"}],"name":"_setBorrowPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newCloseFactorMantissa","type":"uint256"}],"name":"_setCloseFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contributor","type":"address"},{"internalType":"uint256","name":"parSpeed","type":"uint256"}],"name":"_setContributorParSpeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLiquidationIncentiveMantissa","type":"uint256"}],"name":"_setLiquidationIncentive","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract FRToken[]","name":"rTokens","type":"address[]"},{"internalType":"uint256[]","name":"newBorrowCaps","type":"uint256[]"}],"name":"_setMarketBorrowCaps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract FRToken","name":"rToken","type":"address"},{"internalType":"bool","name":"state","type":"bool"}],"name":"_setMintPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract FRToken","name":"rToken","type":"address"},{"internalType":"uint256","name":"parSpeed","type":"uint256"}],"name":"_setParSpeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPauseGuardian","type":"address"}],"name":"_setPauseGuardian","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract PriceOracle","name":"newOracle","type":"address"}],"name":"_setPriceOracle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract PriceStorage","name":"newPriceStorage","type":"address"}],"name":"_setPriceStorage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"_setSeizePaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"_setTransferPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"borrowAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"borrowCapGuardian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"borrowCaps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"borrowGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"borrowVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"holders","type":"address[]"},{"internalType":"contract FRToken[]","name":"rTokens","type":"address[]"},{"internalType":"bool","name":"borrowers","type":"bool"},{"internalType":"bool","name":"suppliers","type":"bool"}],"name":"claimPar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"contract FRToken[]","name":"rTokens","type":"address[]"}],"name":"claimPar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"}],"name":"claimPar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeFactorMantissa","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"controllerImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"controllerMembershipAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAccountLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"rTokenModify","type":"address"},{"internalType":"uint256","name":"redeemTokens","type":"uint256"},{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"getHypotheticalAccountLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"}],"name":"getOracleUnderlyingPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isController","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastContributorBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rTokenBorrowed","type":"address"},{"internalType":"address","name":"rTokenCollateral","type":"address"},{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"repayAmount","type":"uint256"}],"name":"liquidateBorrowAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rTokenBorrowed","type":"address"},{"internalType":"address","name":"rTokenCollateral","type":"address"},{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"actualRepayAmount","type":"uint256"},{"internalType":"uint256","name":"seizeTokens","type":"uint256"}],"name":"liquidateBorrowVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rTokenBorrowed","type":"address"},{"internalType":"address","name":"rTokenCollateral","type":"address"},{"internalType":"uint256","name":"actualRepayAmount","type":"uint256"}],"name":"liquidateCalculateSeizeTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidationIncentiveMantissa","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"mintAmount","type":"uint256"}],"name":"mintAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"actualMintAmount","type":"uint256"},{"internalType":"uint256","name":"mintTokens","type":"uint256"}],"name":"mintVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract PriceOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"parAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"parAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"parBorrowState","outputs":[{"internalType":"uint224","name":"index","type":"uint224"},{"internalType":"uint32","name":"block","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"parBorrowerIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"parContributorSpeeds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"parInitialIndex","outputs":[{"internalType":"uint224","name":"","type":"uint224"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"parRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"parSpeeds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"parSupplierIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"parSupplyState","outputs":[{"internalType":"uint224","name":"index","type":"uint224"},{"internalType":"uint32","name":"block","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauseGuardian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingControllerImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceStorage","outputs":[{"internalType":"contract PriceStorage","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"redeemer","type":"address"},{"internalType":"uint256","name":"redeemTokens","type":"uint256"}],"name":"redeemAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"redeemer","type":"address"},{"internalType":"uint256","name":"redeemTokens","type":"uint256"}],"name":"redeemAllowedControllerMembership","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"redeemer","type":"address"},{"internalType":"uint256","name":"redeemAmount","type":"uint256"},{"internalType":"uint256","name":"redeemTokens","type":"uint256"}],"name":"redeemVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"repayAmount","type":"uint256"}],"name":"repayBorrowAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"actualRepayAmount","type":"uint256"},{"internalType":"uint256","name":"borrowerIndex","type":"uint256"}],"name":"repayBorrowVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rTokenCollateral","type":"address"},{"internalType":"address","name":"rTokenBorrowed","type":"address"},{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"seizeTokens","type":"uint256"}],"name":"seizeAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seizeGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rTokenCollateral","type":"address"},{"internalType":"address","name":"rTokenBorrowed","type":"address"},{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"address","name":"borrower","type":"address"},{"internalType":"uint256","name":"seizeTokens","type":"uint256"}],"name":"seizeVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_controllerAddress","type":"address"}],"name":"setControllerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_controllerMembershipAddress","type":"address"}],"name":"setControllerMembershipAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"transferTokens","type":"uint256"}],"name":"transferAllowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferGuardianPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"rToken","type":"address"},{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"transferTokens","type":"uint256"}],"name":"transferVerify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contributor","type":"address"}],"name":"updateContributorRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Blaize","kind":"dev","methods":{"_grantPar(address,uint256)":{"details":"Note: If there is not enough COMP, we do not perform the transfer all.","params":{"amount":"The amount of COMP to (possibly) transfer","recipient":"The address of the recipient to transfer COMP to"}},"_setBorrowCapGuardian(address)":{"params":{"newBorrowCapGuardian":"The address of the new Borrow Cap Guardian"}},"_setCloseFactor(uint256)":{"details":"Admin function to set closeFactor","params":{"newCloseFactorMantissa":"New close factor, scaled by 1e18"},"returns":{"_0":"uint 0=success, otherwise a failure"}},"_setContributorParSpeed(address,uint256)":{"params":{"contributor":"The contributor whose COMP speed to update","parSpeed":"New COMP speed for contributor"}},"_setLiquidationIncentive(uint256)":{"details":"Admin function to set liquidationIncentive","params":{"newLiquidationIncentiveMantissa":"New liquidationIncentive scaled by 1e18"},"returns":{"_0":"uint 0=success, otherwise a failure. (See ErrorReporter for details)"}},"_setMarketBorrowCaps(address[],uint256[])":{"details":"Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.","params":{"newBorrowCaps":"The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing.","rTokens":"The addresses of the markets (tokens) to change the borrow caps for"}},"_setParSpeed(address,uint256)":{"params":{"parSpeed":"New COMP speed for market","rToken":"The market whose COMP speed to update"}},"_setPauseGuardian(address)":{"params":{"newPauseGuardian":"The address of the new Pause Guardian"},"returns":{"_0":"uint 0=success, otherwise a failure. (See enum Error for details)"}},"_setPriceOracle(address)":{"details":"Admin function to set a new price oracle","returns":{"_0":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"}},"borrowAllowed(address,address,uint256)":{"params":{"borrowAmount":"The amount of underlying the account would borrow","borrower":"The account which would borrow the asset","rToken":"The market to verify the borrow against"},"returns":{"_0":"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"}},"borrowVerify(address,address,uint256)":{"params":{"borrowAmount":"The amount of the underlying asset requested to borrow","borrower":"The address borrowing the underlying","rToken":"Asset whose underlying is being borrowed"}},"claimPar(address)":{"params":{"holder":"The address to claim PAR for"}},"claimPar(address,address[])":{"params":{"holder":"The address to claim COMP for","rTokens":"The list of markets to claim COMP in"}},"claimPar(address[],address[],bool,bool)":{"params":{"borrowers":"Whether or not to claim COMP earned by borrowing","holders":"The addresses to claim COMP for","rTokens":"The list of markets to claim COMP in","suppliers":"Whether or not to claim COMP earned by supplying"}},"getAccountLiquidity(address)":{"returns":{"_0":"(possible error code (semi-opaque), account liquidity in excess of collateral requirements,          account shortfall below collateral requirements)"}},"getHypotheticalAccountLiquidity(address,address,uint256,uint256)":{"params":{"account":"The account to determine liquidity for","borrowAmount":"The amount of underlying to hypothetically borrow","rTokenModify":"The market to hypothetically redeem/borrow in","redeemTokens":"The number of tokens to hypothetically redeem"},"returns":{"_0":"(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,          hypothetical account shortfall below collateral requirements)"}},"liquidateBorrowAllowed(address,address,address,address,uint256)":{"params":{"borrower":"The address of the borrower","liquidator":"The address repaying the borrow and seizing the collateral","rTokenBorrowed":"Asset which was borrowed by the borrower","rTokenCollateral":"Asset which was used as collateral and will be seized","repayAmount":"The amount of underlying being repaid"}},"liquidateBorrowVerify(address,address,address,address,uint256,uint256)":{"params":{"actualRepayAmount":"The amount of underlying being repaid","borrower":"The address of the borrower","liquidator":"The address repaying the borrow and seizing the collateral","rTokenBorrowed":"Asset which was borrowed by the borrower","rTokenCollateral":"Asset which was used as collateral and will be seized"}},"liquidateCalculateSeizeTokens(address,address,uint256)":{"details":"Used in liquidation (called in rToken.liquidateBorrowFresh)","params":{"actualRepayAmount":"The amount of rTokenBorrowed underlying to convert into rTokenCollateral tokens","rTokenBorrowed":"The address of the borrowed rToken","rTokenCollateral":"The address of the collateral rToken"},"returns":{"_0":"(errorCode, number of rTokenCollateral tokens to be seized in a liquidation)"}},"mintAllowed(address,address,uint256)":{"params":{"mintAmount":"The amount of underlying being supplied to the market for tokens","minter":"The account which would get the minted tokens","rToken":"The market to verify the mint against"},"returns":{"_0":"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"}},"mintVerify(address,address,uint256,uint256)":{"params":{"actualMintAmount":"The amount of the underlying asset being minted","mintTokens":"The number of tokens being minted","minter":"The address minting the tokens","rToken":"Asset being minted"}},"redeemAllowed(address,address,uint256)":{"params":{"rToken":"The market to verify the redeem against","redeemTokens":"The number of rTokens for the underlying asset in the market","redeemer":"The account which would redeem the tokens"},"returns":{"_0":"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"}},"redeemVerify(address,address,uint256,uint256)":{"params":{"rToken":"Asset being redeemed","redeemAmount":"The amount of the underlying asset being redeemed","redeemTokens":"The number of tokens being redeemed","redeemer":"The address redeeming the tokens"}},"repayBorrowAllowed(address,address,address,uint256)":{"params":{"borrower":"The account which would borrowed the asset","payer":"The account which would repay the asset","rToken":"The market to verify the repay against","repayAmount":"The amount of the underlying asset the account would repay"},"returns":{"_0":"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"}},"repayBorrowVerify(address,address,address,uint256,uint256)":{"params":{"actualRepayAmount":"The amount of underlying being repaid","borrower":"The address of the borrower","payer":"The address repaying the borrow","rToken":"Asset being repaid"}},"seizeAllowed(address,address,address,address,uint256)":{"params":{"borrower":"The address of the borrower","liquidator":"The address repaying the borrow and seizing the collateral","rTokenBorrowed":"Asset which was borrowed by the borrower","rTokenCollateral":"Asset which was used as collateral and will be seized","seizeTokens":"The number of collateral tokens to seize"}},"seizeVerify(address,address,address,address,uint256)":{"params":{"borrower":"The address of the borrower","liquidator":"The address repaying the borrow and seizing the collateral","rTokenBorrowed":"Asset which was borrowed by the borrower","rTokenCollateral":"Asset which was used as collateral and will be seized","seizeTokens":"The number of collateral tokens to seize"}},"transferAllowed(address,address,address,uint256)":{"params":{"dst":"The account which receives the tokens","rToken":"The market to verify the transfer against","src":"The account which sources the tokens","transferTokens":"The number of rTokens to transfer"},"returns":{"_0":"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"}},"transferVerify(address,address,address,uint256)":{"params":{"dst":"The account which receives the tokens","rToken":"Asset being transferred","src":"The account which sources the tokens","transferTokens":"The number of rTokens to transfer"}},"updateContributorRewards(address)":{"params":{"contributor":"The address to calculate contributor rewards for"}}},"title":"ParValue's Controller Contract","version":1},"userdoc":{"events":{"ActionPaused(address,string,bool)":{"notice":"Emitted when an action is paused on a market"},"ActionPaused(string,bool)":{"notice":"Emitted when an action is paused globally"},"ContributorParSpeedUpdated(address,uint256)":{"notice":"Emitted when a new COMP speed is set for a contributor"},"DistributedBorrowerPar(address,address,uint256,uint256)":{"notice":"Emitted when COMP is distributed to a borrower"},"DistributedSupplierPar(address,address,uint256,uint256)":{"notice":"Emitted when COMP is distributed to a supplier"},"NewBorrowCap(address,uint256)":{"notice":"Emitted when borrow cap for a rToken is changed"},"NewBorrowCapGuardian(address,address)":{"notice":"Emitted when borrow cap guardian is changed"},"NewCloseFactor(uint256,uint256)":{"notice":"Emitted when close factor is changed by admin"},"NewLiquidationIncentive(uint256,uint256)":{"notice":"Emitted when liquidation incentive is changed by admin"},"NewPauseGuardian(address,address)":{"notice":"Emitted when pause guardian is changed"},"NewPriceOracle(address,address)":{"notice":"Emitted when price oracle is changed"},"ParGranted(address,uint256)":{"notice":"Emitted when COMP is granted by admin"},"ParSpeedUpdated(address,uint256)":{"notice":"Emitted when a new COMP speed is calculated for a market"}},"kind":"user","methods":{"_grantPar(address,uint256)":{"notice":"Transfer COMP to the recipient"},"_setBorrowCapGuardian(address)":{"notice":"Admin function to change the Borrow Cap Guardian"},"_setCloseFactor(uint256)":{"notice":"Sets the closeFactor used when liquidating borrows"},"_setContributorParSpeed(address,uint256)":{"notice":"Set COMP speed for a single contributor"},"_setLiquidationIncentive(uint256)":{"notice":"Sets liquidationIncentive"},"_setMarketBorrowCaps(address[],uint256[])":{"notice":"Set the given borrow caps for the given rToken markets. Borrowing that brings total borrows to or above borrow cap will revert."},"_setParSpeed(address,uint256)":{"notice":"Set COMP speed for a single market"},"_setPauseGuardian(address)":{"notice":"Admin function to change the Pause Guardian"},"_setPriceOracle(address)":{"notice":"Sets a new price oracle for the controller"},"admin()":{"notice":"Administrator for this contract"},"borrowAllowed(address,address,uint256)":{"notice":"Checks if the account should be allowed to borrow the underlying asset of the given market"},"borrowVerify(address,address,uint256)":{"notice":"Validates borrow and reverts on REJECTION_IX. May emit logs."},"claimPar(address)":{"notice":"Claim all the par accrued by holder in all markets"},"claimPar(address,address[])":{"notice":"Claim all the par accrued by holder in the specified markets"},"claimPar(address[],address[],bool,bool)":{"notice":"Claim all par accrued by the holders"},"closeFactorMantissa()":{"notice":"Multiplier used to calculate the maximum repayAmount when liquidating a borrow"},"controllerImplementation()":{"notice":"Active brains of Unitroller"},"getAccountLiquidity(address)":{"notice":"Determine the current account liquidity wrt collateral requirements"},"getHypotheticalAccountLiquidity(address,address,uint256,uint256)":{"notice":"Determine what the account liquidity would be if the given amounts were redeemed/borrowed"},"isController()":{"notice":"Indicator that this is a Controller contract (for inspection)"},"lastContributorBlock(address)":{"notice":"Last block at which a contributor's PAR rewards have been allocated"},"liquidateBorrowAllowed(address,address,address,address,uint256)":{"notice":"Checks if the liquidation should be allowed to occur"},"liquidateBorrowVerify(address,address,address,address,uint256,uint256)":{"notice":"Validates liquidateBorrow and reverts on REJECTION_IX. May emit logs."},"liquidateCalculateSeizeTokens(address,address,uint256)":{"notice":"Calculate number of tokens of collateral asset to seize given an underlying amount"},"liquidationIncentiveMantissa()":{"notice":"Multiplier representing the discount on collateral that a liquidator receives"},"maxAssets()":{"notice":"Max number of assets a single account can participate in (borrow or use as collateral)"},"mintAllowed(address,address,uint256)":{"notice":"Checks if the account should be allowed to mint tokens in the given market"},"mintVerify(address,address,uint256,uint256)":{"notice":"Validates mint and reverts on REJECTION_IX. May emit logs."},"oracle()":{"notice":"Oracle which gives the price of any given asset"},"parAccrued(address)":{"notice":"The PAR accrued but not yet transferred to each user"},"parBorrowState(address)":{"notice":"The PAR market borrow state for each market"},"parBorrowerIndex(address,address)":{"notice":"The PAR borrow index for each market for each borrower as of the last time they accrued PAR"},"parContributorSpeeds(address)":{"notice":"The portion of PAR that each contributor receives per block"},"parInitialIndex()":{"notice":"The initial COMP index for a market"},"parRate()":{"notice":"The rate at which the flywheel distributes PAR, per block"},"parSpeeds(address)":{"notice":"The portion of parRate that each market currently receives"},"parSupplierIndex(address,address)":{"notice":"The PAR borrow index for each market for each supplier as of the last time they accrued PAR"},"parSupplyState(address)":{"notice":"The PAR market supply state for each market"},"pauseGuardian()":{"notice":"The Pause Guardian can pause certain actions as a safety mechanism.  Actions which allow users to remove their own assets cannot be paused.  Liquidation / seizing / transfer can only be paused globally, not by market."},"pendingAdmin()":{"notice":"Pending administrator for this contract"},"pendingControllerImplementation()":{"notice":"Pending brains of Unitroller"},"redeemAllowed(address,address,uint256)":{"notice":"Checks if the account should be allowed to redeem tokens in the given market"},"redeemVerify(address,address,uint256,uint256)":{"notice":"Validates redeem and reverts on REJECTION_IX. May emit logs."},"repayBorrowAllowed(address,address,address,uint256)":{"notice":"Checks if the account should be allowed to repay a borrow in the given market"},"repayBorrowVerify(address,address,address,uint256,uint256)":{"notice":"Validates repayBorrow and reverts on REJECTION_IX. May emit logs."},"seizeAllowed(address,address,address,address,uint256)":{"notice":"Checks if the seizing of assets should be allowed to occur"},"seizeVerify(address,address,address,address,uint256)":{"notice":"Validates seize and reverts on REJECTION_IX. May emit logs."},"transferAllowed(address,address,address,uint256)":{"notice":"Checks if the account should be allowed to transfer tokens in the given market"},"transferVerify(address,address,address,uint256)":{"notice":"Validates transfer and reverts on REJECTION_IX. May emit logs."},"updateContributorRewards(address)":{"notice":"Calculate additional accrued COMP for a contributor since last accrual"}},"version":1}},"settings":{"compilationTarget":{"contracts/FController.sol":"FController"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":800},"remappings":[]},"sources":{"contracts/CarefulMath.sol":{"keccak256":"0x0697c855f3ab007a2463d8cbcfb3e4c741ce03a404ab6e12d664f84e53700ac4","license":"AGPL V3.0","urls":["bzz-raw://b2496009240872add7af70c2d6352fa2327537295f7c2becc8456ee1e68f126b","dweb:/ipfs/QmNfhNETo44tL4bBviCtw49oJiBp8cUR2cziXf5Hi97ArZ"]},"contracts/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","license":"MIT","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"]},"contracts/ControllerStorage.sol":{"keccak256":"0x3c618ae6eec53cf7d5abeb6ce3965b81392d6e7d2cd0138484adec26f1c9c5b1","license":"AGPL V3.0","urls":["bzz-raw://540589bce225586b914ec65976db04a14249594acfa308b3acd2b91706dd5b49","dweb:/ipfs/QmSQbdMwddoArTeJt1GgYFAwzEi3QzmsFqPC2C2GGdTjVr"]},"contracts/ERC20.sol":{"keccak256":"0xa2cc005cfc8f59bff1faea5460a04d10bb63c1ef296bbab0653f79539c16c36f","license":"MIT","urls":["bzz-raw://afe941c6539a2f25b7fc220e1c3a394b2465a08841acca8e3b31d32e0580f13d","dweb:/ipfs/QmQSw6WAbLcwsn7dFY9P9D4VUXnRm7D3Lm1MNcCseEwT5Q"]},"contracts/ERC20Burnable.sol":{"keccak256":"0x23360f1f6154fa82f57435b8d92cb4d4be64d4830cf6576fc15f7c70292a9b63","license":"MIT","urls":["bzz-raw://285e86d5ec62431fdd79c6ef4b7ad76f12ec0eff4852442c4eb16bad6e93d059","dweb:/ipfs/QmP7H1u1UR6hZyeY8rn5icjp1XaM4PeBCzWUT8mxMFaxbK"]},"contracts/ErrorReporter.sol":{"keccak256":"0xf7f45832ccc74523264f1e8a2980bb8ff33b2d4ae03021c52f2191f47301ab84","license":"AGPL V3.0","urls":["bzz-raw://637fe51ff70d0df8cd027d7bed8016012171bbc75c5289edd0a39fb499abeff8","dweb:/ipfs/QmXDCCGtUXdEJx1jFb5BX1tTBfM5VHJ1sYCZnLB4HupeUs"]},"contracts/Exponential.sol":{"keccak256":"0xda303ed82dd6bf8ba4350209b2c1dcc9c167c9e597147ac13e5147c785fd58ce","license":"AGPL V3.0","urls":["bzz-raw://f2b4c30adeaba5e46c2e229c85be2bc2e2e65d3415312d77a38b55bdaafdd4cd","dweb:/ipfs/Qmdc2CDJAwKp9nu39xarGbY22SBxtrCF1zQYzkzvHjiGZk"]},"contracts/ExponentialNoError.sol":{"keccak256":"0x7f899cba3b816efda3b8874d21825d71e214ea82b3329a8a8dba96129787d3ef","license":"AGPL V3.0","urls":["bzz-raw://bfb2c0c580c769b75e5cc853ec668e1a5f7b6cda807ad431f9b64d350b75977c","dweb:/ipfs/QmSwXbVDCZqLsGXGTFSS8PWkV127j4A68Qqb4RSoZPY54d"]},"contracts/FController.sol":{"keccak256":"0x2fcb993d9fa36006fcad0014ae3e5fa0be6c10fd7a6b536b379c75e76817a886","license":"AGPL V3.0","urls":["bzz-raw://0f0ab15a1f33ee649b4bdad51e642e7c6e8aaf66da39fbdaf12083ea0998d4cb","dweb:/ipfs/QmR2qnwC6kUdqsKxDfbxF8X1xG74pfBeacJUc2QPmv4Brs"]},"contracts/FControllerStorage.sol":{"keccak256":"0xea52bd18afe45db7684230fd6aa7a2920c3cb23abb34b7679ea4a405416298d0","license":"AGPL V3.0","urls":["bzz-raw://ebf9114cd9c230235ca8ef8d956924407f59c047745560acdb8527e1798a2439","dweb:/ipfs/QmcVe4oJVovJf9Wxy59pL7vpSrxzofxepuaEg7oY4P1b2G"]},"contracts/FRToken.sol":{"keccak256":"0x9fce3489eabaff701917333909489d5a5f7f593695a36c60cdd71f969f3c677b","license":"AGPL V3.0","urls":["bzz-raw://c18d238ecb733ae1f8a4d2c1be29ffd438e0d2efae3de8a19a2d933810dfc74e","dweb:/ipfs/QmW3rjtfZUb3BzxUsYXqGirsUHC1RwaNxMzG14qXCTGPMJ"]},"contracts/IERC20.sol":{"keccak256":"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5","license":"MIT","urls":["bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08","dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"]},"contracts/Par.sol":{"keccak256":"0xdf9dc77c0c4d0e87251f93309891c3fef6b74df44ad52ca175623ce751423cd3","license":"AGPL V3.0","urls":["bzz-raw://16b6605a3e2ee7b666a772f779dcdbf15565246c28b3a6e5d244b5c4c30b0cbb","dweb:/ipfs/QmPaWS2tmStDwPgxLiV8XEEAH1f37yXVpJriRbAU3gq2up"]},"contracts/PriceOracle.sol":{"keccak256":"0x273938d4d29b47841a962c9faa3040a72efaa6012a86c5a47a2bb537510f523b","urls":["bzz-raw://40f9768e95f91e3565b5a8324d0d8862a45dba4a7014d93e6c3b69c10e79320b","dweb:/ipfs/QmQhV2q2gTFxwVURam38pYbii7mKim95nMMxQBpyqwQAQy"]},"contracts/PriceStorage.sol":{"keccak256":"0xb898e35dbf3551918f003259762907330f3bb518f19ddb84e616edb33da33ba6","urls":["bzz-raw://591d390f08fe93c0991aecc35b4e1d6e8863f0213662ddfcf05a09ec6d22965c","dweb:/ipfs/QmdGXJCqJ7415YwAQ2UPFUPUQkQ8L4MiX4T4qaUVetiwAH"]},"contracts/SafeMath.sol":{"keccak256":"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52","license":"MIT","urls":["bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c","dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"]},"contracts/Unitroller.sol":{"keccak256":"0x7b9cb87301a6aca25661ac76df080398385a701d5dc20c5ac447c1a67cce5016","license":"AGPL V3.0","urls":["bzz-raw://ffd9e7190095d9d79727c5e77aa45a227d056653df9009bb6f4bc6662bd191f2","dweb:/ipfs/Qman7t2GcLDqaAuFG5XS7W51yDjodknxNtw6X4y5CNd2FS"]},"contracts/interfaces/IERC20NonStandardInterface.sol":{"keccak256":"0xecaf1f6329e8ecaaf06a1791bb1e5dadfaa6e1806f68712a952a77a076206247","license":"AGPL V3.0","urls":["bzz-raw://998b6092805dd13b8d5b544530cc581441632549a96337361f3a45d011444f27","dweb:/ipfs/QmQo2HZVSz8MWw3sGzS2jdBz61rGaKThTb58J9o7wSqsky"]},"contracts/interfaces/IFController.sol":{"keccak256":"0xe2a982e470e2d7f6d22dde85e147db414ba5352c0ffd73b5ef2467e245219deb","license":"AGPL V3.0","urls":["bzz-raw://844fc9b8be6b044720ad37ec1d201362b7be324aad72d803432c32f3f29ef36e","dweb:/ipfs/QmZmTAQwimRh1RwPVKsKwgaWGc1aXh2xprSsjUMDzwoVLd"]},"contracts/interfaces/IFControllerMembership.sol":{"keccak256":"0x7bcdef1683c3566ce489e2a8fe1a6815e5f94e3276bf810efd322c151b07910d","urls":["bzz-raw://b91e9ef5011b3f30d7192573eb3d05feb9c4a19e9efd125e10e5232d47ef04c6","dweb:/ipfs/QmeiN7YBvFEVmozawuX9j1TJyyVhwFAHZjQQHwDzTqGNFX"]},"contracts/interfaces/IFRToken.sol":{"keccak256":"0x5954537562a147a9e63042277f4297109e39a9211fb767db2ef07dad3ce075c3","license":"AGPL V3.0","urls":["bzz-raw://b84c4ebcfa8564db6760c07b52c0965562dc2fefcda2966b73e7a7276d630e66","dweb:/ipfs/QmVMzvJqWurxmVeHqxqko5Hyms91XN8hML6bKTTLXiK74a"]},"contracts/interfaces/IPriceStorage.sol":{"keccak256":"0x5670be3dfa639e80c7f7dbbb612e0ab62c63da959e5865214d235e3c22f9fed5","urls":["bzz-raw://6120972178275b3e756159b76fd1bfd11deee16e46dcf71cec1724b26610f76d","dweb:/ipfs/QmbAjV8vbHXPixcrbC3MiKXAn6cSh6SoUv3FoifATx32vD"]},"contracts/interfaces/InterestRateModel.sol":{"keccak256":"0x81d0e4c7f7b10eae780476c918e7842db1f083e8d3adad55a99102f9e7e39723","license":"AGPL V3.0","urls":["bzz-raw://7cb75eb01255bdd460a4654d9de8ec1485b0bc8c882206b266a9253b427f0403","dweb:/ipfs/QmfQMPDH2TuQB2xzv8LGHdBroR1jLRdrxxFV7gGnPzSr1N"]}},"version":1},"version":1,"checkPoints":[]}