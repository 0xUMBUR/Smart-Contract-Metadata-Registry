{"address":"0x93AB4fbdE0ac5677bE146CEA96aA7b77A67Af6BF","name":"","metadata":{"compiler":{"version":"0.8.3+commit.8d00100c"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address payable","name":"_stakeContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"NotifyDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"earnings","type":"uint256"}],"name":"NotifyEarnings","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NotifyFallback","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldSC","type":"address"},{"indexed":false,"internalType":"address","name":"newSC","type":"address"}],"name":"NotifyNewSC","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NotifyStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newStakeBalence","type":"uint256"}],"name":"NotifyUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"startBal","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"finalBal","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"request","type":"uint256"}],"name":"NotifyWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"calcNewBalances","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getState","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"requestExitAtEndOfCurrentStakingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNextStakingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_stakeContract","type":"address"}],"name":"setStakeContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wdValue","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"NotifyDeposit(address,uint256,uint256)":{"details":"trigger notification of deposits","params":{"amount":"msg.value for the transaction","balance":"the users balance including this deposit","sender":"msg.sender for the transaction"}},"NotifyEarnings(uint256)":{"details":"trigger notification of earnings to be split","params":{"earnings":"uint staking earnings for pool"}},"NotifyFallback(address,uint256)":{"details":"notify when funds received from staking contract","params":{"amount":"msg.value for the transaction","sender":"msg.sender for the transaction"}},"NotifyNewSC(address,address)":{"details":"notify that StakeContract address has been changed ","params":{"newSC":"new address of the staking contract","oldSC":"old address of the staking contract"}},"NotifyStaked(address,uint256)":{"details":"trigger notification of staked amount","params":{"amount":"msg.value for the transaction","sender":"msg.sender for the transaction"}},"NotifyUpdate(address,uint256,uint256)":{"details":"trigger notification of change in users staked balances","params":{"newStakeBalence":"users new staked balance","previousBalance":"users previous staked balance","user":"address of user"}},"NotifyWithdrawal(address,uint256,uint256,uint256)":{"details":"trigger notification of withdrawal","params":{"finalBal":"users final balance after withdrawal","request":"users requested withdraw amount","sender":"address of msg.sender","startBal":"users starting balance"}}},"kind":"dev","methods":{"constructor":{"details":"contract constructor","params":{"_stakeContract":"the address of the staking contract/mechanism"}},"deposit()":{"details":"deposit funds to the contract"},"getState()":{"details":"retreive current state of users funds","returns":{"_0":"array of values describing the current state of user"}},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"requestExitAtEndOfCurrentStakingPeriod(uint256)":{"details":"user can request to exit at end of current staking period","params":{"amount":"requested amount to withdraw from staking contract"}},"requestNextStakingPeriod()":{"details":"user can request to enter next staking period "},"setStakeContract(address)":{"details":"set staking contract address","params":{"_stakeContract":"new address to change staking contract / mechanism"}},"stake()":{"details":"stake funds to stakeContract"},"unstake()":{"details":"unstake funds from stakeContract"},"withdraw(uint256)":{"details":"withdrawal funds out of pool","params":{"wdValue":"amount to withdraw"}}},"stateVariables":{"depositedBalances":{"details":"track balances of ether deposited to pool "},"requestStake":{"details":"track user request to enter next staking period "},"requestUnStake":{"details":"track user request to exit current staking period "},"sc":{"details":"staking contract object to interact with staking mechanism. this is a mock contract.  "},"stakeContract":{"details":"address of staking contract this variable is set at construction, and can be changed only by owner."},"stakedBalances":{"details":"track balances of ether staked "},"totalDeposited":{"details":"track total deposited to pool "},"totalStaked":{"details":"track total staked amount "},"userIndex":{"details":"track index by address added to users "},"users":{"details":"track users users must be tracked in this array because mapping is not iterable "}},"version":1},"userdoc":{"kind":"user","methods":{"calcNewBalances()":{"notice":"dev calculated new stakedBalances return true if calc is successful, otherwise false"}},"version":1}},"settings":{"compilationTarget":{"StakePool.sol":"StakePool"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/security/Pausable.sol":{"keccak256":"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e","license":"MIT","urls":["bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c","dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e","license":"MIT","urls":["bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f","dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835","license":"MIT","urls":["bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f","dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0","license":"MIT","urls":["bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395","dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e","license":"MIT","urls":["bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509","dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT"]},"StakeContract.sol":{"keccak256":"0x19ea771e27a753c913cf25882d3ea7b7178582463ff49694dec4e78ccb500611","urls":["bzz-raw://861650b35155bb2a7a7c8eece7a8bf74d4855dfdd24d9c85b4f1a168c187d3e6","dweb:/ipfs/Qmd9wy9cYa7HMEFEV6fSdouXpK2yJfpypFRu75UpJdCyaA"]},"StakePool.sol":{"keccak256":"0xc829c0dd03091c08dbc8c57f4de731648429ef8c1c222b1ae95f07de11df9454","urls":["bzz-raw://12703213ab093cdf8a234fa0c479be7ab0cd119b0f036f166371369b9f54dd6f","dweb:/ipfs/QmfLctDNbvSUkmtU5RL3CiEyJE9XwywL8FrXXp6FhzAiB7"]}},"version":1},"version":1,"checkPoints":[]}