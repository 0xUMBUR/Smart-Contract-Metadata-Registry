{"address":"0x8b4fd02326Db6EbE095E0707E2973C9e045da3dC","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_vol","type":"uint256"},{"internalType":"uint256","name":"_underlying","type":"uint256"},{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"blackScholesEstimate","outputs":[{"internalType":"uint256","name":"estimate","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_numbers","type":"uint256[]"},{"internalType":"uint256","name":"_underlying","type":"uint256"},{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"retBasedBlackScholesEstimate","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"}],"name":"sqrt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"numbers","type":"uint256[]"}],"name":"stddev","outputs":[{"internalType":"uint256","name":"sd","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"blackScholesEstimate(uint256,uint256,uint256)":{"details":"blackScholesEstimate calculates a rough price estimate for an ATM optioninput parameters should be transformed prior to being passed to the functionso as to remove decimal places otherwise results will be far less accurate","params":{"_time":"uint256 days to expiration in years multiplied to remove decimals","_underlying":"uint256 price of the underlying asset","_vol":"uint256 volatility of the underlying converted to remove decimals"}},"retBasedBlackScholesEstimate(uint256[],uint256,uint256)":{"details":"fromReturnsBSestimate first calculates the stddev of an array of price returnsthen uses that as the volatility param for the blackScholesEstimate","params":{"_numbers":"uint256[] array of price returns for volatility calculation","_time":"uint256 days to expiration in years multiplied to remove decimals","_underlying":"uint256 price of the underlying asset"}},"sqrt(uint256)":{"details":"sqrt calculates the square root of a given number xfor precision into decimals the number must firstbe multiplied by the precision factor desired","params":{"x":"uint256 number for the calculation of square root"}},"stddev(uint256[])":{"details":"stddev calculates the standard deviation for an array of integersprecision is the same as sqrt above meaning for higher precisionthe decimal place must be moved prior to passing the params","params":{"numbers":"uint[] array of numbers to be used in calculation"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/BlackScholesEstimate.sol":"BlackScholesEstimate"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/BlackScholesEstimate.sol":{"keccak256":"0x7ab2864a1b28d73869b53643b2ea671a4a2bbb53a006fee32a29be5be620961f","urls":["bzz-raw://2c4f0c1a6bae473a98213140b3ef695ec72905bd0cb9f9544748f295e09ef6ab","dweb:/ipfs/QmeRMQhxUkXi9bqWcWSzHDieSKTZyGrPCW8mmy2qmY8fiu"]}},"version":1},"version":1,"checkPoints":[]}