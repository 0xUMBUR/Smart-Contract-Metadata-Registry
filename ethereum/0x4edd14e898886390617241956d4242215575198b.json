{"address":"0x4EDd14E898886390617241956D4242215575198B","name":"","metadata":{"compiler":{"version":"0.7.1+commit.f4a555be"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_initialAccount","type":"address"},{"internalType":"uint256","name":"_initialBalance","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"string","name":"_EIP712Name","type":"string"}],"name":"__BaseTokenUpgradeable_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"string","name":"_EIP712Name","type":"string"}],"name":"__ERC2612_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_initialAccount","type":"address"},{"internalType":"uint256","name":"_initialBalance","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"name":"__ERC677_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"__ERC677_init(address,uint256,string,string)":{"details":"Sets the values for {_name} and {_symbol}, initializes {_decimals} with a default value of 18. And mints {_initialBalance} to address {_initialAccount} All three of these values are immutable: they can only be set once during construction."},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferAndCall(address,uint256,bytes)":{"details":"transfer token to a contract address with additional data if the recipient is a contact.","params":{"_data":"The extra data to be passed to the receiving contract.","_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/token/EthixToken.sol":"EthixToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol":{"keccak256":"0xbd69bd87cc39e6e0b96f174ad12837998aef97c271181529c4acea9c564ab57c","license":"MIT","urls":["bzz-raw://68befb3e0a2dafd1998d0763229fe101e5e7240fb20edc780a94bfb926874664","dweb:/ipfs/QmTx7cAFua2NaKYDTHBade71qh3RLDvd8HjoTvhJa89VwE"]},"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol":{"keccak256":"0xeeccb9632a932f192fa0deb8305648db63ecef6f0ae8fbdaea9f70e4dd1e6f39","license":"MIT","urls":["bzz-raw://d764648d7bd73179838cc0337ad74c0ebe434ccb2731c65abfee94c1db6a03e3","dweb:/ipfs/QmbECgU5f9xQUf97VUGnokyeeXUHsJCEZ5h1am6fWN1PtU"]},"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol":{"keccak256":"0xae7044b7c89ed74327b0979ae6f317c65d87b8d17a42d0c62d698d77d5de5511","license":"MIT","urls":["bzz-raw://d676c978d8ecee5c4510f045b747d94f3a1381e39feb870d2675d5b6d45a371b","dweb:/ipfs/QmUAokuHWPVAf14QkhPtSdYFyNa8HVje9CBEzwCcxH3xkP"]},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"keccak256":"0x2601a7daa4593d9a7df5f03da0d9ddcc2ae66dfb8025cc999f3a83b107a0690a","license":"MIT","urls":["bzz-raw://782f32f7fdcfdc17e3d3d3fbad8914026bf55f3f9713b1c52f4af11ca756e5a1","dweb:/ipfs/QmWUDoaqywMtTir7DCTMoppn1LEUE1mgLsZSEmDzb5v7AT"]},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0xe8e7e857294592fbef515eccb68f23f94868d176840b94d598b04081c56432ea","license":"MIT","urls":["bzz-raw://7fc9e3e04a481ef12970709c7d92a175abb0724c88ac06c55f09361921d3c874","dweb:/ipfs/QmNWghHeR8yZ8ki4V8YdFzPCpvadEpqeAZhQAnTkABHg8R"]},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0xb9b7917dd339432930a094aa6648f87bf6828c8a571f1cb71bdabc4e31300f66","license":"MIT","urls":["bzz-raw://4e280267539712f27a878c80a5279a323d0a99e608758a7dad6cde9614a50b79","dweb:/ipfs/QmWMf61NkoFTAG1A1qum1JtymtgtDEz3QxzFhAwzxVh2kq"]},"contracts/token/ERCs/ERC2612/ERC2612Upgradeable.sol":{"keccak256":"0xe2517d3159efef51fa5180e666b4d48b584ce05cf0a98d0fcca74c8d94011ecd","license":"gpl-3.0","urls":["bzz-raw://5efa316e5d44ba63dd2c87bb946cc63dbd65357ccdd88da22603c71ec0bee64d","dweb:/ipfs/QmePZS5EHtfW8rTHNChLz6ZJVPbms8W8yaLJzU5UxvPzgM"]},"contracts/token/ERCs/ERC677/ERC677Receiver.sol":{"keccak256":"0xc41af63f9c2f005afde11b6d69269274a81576169217909109e63723c65e5246","license":"gpl-3.0","urls":["bzz-raw://eb0badf3299a077fd43e906aa4b8710d84553922fdcb0fb831199d428cbea886","dweb:/ipfs/QmNTpNBaoH7JeeByXYKDQCu8VtLPMcWNdbafVXphXEUzvo"]},"contracts/token/ERCs/ERC677/ERC677Upgradeable.sol":{"keccak256":"0xdc21e28045a832414bc1f7f31e29aa1d75595bb28595001ab39bde10d0cca75c","license":"gpl-3.0","urls":["bzz-raw://81fb5797c84da85840110cd71b4fda7e109e27ec915bd1d24c347fd3edac2ece","dweb:/ipfs/QmbLbkABbFUqigVC4pQ3U48J6YC1LkQXHWE2gxTBSFeZPi"]},"contracts/token/ERCs/ERC677/IERC677.sol":{"keccak256":"0x4937aab0af0b0588e6792c13f5a58bb07fe608b48d11c4fab5f2ecf20204e3f3","license":"gpl-3.0","urls":["bzz-raw://e3f084d7eaad07c824b67f0498353f467d25f29880b367ecd4f566519f9826f9","dweb:/ipfs/QmZYPDn7XEmcxYkuDYYDkHfcCbGiX5oM4GeNzqH9R94L3S"]},"contracts/token/EthixToken.sol":{"keccak256":"0xc548eb3b9eaaee57f4de48612f63390a7e11431616d4f2cdabd4afaf7dd45996","license":"gpl-3.0","urls":["bzz-raw://b415413c7220340c9d1e6e01b5f35c17c0ace0d849134b69257f4b2702c255f8","dweb:/ipfs/QmQwoTkqdw88gYaDGh3VmR7GeDm65AuCHZdNLyzfmh6kq3"]},"contracts/token/bases/BaseTokenUpgradeable.sol":{"keccak256":"0x904f21fd21bc3132c0efb66226050e59aa7e2915a05455fefb80ebfbec22685f","license":"gpl-3.0","urls":["bzz-raw://ae65e8a4c0fbd01f970a093fc1062d5934439a374be19edca283c54886a150de","dweb:/ipfs/QmVGZsRowrKawQMWuJQboJNhZiHax6155BqZgw6GRAq1ZE"]}},"version":1},"version":1,"checkPoints":[]}