{"address":"0x14F38Fc328a12c2b4Cf6e0cDD474529bDdd9b1Ee","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract Cauldron[]","name":"pools","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract Cauldron","name":"pool","type":"address"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"cauldrons","outputs":[{"internalType":"contract Cauldron","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"bool","name":"direct","type":"bool"},{"internalType":"bool","name":"renounce","type":"bool"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"transferOwnership(address,bool,bool)":{"params":{"direct":"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.","newOwner":"Address of the new owner.","renounce":"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"claimOwnership()":{"notice":"Needs to be called by `pendingOwner` to claim ownership."},"transferOwnership(address,bool,bool)":{"notice":"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`."}},"version":1}},"settings":{"compilationTarget":{"SimpleWithdrawer.sol":"SimpleWithdrawer"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":350},"remappings":[]},"sources":{"SimpleWithdrawer.sol":{"keccak256":"0xe485b92f2b9964c58a5c0b77f7444f53be176a1452a61a9fa45306cd6beb6250","license":"MIXED","urls":["bzz-raw://8da966bf0548541c79ef70758f5a24cc1b78565f64f677b465108227046f520f","dweb:/ipfs/QmV1vTW5XNoMLameq3QLGe9Ad5jaiPyyLNzRbq3uYC5CWU"]}},"version":1},"version":1,"checkPoints":[]}