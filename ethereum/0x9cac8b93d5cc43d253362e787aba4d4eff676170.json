{"address":"0x9CaC8B93D5cc43d253362E787ABa4d4EFf676170","name":"","metadata":{"compiler":{"version":"0.7.4+commit.3f05b770"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"votingPower","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"VotingPowerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"votingPower","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addVotingPowerForVestingTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"archToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract PrismProxy","name":"prism","type":"address"}],"name":"become","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getARCHAmountStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"getARCHStake","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"votingPower","type":"uint256"}],"internalType":"struct Stake","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"stakedToken","type":"address"}],"name":"getAmountStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"stakedToken","type":"address"}],"name":"getStake","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"votingPower","type":"uint256"}],"internalType":"struct Stake","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_archToken","type":"address"},{"internalType":"address","name":"_vestingContract","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"removeVotingPowerForClaimedTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"stakeWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vestingContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation contract for voting power prism proxy Calls should not be made directly to this contract, instead make calls to the VotingPowerPrism proxy contract The exception to this is the `become` function specified in PrismProxyImplementation  This function is called once and is used by this contract to accept its role as the implementation for the prism proxy","kind":"dev","methods":{"addVotingPowerForVestingTokens(address,uint256)":{"params":{"account":"The recipient of voting power","amount":"The amount of voting power to add"}},"archToken()":{"returns":{"_0":"Address of ARCH token"}},"balanceOf(address)":{"params":{"account":"The address to get votes balance"},"returns":{"_0":"The number of current votes for `account`"}},"balanceOfAt(address,uint256)":{"details":"Block number must be a finalized block or else this function will revert to prevent misinformation.","params":{"account":"The address of the account to check","blockNumber":"The block number to get the vote balance at"},"returns":{"_0":"The number of votes the account had as of the given block"}},"become(address)":{"params":{"prism":"Prism Proxy contract"}},"decimals()":{"returns":{"_0":"decimals"}},"getARCHAmountStaked(address)":{"params":{"staker":"The user with staked ARCH"},"returns":{"_0":"total ARCH amount staked"}},"getARCHStake(address)":{"params":{"staker":"The user with staked ARCH"},"returns":{"_0":"total ARCH staked"}},"getAmountStaked(address,address)":{"params":{"stakedToken":"The staked token","staker":"The user with staked tokens"},"returns":{"_0":"total amount staked"}},"getStake(address,address)":{"params":{"stakedToken":"The staked token","staker":"The user with staked tokens"},"returns":{"_0":"total staked"}},"initialize(address,address)":{"details":"Should be called via VotingPowerPrism before calling anything else","params":{"_archToken":"address of ARCH token","_vestingContract":"address of Vesting contract"}},"removeVotingPowerForClaimedTokens(address,uint256)":{"params":{"account":"The account with voting power","amount":"The amount of voting power to remove"}},"stake(uint256)":{"params":{"amount":"The amount to stake"}},"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to stake","deadline":"The time at which to expire the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"vestingContract()":{"returns":{"_0":"Address of vesting contract"}},"withdraw(uint256)":{"params":{"amount":"The amount to withdraw"}}},"title":"VotingPower","version":1},"userdoc":{"events":{"Staked(address,address,uint256,uint256)":{"notice":"An event that's emitted when a user's staked balance increases"},"VotingPowerChanged(address,uint256,uint256)":{"notice":"An event that's emitted when an account's vote balance changes"},"Withdrawn(address,address,uint256,uint256)":{"notice":"An event that's emitted when a user's staked balance decreases"}},"kind":"user","methods":{"addVotingPowerForVestingTokens(address,uint256)":{"notice":"Count vesting ARCH tokens toward voting power for `account`"},"archToken()":{"notice":"Address of ARCH token"},"balanceOf(address)":{"notice":"Gets the current votes balance for `account`"},"balanceOfAt(address,uint256)":{"notice":"Determine the prior number of votes for an account as of a block number"},"become(address)":{"notice":"Accept invitation to be implementation contract for proxy"},"decimals()":{"notice":"Decimals used for voting power"},"getARCHAmountStaked(address)":{"notice":"Get total amount of ARCH tokens staked in contract by `staker`"},"getARCHStake(address)":{"notice":"Get staked amount and voting power from ARCH tokens staked in contract by `staker`"},"getAmountStaked(address,address)":{"notice":"Get total amount of tokens staked in contract by `staker`"},"getStake(address,address)":{"notice":"Get total staked amount and voting power from `stakedToken` staked in contract by `staker`"},"initialize(address,address)":{"notice":"Initialize VotingPower contract"},"removeVotingPowerForClaimedTokens(address,uint256)":{"notice":"Remove claimed vesting ARCH tokens from voting power for `account`"},"stake(uint256)":{"notice":"Stake ARCH tokens to unlock voting power for `msg.sender`"},"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Stake ARCH tokens using offchain approvals to unlock voting power"},"vestingContract()":{"notice":"Address of vesting contract"},"withdraw(uint256)":{"notice":"Withdraw staked ARCH tokens, removing voting power for `msg.sender`"}},"version":1}},"settings":{"compilationTarget":{"contracts/VotingPower.sol":"VotingPower"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":999999},"remappings":[]},"sources":{"contracts/VotingPower.sol":{"keccak256":"0x0740792c956d5859fa3ddbed1b9a628a933fc6529d107beaceb0dccfc32d8b18","license":"MIT","urls":["bzz-raw://2efd294b9cc63d3a63473de301bb1c69f230297a4105ab16ef212697a0498007","dweb:/ipfs/QmZysKmwFqjxRLbWSCXcixCasok1LPK6F9PoYiGz1tAyXM"]},"contracts/interfaces/IArchToken.sol":{"keccak256":"0x573123d04812487103499ebafe969bb27f00c4236bf433416ef6e84155deef3c","license":"MIT","urls":["bzz-raw://cd98139b9e5bbc348f6ff06e529140420121ff9612aa3066e7eeb1e517d77ada","dweb:/ipfs/QmTLSGWbzJS9rseop6J4YcLtGfqRocRQ8xDcshUZSgfKrx"]},"contracts/interfaces/IERC20.sol":{"keccak256":"0x077c1c7b2001eab9f0cb3b7cee53577b39305495db8cba923f92420af9a4099a","license":"MIT","urls":["bzz-raw://d75e23eccb9b5a3112e9e25aa34b3b1701a2c551d5d32dc9c91b0234f4b03e54","dweb:/ipfs/QmS6sreiDpGYV3VZQf6wdSQYDWJYNwmB2i8q4rsanAY57N"]},"contracts/interfaces/IVesting.sol":{"keccak256":"0xca0fb051cf0123309d4b55cbca48e5cb48f8ae63e2b3a975e6a19e97352ff296","license":"MIT","urls":["bzz-raw://ac560606186672db5adfc83f8df1e0f7478c461a4b4c70ff215e2c6cf529c0f9","dweb:/ipfs/QmZyzhsjSkZZVA18H8muANU7AjqCxEEu8UktHN6uYGTvE5"]},"contracts/interfaces/IVotingPower.sol":{"keccak256":"0x2ddfb170b45abd77afd6e71b07b3fd63487adc15dbc0d9007d06742d42eb0ddd","license":"MIT","urls":["bzz-raw://abd3c00048b6abc9630293f2848aeebf50e572f0a7864105fe74b3372ea4fd1e","dweb:/ipfs/QmRYW5LHKxCiCdxzsssjaJoZBmJwjhGhdRieysNbKVv7hB"]},"contracts/lib/Address.sol":{"keccak256":"0x3200dad4899dfc4a7b22d84e4b3768f23f50fd161c5b5997d6ae7004d90b0a94","license":"MIT","urls":["bzz-raw://6a5c3f567d3da56c64486c4266f923f9e1c18a764513a493fa52747f7b9442e0","dweb:/ipfs/QmRxjfaKTYowipdJPhDNbGP3WtAyHcCZCPGmbi7FYoZc4Y"]},"contracts/lib/Initializable.sol":{"keccak256":"0x9a89a53c389e07d6dc2b81846031205cf32a92158a64a6adb70338ab1461b81b","license":"MIT","urls":["bzz-raw://b30cab60dff9acf821a9c4087a43fe7ddfa6e9c66acfe30ab189ab0fc73413fa","dweb:/ipfs/QmT1BhFKkjfPfBcXwfyVP2RtJH3fwLpvgv6uJF8r4uh8Sw"]},"contracts/lib/PrismProxy.sol":{"keccak256":"0x3d2b33b87048fa03f347e9b6f97031a142b565f7d56990d5b923ae65c5ddab37","license":"MIT","urls":["bzz-raw://0c9e1157e258877c7b430389e657097c91f0e0c22f52a909f7e2552d457956b0","dweb:/ipfs/QmW47c1VSkZvg5Zk8vaDF35gnDLX5XGHpN3LGMPD2rez3n"]},"contracts/lib/PrismProxyImplementation.sol":{"keccak256":"0xc803c1014ed778b97b7f65eff92b2495b5cffcb0417b0cab2af43705b4780a53","license":"MIT","urls":["bzz-raw://88493cb71501c20c57482b69b583a8e969d7958cd6561a79688c043024bd6cec","dweb:/ipfs/QmR4nzTfUXorGW7npc3Q4Drz71e8E7YXZgtXAgnrRN2aWp"]},"contracts/lib/ReentrancyGuardUpgradeSafe.sol":{"keccak256":"0xdf39f09d248373bd20248fffa5282b241f068e3f7168326cb257a5673d8cec7b","license":"MIT","urls":["bzz-raw://213c17085efc53c63914c5316f2f4cf6e55162e0554bdbaf5d5fc60b170d2b75","dweb:/ipfs/QmRij3QRNBVuFToMUwrKjCW5uq8JLrLgumHFuQtfZh1nGP"]},"contracts/lib/SafeERC20.sol":{"keccak256":"0xf5c6f7a4e202733b9bea8dc0c4be4bc16f765c08079418eb426ad490d9f4142e","license":"MIT","urls":["bzz-raw://cc0bc334dca7fd927211426da674aa882fc490f7db1db8036ae22b6a5fd024fb","dweb:/ipfs/QmbhcE2t9cEjNDjATag7ih4ZfxtJqZSQJCDPAxMCrpsdwo"]},"contracts/lib/SafeMath.sol":{"keccak256":"0x961855901713e710c05dd67f9a01e501a54e82e68a526fe3662e228c27f788d9","license":"MIT","urls":["bzz-raw://667b1236778d994970364e89fd3106cd9eb02896079d9a49efa006bf4866dce7","dweb:/ipfs/QmeTLUd5HCxSyZTJ15qGRzt2YAT6QjsnDcsotHGb8Gr4go"]},"contracts/lib/VotingPowerStorage.sol":{"keccak256":"0x382805820fdf2c20261d34c934a511469b84251a3cdab50f07dc416b1f7879d1","license":"MIT","urls":["bzz-raw://c295ca85864413db6aefbba5ce4168ad2d7ad52f6adbcf35642d3cd6c54243f0","dweb:/ipfs/QmX3LgyEBupSbYiW6ub24m4XGw6i4ZEP9ZsL6hg9KtFjmh"]}},"version":1},"version":1,"checkPoints":[]}