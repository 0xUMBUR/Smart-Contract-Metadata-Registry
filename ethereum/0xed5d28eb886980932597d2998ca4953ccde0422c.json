{"address":"0xeD5d28EB886980932597D2998ca4953ccDE0422c","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"bo_","type":"address"},{"internalType":"address","name":"v3_","type":"address"},{"internalType":"address","name":"accessTiers_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Withdraw","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"aTA","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newPool_","type":"address"}],"name":"addAltPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPP_","type":"address"},{"internalType":"address","name":"newRateCalc_","type":"address"}],"name":"addUpdateTradingPair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"acc","type":"address"}],"name":"bRSLC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimETHRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newSha","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"nx_","type":"bool"}],"name":"enableRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lrc","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pA","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pendingETHRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"oldPool_","type":"address"}],"name":"removeAltPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"oldPP_","type":"address"}],"name":"removeTradingPair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rep","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"shas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"staked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tA","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMinTime_","type":"uint256"}],"name":"uMNOT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"nMT_","type":"uint256"}],"name":"uMXOT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"undelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAccessTiers_","type":"address"}],"name":"updateAccessTiers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newBetFee_","type":"uint256"}],"name":"updateBetFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee_","type":"uint256"}],"name":"updateExerciserFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee_","type":"uint256"}],"name":"updateExpirerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLockSeconds_","type":"uint256"}],"name":"updatePoolLockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPA_","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"github.com/Shalquiana","details":"governance for biopset protocol","methods":{"addAltPool(address)":{"params":{"newPool_":"the address of the EBOP20 pool to add"}},"addUpdateTradingPair(address,address)":{"params":{"newPP_":"the address of trading pair to be added","newRateCalc_":"the address of the rate calc to be used for this pair"}},"bRSLC(address)":{"params":{"acc":"the account to get the answer for"}},"delegate(address)":{"params":{"newSha":"the address of the delegate to voting power"}},"enableRewards(bool)":{"params":{"nx_":"the new boolean value of rewardsEnabled"}},"removeAltPool(address)":{"params":{"oldPool_":"the address of the pool to remove"}},"removeTradingPair(address)":{"params":{"oldPP_":"the address of trading pair to be removed"}},"stake(uint256)":{"params":{"amount":"the amount in BIOP you want to stake"}},"uMNOT(uint256)":{"params":{"newMinTime_":"the time (in seconds) of maximum possible bet"}},"uMXOT(uint256)":{"params":{"nMT_":"the time (in seconds) of maximum possible bet"}},"updateAccessTiers(address)":{"params":{"newAccessTiers_":"the new access tiers contract to use. It should conform to AccessTiers interface"}},"updateBetFee(uint256)":{"params":{"newBetFee_":"the time (in seconds) of the soft pool lock"}},"updateExerciserFee(uint256)":{"params":{"newFee_":"the new fee"}},"updateExpirerFee(uint256)":{"params":{"newFee_":"the new fee"}},"updatePoolLockTime(uint256)":{"params":{"newLockSeconds_":"the time (in seconds) of the soft pool lock"}},"updateProtocolAddress(address)":{"params":{"newPA_":"the new protocol contract to use. It should conform to BinaryOptions interface"}},"withdraw(uint256)":{"params":{"amount":"the amount in BIOP you want to withdraw"}}},"title":"DelegatedGov"},"userdoc":{"methods":{"addAltPool(address)":{"notice":"add a alt pool"},"addUpdateTradingPair(address,address)":{"notice":"add (or update the RateCalc of existing) trading pair "},"bRSLC(address)":{"notice":"base rewards since last claim"},"closeStaking()":{"notice":"prevent new deposits into the pool. Effectivly end the protocol. This cannot be undone."},"delegate(address)":{"notice":"delegates your voting power to a specific address(sha)"},"enableRewards(bool)":{"notice":"enable or disable BIOP rewards"},"removeAltPool(address)":{"notice":"remove a pool"},"removeTradingPair(address)":{"notice":"remove a trading pair"},"stake(uint256)":{"notice":"stake your BIOP and begin earning rewards"},"uMNOT(uint256)":{"notice":"update the maximum time an option can be created for"},"uMXOT(uint256)":{"notice":"update the maximum time an option can be created for"},"undelegate()":{"notice":"undelegate your voting power. you will still earn staking rewards  but your voting power won't back any delegate."},"updateAccessTiers(address)":{"notice":"change the access tiers contract address used to guard all access tier functions"},"updateBetFee(uint256)":{"notice":"update the fee paid by betters when they make a bet"},"updateExerciserFee(uint256)":{"notice":"update fee paid to exercisers"},"updateExpirerFee(uint256)":{"notice":"update fee paid to expirers"},"updatePoolLockTime(uint256)":{"notice":"update soft lock time for the main pool. "},"updateProtocolAddress(address)":{"notice":"change the BinaryOptions "},"withdraw(uint256)":{"notice":"withdraw your BIOP and stop earning rewards. You must undelegate before you can withdraw"}},"notice":"governance for biopset protocol BIOP"}},"settings":{"compilationTarget":{"browser/DelegatedGov.sol":"DelegatedGov"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":2000},"remappings":[]},"sources":{"browser/DelegatedGov.sol":{"keccak256":"0xb67e303804af1cc7e4293deb6ee5ec74c034e88b6e1c39f451562d2b0af68f58","urls":["bzz-raw://0e9909db263e1e995de83a54364c59482e8cb65bdcab3c15c89f8384b8cb7874","dweb:/ipfs/QmbiCu1S9SV5X3kSnQe9gadBR3VV3Ncg24WYVSjafU4U9h"]}},"version":1},"version":1,"checkPoints":[]}