{"address":"0x4CA946a2d9B5D6E505378516E4184dc109340B1c","name":"","metadata":{"compiler":{"version":"0.6.2+commit.bacdbe57"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_aggregator","type":"address"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"int256","name":"current","type":"int256"},{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AnswerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"startedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"startedAt","type":"uint256"}],"name":"NewRound","type":"event"},{"inputs":[],"name":"aggregator","outputs":[{"internalType":"contract HistoricAggregatorInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_roundId","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_roundId","type":"uint256"}],"name":"getRoundData","outputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint256","name":"answeredInRound","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_roundId","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint256","name":"answeredInRound","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"getAnswer(uint256)":{"params":{"_roundId":"the answer number to retrieve the answer for"}},"getRoundData(uint256)":{"details":"Note that for rounds that haven't yet received responses from all oracles, answer and updatedAt may change between queries.","params":{"_roundId":"the round ID to retrieve the round data for"},"returns":{"answer":"is the answer for the given round","answeredInRound":"is always equal to roundId because the underlying Aggregator contract does not expose this information.","roundId":"is the round ID for which data was retrieved","startedAt":"is always equal to updatedAt because the underlying Aggregator contract does not expose this information.","updatedAt":"is the timestamp when the round last was updated (i.e. answer was last computed)"}},"getTimestamp(uint256)":{"params":{"_roundId":"the answer number to retrieve the updated timestamp for"}},"latestRoundData()":{"details":"Note that for rounds that haven't yet received responses from all oracles, answer and updatedAt may change between queries.","returns":{"answer":"is the answer for the given round","answeredInRound":"is always equal to roundId because the underlying Aggregator contract does not expose this information.","roundId":"is the round ID for which data was retrieved","startedAt":"is always equal to updatedAt because the underlying Aggregator contract does not expose this information.","updatedAt":"is the timestamp when the round last was updated (i.e. answer was last computed)"}}}},"userdoc":{"methods":{"getAnswer(uint256)":{"notice":"get past rounds answers"},"getRoundData(uint256)":{"notice":"get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt value."},"getTimestamp(uint256)":{"notice":"get block timestamp when an answer was last updated"},"latestAnswer()":{"notice":"Reads the current answer from aggregator delegated to."},"latestRound()":{"notice":"get the latest completed round where the answer was updated"},"latestRoundData()":{"notice":"get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt value."},"latestTimestamp()":{"notice":"Reads the last updated height from aggregator delegated to."}}}},"settings":{"compilationTarget":{"browser/AggregatorFacade.sol":"AggregatorFacade"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/AggregatorFacade.sol":{"keccak256":"0x28bb77a25589a7ecbdac0494bb604a2f74b091db7f4f58a97ddfe71fab123bb0","urls":["bzz-raw://788366bea0192af5ddfbdafdc41d3f97b868d4e929d74cf4e0ab407def3f4e76","dweb:/ipfs/QmSMadisgTSwKZefdmGNMvDBMMjxeyd8GgtmVXRUVrugQv"]}},"version":1},"version":1,"checkPoints":[]}