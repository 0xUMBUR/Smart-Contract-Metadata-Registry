{"address":"0xCAcF544a049182747e84597F09592270579bb0C0","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"addressRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FROST_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LODGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLOPES_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setCoreRoles","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/SnowPatrol.sol":"SnowPatrol"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":1000},"remappings":[]},"sources":{"browser/AccessControl.sol":{"keccak256":"0x0bf67f0847f39a0dfb909b4b68d8273f67739f68e5c44c04418156f6d8a11ea1","license":"MIT","urls":["bzz-raw://16fafb7eb495c86faa5485de08b70f9abdd0c8f9f214b8704a0dfe9f748a33d6","dweb:/ipfs/QmNLhVsGvXq23R6X3y5mjLuuwCNKpg6qfVvFZxw4W8mDkh"]},"browser/Address.sol":{"keccak256":"0x4722f6eb39f969729d2df58cc024120f94c14b15ea1aeb38b5bc0112917533b0","license":"MIT","urls":["bzz-raw://81a2f5f41b477abe4d58c44e263c66ad4246e6df9945afff757bd74f0b9486fc","dweb:/ipfs/QmaXfAxdWp2Y3dYvTP2DkFWFCjhMnDS6ZmLoEXBs1Mmq2f"]},"browser/AddressBase.sol":{"keccak256":"0x653cf9c44f161ce4eb3517447775e67522f8fee7412766f64a14825f773c2d19","license":"MIT","urls":["bzz-raw://c083a0875307daf7ed1f2be08cfe67d4870ab7fcf365cc74722d5fab72027adf","dweb:/ipfs/QmdCnKKcq4tpfTuaGgcTn6Z83iqDxrZn68Bpi2JmzbqY8Q"]},"browser/AltitudeBase.sol":{"keccak256":"0x050fa9265f6daaf8c157114b6b7d33cb7869b3282fdda54d43dbaccbcd632505","license":"MIT","urls":["bzz-raw://0923738c07c4e6ed6df352e001e3efcd2acf008c9ffe6784b10ef0ed85ef6f5c","dweb:/ipfs/QmR2SnJ9cXcKa51R1XfhZ9JmQV2bzqhZCM2D7GBV2EN7di"]},"browser/Context.sol":{"keccak256":"0xd3e88da8695a1d63936f7bbf3b3441056c44d167e679a80f9a1b5ffafb11fad9","license":"MIT","urls":["bzz-raw://587786c556944a0a561b5f5ab16716263b42ca8dd6cc1102b75f4c4d1a802325","dweb:/ipfs/QmU9Y13bBrVy2uE4TiHfPSTFQXV2BeUnxrMo135zRy7wJT"]},"browser/EnumerableSet.sol":{"keccak256":"0x2b5126d431b44bc6e25a43305eb23b6d093eb2e7923a8d304db425bbb398efce","license":"MIT","urls":["bzz-raw://a96c76339f778265d0a8f3d73babd1f18bfa01d33ea8c117567e1a56ad9224f1","dweb:/ipfs/QmeoHhQRETcCc39rYFEfezoz7PrdEbEJUNMxHYkGUEpbFm"]},"browser/IAddressRegistry.sol":{"keccak256":"0xbf5327bf15f55d176ddd1b66ee736dee61e33aa3d50f113218c20bbaaefc4146","license":"MIT","urls":["bzz-raw://826779b94598399c4c2c12e25ba41f8352f9cbe4744ec79719020ddba2e6c9a1","dweb:/ipfs/QmVAjNMknGtww9JjvavFejwpiMYDXhyiPXQ7c6RuHxemno"]},"browser/IERC20.sol":{"keccak256":"0x8435e8230e900d716b4261cebc91985b70e406e6fd433e9751b46a2f0553401a","license":"MIT","urls":["bzz-raw://0a82e9a70916b84548d3dcad593027da45cbcda310e5b07d3aa56cfa4f97628c","dweb:/ipfs/Qmatc1Bx5fqGNoa9tnDFedThGaLQm69pB8Z7B85uxpacJv"]},"browser/ISnowPatrol.sol":{"keccak256":"0x406e6de7452f6ec638413cedb0b42d08e5030222a7ff6c3b2450786b3ac7779a","license":"MIT","urls":["bzz-raw://5111098e3a526ce89b45c90b21ac74e85ddcb9c8622bb8b0c70641198499387f","dweb:/ipfs/QmaJtWmLe9ERo3yctq5Rek3xCypLMBcc2CRsWMdyTs12z5"]},"browser/SnowPatrol.sol":{"keccak256":"0x4a2904ec203fae4cf56120068ed96716346d6dc453392e77b13a378895ca742c","license":"MIT","urls":["bzz-raw://04c81f17197db71ede345b7b66edb43434520c1c3c53f440da6cebdb71d53f33","dweb:/ipfs/QmYApEVtwDcwaehotCmbi1E4yqtiRCGVGc7Q52e3tcB2X1"]},"browser/SnowPatrolBase.sol":{"keccak256":"0xc9e831c5419162a634f13497c29ce7ae3dcfe548d59d05c0a66f3b85ded33250","license":"MIT","urls":["bzz-raw://1fc380830c6f17cabb53b1e5c448a59f353c89415a439fca13906ebd9a2226df","dweb:/ipfs/QmY2B2njHqB2ufExQVnokszDQYDkaKtRiwARNYTTYc2GVN"]},"browser/UtilitiesBase.sol":{"keccak256":"0x19df89a22f614374057471adfea02015c832b161dcd5bc67abcb25326f8d38e8","license":"MIT","urls":["bzz-raw://e622a0a2b42b91b466b121595c4ada2462ca71c70b684fce20d741ae88851036","dweb:/ipfs/QmYSNwxSF2GmSyCD51x8ZMHiFnRUL38fNQuYcYdgPNXTwT"]}},"version":1},"version":1,"checkPoints":[]}