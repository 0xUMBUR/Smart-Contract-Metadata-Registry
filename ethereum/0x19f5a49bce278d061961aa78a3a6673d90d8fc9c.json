{"address":"0x19f5a49BcE278d061961aA78A3a6673d90d8Fc9C","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"managerDataStorageAddr","type":"address"},{"internalType":"address","name":"oracleProxyAddr","type":"address"},{"internalType":"address","name":"breaker","type":"address"},{"internalType":"address","name":"erc20Addr","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"chainID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"alphaBaseAsset","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardPerBlocks","type":"uint256"}],"name":"ChainRewardUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"handlerID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"alphaBaseAsset","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardPerBlocks","type":"uint256"}],"name":"HandlerRewardUpdate","type":"event"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"},{"internalType":"uint256","name":"callerID","type":"uint256"},{"internalType":"bool","name":"allFlag","type":"bool"}],"name":"applyInterestHandlers","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"},{"internalType":"address payable","name":"userAddr","type":"address"}],"name":"claimHandlerReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergency","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCircuitBreaker","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalRewardInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"delinquentBorrower","type":"address"},{"internalType":"uint256","name":"liquidateHandlerID","type":"uint256"},{"internalType":"uint256","name":"liquidateAmount","type":"uint256"},{"internalType":"uint256","name":"rewardHandlerID","type":"uint256"},{"internalType":"uint256","name":"rewardRatio","type":"uint256"}],"name":"getMaxLiquidationReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRewardErc20","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getTokenHandlerBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getTokenHandlerID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getTokenHandlerInfo","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getTokenHandlerMarginCallLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getTokenHandlerPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getTokenHandlerSupport","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenHandlersLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"},{"internalType":"uint256","name":"callerID","type":"uint256"}],"name":"getUserCollateralizableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"},{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getUserExtraLiquidityAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"},{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"getUserIntraHandlerAssetWithInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"}],"name":"getUserLimitIntraAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"}],"name":"getUserTotalIntraCreditAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"},{"internalType":"address","name":"tokenHandlerAddr","type":"address"}],"name":"handlerRegister","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interestUpdateReward","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"observer","outputs":[{"internalType":"contract observerInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"ownerRewardTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_owner","type":"address"}],"name":"ownershipTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"delinquentBorrower","type":"address"},{"internalType":"uint256","name":"liquidateAmount","type":"uint256"},{"internalType":"address payable","name":"liquidator","type":"address"},{"internalType":"uint256","name":"liquidateHandlerID","type":"uint256"},{"internalType":"uint256","name":"rewardHandlerID","type":"uint256"}],"name":"partialLiquidationUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"delinquentBorrower","type":"address"},{"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"internalType":"address payable","name":"liquidator","type":"address"},{"internalType":"uint256","name":"handlerID","type":"uint256"}],"name":"partialLiquidationUserReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"}],"name":"rewardClaimAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"},{"internalType":"uint256","name":"callerID","type":"uint256"}],"name":"rewardUpdateOfInAction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bool","name":"_status","type":"bool"}],"name":"setBreakerTable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_emergency","type":"bool"}],"name":"setCircuitBreaker","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"handlerID","type":"uint256"},{"internalType":"bool","name":"support","type":"bool"}],"name":"setHandlerSupport","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"liquidationManagetAddr","type":"address"}],"name":"setLiquidationManager","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"observerAddr","type":"address"}],"name":"setObserverAddr","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"adminAddr","type":"address"},{"internalType":"bool","name":"flag","type":"bool"}],"name":"setOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"oracleProxyAddr","type":"address"}],"name":"setOracleProxy","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"erc20Addr","type":"address"}],"name":"setRewardErc20","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenHandlerLength","type":"uint256"}],"name":"setTokenHandlersLength","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenHandlerLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"userAddr","type":"address"}],"name":"updateRewardParams","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"BiFi(seinmyung25, Miller-kk, tlatkdgus1, dongchangYoo)","kind":"dev","methods":{"applyInterestHandlers(address,uint256,bool)":{"details":"Update interest of a user for a handler (internal)","params":{"allFlag":"Flag for the full calculation mode (calculting for all handlers)","callerID":"The handler ID","userAddr":"The user address"},"returns":{"_0":"(uint256, uint256, uint256, uint256, uint256, uint256)"}},"constructor":{"details":"Constructor for marketManager","params":{"breaker":"The address of default circuit breaker","erc20Addr":"The address of reward token (ERC-20)","managerDataStorageAddr":"The address of the manager storage contract","oracleProxyAddr":"The address of oracle proxy contract (e.g., price feeds)"}},"getCircuitBreaker()":{"details":"Get the circuitBreak status","returns":{"_0":"The circuitBreak status"}},"getGlobalRewardInfo()":{"details":"Get the reward parameters","returns":{"_0":"(uint256,uint256,uint256) rewardPerBlock, rewardDecrement, rewardTotalAmount"}},"getMaxLiquidationReward(address,uint256,uint256,uint256,uint256)":{"details":"Get the maximum liquidation reward by checking sufficient reward amount for the liquidator.","params":{"delinquentBorrower":"The address of the liquidation target","liquidateAmount":"The amount to liquidate","liquidateHandlerID":"The hander ID of the liquidating asset","rewardHandlerID":"The handler ID of the reward token for the liquidator","rewardRatio":"delinquentBorrowAsset / delinquentDepositAsset"},"returns":{"_0":"The maximum reward token amount for the liquidator"}},"getOwner()":{"details":"Get owner's address of the manager contract","returns":{"_0":"The address of owner"}},"getRewardErc20()":{"details":"Get the address of reward token","returns":{"_0":"The address of reward token"}},"getTokenHandlerBorrowLimit(uint256)":{"details":"Get the borrow limit of the handler (external)","params":{"handlerID":"The handler ID"},"returns":{"_0":"The borrow limit"}},"getTokenHandlerID(uint256)":{"details":"Get the handler ID at the index in the handler list","params":{"index":"The index of the handler list (array)"},"returns":{"_0":"The handler ID"}},"getTokenHandlerInfo(uint256)":{"details":"Get information for a handler","params":{"handlerID":"Handler ID"},"returns":{"_0":"(success or failure, handler address, handler name)"}},"getTokenHandlerMarginCallLimit(uint256)":{"details":"Get the margin call limit of the handler (external)","params":{"handlerID":"The handler ID"},"returns":{"_0":"The margin call limit"}},"getTokenHandlerPrice(uint256)":{"details":"Get the token price of the handler","params":{"handlerID":"The handler ID"},"returns":{"_0":"The token price of the handler"}},"getTokenHandlerSupport(uint256)":{"details":"Get the handler status of whether the handler is supported or not.","params":{"handlerID":"The handler ID"},"returns":{"_0":"Whether the handler is supported or not"}},"getTokenHandlersLength()":{"details":"Get the length of the handler list","returns":{"_0":"the length of the handler list"}},"getUserCollateralizableAmount(address,uint256)":{"details":"Get the maximum allowed amount to borrow of the user from the given handler","params":{"callerID":"The target handler to borrow","userAddr":"The address of the user"},"returns":{"_0":"extraCollateralAmount The maximum allowed amount to borrow from the handler."}},"getUserExtraLiquidityAmount(address,uint256)":{"details":"Get the amount of token that the user can borrow more","params":{"handlerID":"The handler ID","userAddr":"The address of user"},"returns":{"_0":"The amount of token that user can borrow more"}},"getUserIntraHandlerAssetWithInterest(address,uint256)":{"details":"Get the deposit and borrow amount of the user with interest added","params":{"handlerID":"The handler ID","userAddr":"The address of user"},"returns":{"_0":"The deposit and borrow amount of the user with interest"}},"getUserLimitIntraAsset(address)":{"details":"Get the borrow and margin call limits of the user for all handlers","params":{"userAddr":"The address of the user"},"returns":{"_0":"userTotalBorrowLimitAsset the sum of borrow limit for all handlers","_1":"userTotalMarginCallLimitAsset the sume of margin call limit for handlers"}},"getUserTotalIntraCreditAsset(address)":{"details":"Get the depositTotalCredit and borrowTotalCredit","params":{"userAddr":"The address of the user"},"returns":{"_0":"depositTotalCredit The amount that users can borrow (i.e. deposit * borrowLimit)","_1":"borrowTotalCredit The sum of borrow amount for all handlers"}},"handlerRegister(uint256,address)":{"details":"Register a handler","params":{"handlerID":"Handler ID and address","tokenHandlerAddr":"The handler address"},"returns":{"_0":"true (TODO: validate results)"}},"interestUpdateReward()":{"details":"Reward the user (msg.sender) with the reward token after calculating interest.","returns":{"_0":"true (TODO: validate results)"}},"ownerRewardTransfer(uint256)":{"details":"Transfer reward tokens to owner (for administration)","params":{"_amount":"The amount of the reward token"},"returns":{"_0":"true (TODO: validate results)"}},"ownershipTransfer(address)":{"details":"Transfer ownership","params":{"_owner":"the address of the new owner"},"returns":{"_0":"true (TODO: validate results)"}},"partialLiquidationUser(address,uint256,address,uint256,uint256)":{"details":"Partial liquidation for a user","params":{"delinquentBorrower":"The address of the liquidation target","liquidateAmount":"The amount to liquidate","liquidateHandlerID":"The hander ID of the liquidating asset","liquidator":"The address of the liquidator (liquidation operator)","rewardHandlerID":"The handler ID of the reward token for the liquidator"},"returns":{"_0":"(uint256, uint256, uint256)"}},"partialLiquidationUserReward(address,uint256,address,uint256)":{"details":"Reward the liquidator","params":{"delinquentBorrower":"The address of the liquidation target","handlerID":"The handler ID of the reward token for the liquidator","liquidator":"The address of the liquidator (liquidation operator)","rewardAmount":"The amount of reward token"},"returns":{"_0":"The amount of reward token"}},"rewardClaimAll(address)":{"details":"Claim all rewards for the user","params":{"userAddr":"The user address"},"returns":{"_0":"true (TODO: validate results)"}},"rewardUpdateOfInAction(address,uint256)":{"details":"Update the (SI) rewards for a user","params":{"callerID":"The handler ID","userAddr":"The address of the user"},"returns":{"_0":"true (TODO: validate results)"}},"setBreakerTable(address,bool)":{"details":"Authorize admin user for circuitBreaker","params":{"_status":"The boolean status of circuitBreaker (on/off)","_target":"The address of the circuitBreaker admin user."},"returns":{"_0":"true (TODO: validate results)"}},"setCircuitBreaker(bool)":{"details":"Set circuitBreak to freeze/unfreeze all handlers","params":{"_emergency":"The boolean status of circuitBreaker (on/off)"},"returns":{"_0":"true (TODO: validate results)"}},"setHandlerSupport(uint256,bool)":{"details":"Set the support stauts for the handler","params":{"handlerID":"the handler ID","support":"the support status (boolean)"},"returns":{"_0":"true (TODO: validate results)"}},"setLiquidationManager(address)":{"details":"Set a liquidation manager contract","params":{"liquidationManagetAddr":"The address of liquidiation manager"},"returns":{"_0":"true (TODO: validate results)"}},"setOracleProxy(address)":{"details":"Set the address of oracleProxy contract","params":{"oracleProxyAddr":"The address of oracleProxy contract"},"returns":{"_0":"true (TODO: validate results)"}},"setRewardErc20(address)":{"details":"Set the address of BiFi reward token contract","params":{"erc20Addr":"The address of BiFi reward token contract"},"returns":{"_0":"true (TODO: validate results)"}},"setTokenHandlersLength(uint256)":{"details":"Set the length of the handler list","params":{"_tokenHandlerLength":"The length of the handler list"},"returns":{"_0":"true (TODO: validate results)"}},"updateRewardParams(address)":{"details":"(Update operation) update the rewards parameters.","params":{"userAddr":"The address of operator"},"returns":{"_0":"Whether or not the operation succeed"}}},"title":"Bifi's marketManager contract","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Implement business logic and manage handlers","version":1}},"settings":{"compilationTarget":{"localhost/marketManager/tokenManager.sol":"etherManager"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10},"remappings":[]},"sources":{"localhost/Errors.sol":{"keccak256":"0xf8fc034039d88e3c399e01c0ef69fd5c57e395081c4f02d64e5b44f5eb40e0bc","license":"BSD-3-Clause","urls":["bzz-raw://253e1393b0b3eda85797178cc52ad0fb38989f9eb00b4891b130391a2633dab3","dweb:/ipfs/QmdVtbioeX4tivhwpUqheXTTos8ju3ZG2A83M8ggdBWN5A"]},"localhost/SafeMath.sol":{"keccak256":"0x4fe62e481de440e9f3237ac08f7934d4d3e068e0f76b1fd8e1473fd07dc990ca","license":"BSD-3-Clause","urls":["bzz-raw://60270453f7f9bb56ab2e6b9e4777121d4c5e8a138e03b2a2613aa927c5502289","dweb:/ipfs/QmR7Dbn2DaAsNJWJnvsUvkmCJtYwtsW3EC46gLtkcmpAKh"]},"localhost/interfaces/SIInterface.sol":{"keccak256":"0xc9235518af3aa7e18f0ffb94ea893b6bd4740e18108434256592216c729f4009","license":"BSD-3-Clause","urls":["bzz-raw://2a03de595d877c6e7ecf44823e3f9417788f05d958183925ce13d66ef4facab6","dweb:/ipfs/QmXpxRJYgAbinf9474cNssL8Fe358FWB28y9iVCkzspBnn"]},"localhost/interfaces/liquidationManagerInterface.sol":{"keccak256":"0xda996f6154e1c25d7b435601debfa63092699d83e682c53b547f627c2cc8499e","license":"BSD-3-Clause","urls":["bzz-raw://f5fb8438045e17a1969631dc6b8f3005cefbee128596df2b657738dea5081f07","dweb:/ipfs/Qmd3UerKjrtAma9aM5Ha8Nz72wqS9ZWuAzrhNRXiJ5LSGn"]},"localhost/interfaces/marketHandlerInterface.sol":{"keccak256":"0x674cdf025c8a37b3c22bc56fd5cccd174fefa7e74ef77947e29c053c2242f9bc","license":"BSD-3-Clause","urls":["bzz-raw://92ab472a2d6e000606469474a94279e066cbc5a1fba03b130139e9bc6c6bc5d4","dweb:/ipfs/Qmer87F3qaWuZkwqn6yxDjwfVJSEs6dZdbs8mcLm1xtwDt"]},"localhost/interfaces/marketManagerInterface.sol":{"keccak256":"0x3582743cfbec566ae132d08a93b87964791398f88945918619ccdfa8edc23b3b","license":"BSD-3-Clause","urls":["bzz-raw://666b097dfdc1ae84ba56cee653fe785dff32fc8d822b694618af894b712754d0","dweb:/ipfs/QmNMf8SNMdFmxhN2CvkCSNuWmP9WtwCtvcrB2qcCtCwniH"]},"localhost/interfaces/observerInterface.sol":{"keccak256":"0x1ad1eb5a6e9ec8d4b2fc9f80728a1308740e553ab60df6fecc53d84147d4e747","license":"BSD-3-Clause","urls":["bzz-raw://d291120412313b5926afaa7ac85d5f710673d63a40eec1ee7d099a77e9736390","dweb:/ipfs/Qmb5WRJHCt35Tgyo8bhM2i42gQw8GA9Yr7wwe1kg6C4c1a"]},"localhost/interfaces/proxyContractInterface.sol":{"keccak256":"0xf9692f0c5a376ea70b132b28be049fce225802839a42ad9adea83407f9be6de9","license":"BSD-3-Clause","urls":["bzz-raw://16199547fd2b365ebb772e05067bb6ea89eeae5ccc148b64ca3ba732f24a2433","dweb:/ipfs/QmSutvUWgtkjUHxTg9XwaFwAqg3MQ6VdUSoFXHVV1yrnpR"]},"localhost/interfaces/tokenInterface.sol":{"keccak256":"0x9e2cfc87211c9327904a5582621c7192856b085559d61ab40cf91020ce30e5db","license":"BSD-3-Clause","urls":["bzz-raw://38ee6d3d145cf0a684307cd17dac842cbfa06773a1bf70b7ca53abdd0678a028","dweb:/ipfs/QmXtGDbxZemXFnsU7EWU57V9QYJwLnzcbVLCXXiJf7EfNT"]},"localhost/interfacesForManager/managerDataStorageInterfaceForManager.sol":{"keccak256":"0x4f5584cfc8e363d0641759067e7abc3cdd4ba5ba818b208d56953466c32f11cd","license":"BSD-3-Clause","urls":["bzz-raw://bdf7b422a34c5f6e8edc6548c1f451633b7d6d3a7e5d8c56f9ee87986ae7acda","dweb:/ipfs/QmcZeDwiMW86oJMu7wUG4AYpEUyCoDhbtSqhhj2MgdCs7h"]},"localhost/interfacesForManager/oracleProxyInterfaceForManager.sol":{"keccak256":"0xfc27886fbd26dea166ef9eedaf001f0466675ba831ee36bcd76314c0b8bc1c94","license":"BSD-3-Clause","urls":["bzz-raw://4239384e73f13f0965d188a45303936f0d949a6d8f4d0e7ef32cb5cb40fe7f1e","dweb:/ipfs/QmYM2VtAKDE1YJqx9G2mKuQNoXPUS8KgvVTi69EKpUqhTX"]},"localhost/marketManager/tokenManager.sol":{"keccak256":"0x61b1f7a2a1b5bf342ece574c957c73cabb5807a2f045c2bf89a4fa516317feb2","license":"BSD-3-Clause","urls":["bzz-raw://c2330cdb70fad24674824e8b6c8e55ecabfd65d043c32d1e74e60339bdbfd08e","dweb:/ipfs/QmayCsoNxGAnFY2mBRhJKvZ1XQ5n6pK4sJAzVpYLiZNxop"]}},"version":1},"version":1,"checkPoints":[]}