{"address":"0x729AB216970bc8D37fFE6431609fBfA7f1F833C0","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"validationNumber","type":"uint256"}],"name":"certificateCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"_name","type":"string"}],"name":"deployed","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"AddCertificate","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_num","type":"uint256"}],"name":"CheckCertificate","outputs":[{"internalType":"address payable","name":"House","type":"address"},{"internalType":"string","name":"Certificate","type":"string"},{"internalType":"string","name":"Person","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_certificate","type":"uint64"},{"internalType":"string","name":"_name","type":"string"}],"name":"GiveCertificate","outputs":[{"internalType":"uint256","name":"Number","type":"uint256"},{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_certificate","type":"uint64"}],"name":"SeeCertificates","outputs":[{"internalType":"string","name":"Certificate","type":"string"},{"internalType":"uint256","name":"validationNumber","type":"uint256"},{"internalType":"uint64","name":"Count","type":"uint64"},{"internalType":"uint256","name":"firstTimestamp","type":"uint256"},{"internalType":"uint256","name":"lastTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_certificate","type":"uint64"},{"internalType":"uint64","name":"_person","type":"uint64"}],"name":"SeePeople","outputs":[{"internalType":"string","name":"Person","type":"string"},{"internalType":"uint256","name":"Certificate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"CheckCertificate(uint256)":{"details":"outputs zero or empty, does not throw an error.","params":{"_num":":certificateNumber"}},"GiveCertificate(uint64,string)":{"details":"Input required","params":{"_certificate":":a number that defines certificates. Starts from 0 & goes up."}},"SeeCertificates(uint64)":{"details":"blockchain based authentication.Input required","params":{"_certificate":":requires existing certificateNumber"}},"SeePeople(uint64,uint64)":{"details":"blockchain based authentication.","params":{"_certificate":":requires existing certificateNumber","_person":":requires existing receiver"}},"constructor":{"params":{"name":":optional not secure to use publicly"}}}},"userdoc":{"methods":{"AddCertificate(string)":{"notice":"Adding a certificate as Certification House with NO -unnecessary- authentication."},"CheckCertificate(uint256)":{"notice":"Public function works with existing."},"GiveCertificate(uint64,string)":{"notice":"Adding a receiver to a certificate."}}}},"settings":{"compilationTarget":{"browser/updatedDapp.sol":"Certification"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/updatedDapp.sol":{"keccak256":"0xa8f87486df4794c9242e9f842e09d1f18b7d0be37a21e7e6bdae10ad0e44e01b","urls":["bzz-raw://03fff0119c5d0d8456d676731808258c225818ade1e90deaf0e77b0fedbebbee","dweb:/ipfs/QmTFWUd9tL7fsCFFygJN5msPkpzPPUG5Nkpd2K9saqK6fP"]}},"version":1},"version":1,"checkPoints":[]}