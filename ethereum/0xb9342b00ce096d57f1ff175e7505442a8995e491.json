{"address":"0xB9342b00Ce096D57f1ff175E7505442A8995e491","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller.      * See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance.      * See {ERC20-_burn} and {ERC20-allowance}.      * Requirements:      * - the caller must have allowance for `accounts`'s tokens of at least `amount`."},"constructor":{"details":"Constructor that gives msg.sender all of existing tokens."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"title":"SimpleToken"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/SimpleToken.sol":"SimpleToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Context.sol":{"keccak256":"0x6c478add5e8a887fe8950184a4ac79efe353121468ed9c902375cf1833b14e02","urls":["bzz-raw://832862bb48693436dcab68507c5964ae363cbf641975eaa9935e84175312125f","dweb:/ipfs/QmQS1ff4hevB5XwqhWvtKYPStucUf21inh2ThDLDH78CsR"]},"browser/ERC20.sol":{"keccak256":"0x0ae377dd479328b96b697296e641a1c07de52138a924300c331082cc8676cf02","urls":["bzz-raw://6afd5b470d9ab793e5ffcbc8bf644056f60141ef69d14485f134f690f3779503","dweb:/ipfs/QmSVAMJ6wmLYqJMd2uNZistfi23nsd3nuPDbdQP84QR7XH"]},"browser/ERC20Burnable.sol":{"keccak256":"0x202150e6be18d5b1b23db8add4a45dfd02dd5b0c591fddb7b49029b630fa5e43","urls":["bzz-raw://d2f84917c7e98642e1d04f3902eceed6f7ec5a6a7be8cfec11c2fac3567729cb","dweb:/ipfs/QmbNfYCwx33ouEmdtbMLRJUQH3jH1uwVGgFFWNKNJPEsfa"]},"browser/ERC20Detailed.sol":{"keccak256":"0xd27fed631458ce582741de4ab446ad0cc3e5fe78f1398555a580a78e871f547f","urls":["bzz-raw://75d93d4a2ca6e2e0280633290fe0ca1a183eff29be9755810c184fe82d36e4da","dweb:/ipfs/QmZYuR8sHWsvPcVDckpKY5ia4KipigBQaqCPWpMdVHm7VP"]},"browser/IERC20.sol":{"keccak256":"0x9642e6c88b064b2f7f558fa42b39e3b472e417bd0ed496944c5e84289e461221","urls":["bzz-raw://bd8688d117ebe0ada741e2a9fcc54680ed7d873762c10d20afcf240aea10bb86","dweb:/ipfs/Qmba3FEUJ35xC1Mxt757EfGKK9yPFMDUQ4ZRwkpuv4YXA8"]},"browser/SafeMath.sol":{"keccak256":"0x100d71e8d45df216480aa35e75fc2bac5878d782690e8c4897d9ed336906a6fa","urls":["bzz-raw://3f22e0961427f0685d955e67d3f66414809e9a8d829a77bcd33d42c318a80a12","dweb:/ipfs/QmUCBiBx3agAUvFbqoGimDiPzk8xQhvc9aytkhgiEgkGaW"]},"browser/SimpleToken.sol":{"keccak256":"0x6c5809e0f1b365696e577939f35ed5c63681520b04915e2710f9134beb88e0e8","urls":["bzz-raw://1d2f2df95e858b08adc4ac8662e36ae327aa844e602a31e71b1f0819c1edfbf7","dweb:/ipfs/QmS41P9daQxz4ZK2uRqosW6WCJwsDKuyZfUNwPeJoAb2Fq"]}},"version":1},"version":1,"checkPoints":[]}