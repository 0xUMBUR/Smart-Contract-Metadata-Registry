{"address":"0x7e2AFE446A30fA67600a5174Df7f4002B8E15B03","name":"","metadata":{"compiler":{"version":"0.8.3+commit.8d00100c"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"boughtAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyingTokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"executeSell","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initializeContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isInitialised","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"salvageTokensFromContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sellerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellingTokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"soldAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"buyingTokenBalance()":{"details":"Returns the amount of buying tokens on the smart contract"},"constructor":{"details":"Initializes the contract setting the needed values for the trade."},"executeSell()":{"details":"Creates the trade, it sends the amount of buying tokens that are ont the smart  contract to the seller and withdraws the appropriate amount of selling tokens to the buyer  IMPORTANT: This method will only work if contract is initialised and if balance of buying token is at leats 0.1."},"initializeContract()":{"details":"This method thakes the predefined amount of selling tokens from the  sellers account and initializes the contract which means that  trading can start.  IMPORTANT: This method will not work if allowance on the selling token is  not set to the appropriate ammount"},"salvageTokensFromContract(address,address,uint256)":{"details":"After the trading is complete and all the tokens are sent  appropriatly the buyer gets the control of the smart contract  so he can salvage wrongly sent tokens."},"sellingTokenBalance()":{"details":"Returns the amount of selling tokens on the smart contract"}},"stateVariables":{"boughtAmount":{"details":"Returns the amount of tokens that were bought through this contract"},"buyerAddress":{"details":"Returns the Buyers address"},"isInitialised":{"details":"Returns the state of the contract, if true tokens are deposited and  trades can be excecuted"},"sellerAddress":{"details":"Returns the sellers address"},"soldAmount":{"details":"Returns the amount of tokens that were sold through this contract"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"OptionContract/OptionContract.sol":"OptionSellingContract"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"OptionContract/OptionContract.sol":{"keccak256":"0x697308f94730bbb3d81eb29e8fef4565f0adf658dc8f6a44092f260b74c2bea6","license":"MIT","urls":["bzz-raw://870047abdea4c29af68c15348d53ca1babf3a7488f41fcf71645cdccfd8dfc3a","dweb:/ipfs/QmYLNqcxCRKARU94CkkHxpuanvJJvaPt4gmTxyjxkNe7Cp"]}},"version":1},"version":1,"checkPoints":[]}