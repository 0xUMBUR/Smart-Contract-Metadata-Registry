{"address":"0x8B300929efFf14f2F273CbF474a422b37f1E0Cb6","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"tokenAddr","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"test123","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"tokenAddr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"The core responsibilities of this contract are collecting fees and whitelisting creators.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"withdrawFunds(address,address,uint256)":{"details":"In normal operation only ETH is required, but this allows access to any         ERC-20 funds sent to the contract as well.","params":{"amount":"Amount to withdrawal or 0 to withdraw all available funds","to":"Address to receive the withdrawn funds","tokenAddr":"Address of the ERC20 token or address(0) for ETH"}}},"version":1},"userdoc":{"kind":"user","methods":{"withdrawFunds(address,address,uint256)":{"notice":"Allows an admin to withdraw funds."}},"notice":"The root node of Foundation.","version":1}},"settings":{"compilationTarget":{"contracts/Foundation.sol":"Foundation"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol":{"keccak256":"0xbd69bd87cc39e6e0b96f174ad12837998aef97c271181529c4acea9c564ab57c","license":"MIT","urls":["bzz-raw://68befb3e0a2dafd1998d0763229fe101e5e7240fb20edc780a94bfb926874664","dweb:/ipfs/QmTx7cAFua2NaKYDTHBade71qh3RLDvd8HjoTvhJa89VwE"]},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"keccak256":"0x167df6e124eca690f37620cf63e95ac2e1c454215e1946a4dbf71392a42f936b","license":"MIT","urls":["bzz-raw://b85205fd29dbc161fdb6f1a1da2619f05437764246e0c2a8ad268b97a5a3d2b1","dweb:/ipfs/QmT4AdfGPX72M1ofGBBDr3KPJpBxaYhDszy7ypycnHC12F"]},"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol":{"keccak256":"0xae7044b7c89ed74327b0979ae6f317c65d87b8d17a42d0c62d698d77d5de5511","license":"MIT","urls":["bzz-raw://d676c978d8ecee5c4510f045b747d94f3a1381e39feb870d2675d5b6d45a371b","dweb:/ipfs/QmUAokuHWPVAf14QkhPtSdYFyNa8HVje9CBEzwCcxH3xkP"]},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0xe8e7e857294592fbef515eccb68f23f94868d176840b94d598b04081c56432ea","license":"MIT","urls":["bzz-raw://7fc9e3e04a481ef12970709c7d92a175abb0724c88ac06c55f09361921d3c874","dweb:/ipfs/QmNWghHeR8yZ8ki4V8YdFzPCpvadEpqeAZhQAnTkABHg8R"]},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0xb9b7917dd339432930a094aa6648f87bf6828c8a571f1cb71bdabc4e31300f66","license":"MIT","urls":["bzz-raw://4e280267539712f27a878c80a5279a323d0a99e608758a7dad6cde9614a50b79","dweb:/ipfs/QmWMf61NkoFTAG1A1qum1JtymtgtDEz3QxzFhAwzxVh2kq"]},"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol":{"keccak256":"0x1b864b73c5910f8cc597c058cad442a185f7c35491e39e5fad9509148cd0b564","license":"MIT","urls":["bzz-raw://4b017f22f00a12e882a4181ddb8fb6be184b3fdbba9c695903f28cbe68e96287","dweb:/ipfs/QmUr5W6dPSG9ex1XgCUAPGyrANoQPph6jBtXqdTSWzjZrP"]},"contracts/Foundation.sol":{"keccak256":"0xe937acd6d5babb12bc7eb72001e377b85fb56443505e22b88bb9d6c167469e77","license":"MIT","urls":["bzz-raw://89834d28c2610c97c1e0cbb5703413bb6dbcb9cbe60bd94df7bfb82920c45c78","dweb:/ipfs/QmUEtpAmMghpXRyEoqFDZadExkvr714S29HkVsQuEAeLiq"]},"contracts/libraries/Collateral.sol":{"keccak256":"0xe3256fa2bd12023d1692d85fd8c0679109a6f0bcc6e1a38df92dd2e26a38684b","license":"MIT","urls":["bzz-raw://b2d82c254edbcc6dfa6d7d266ec79ba147055116186523335db3fafba2878a39","dweb:/ipfs/QmRnAP9nzpfAp6HJPgD53VsiCsuADxfQctnfs3Ua9UgAzD"]},"contracts/mixins/AdminRole.sol":{"keccak256":"0xa1758c574ff81fb006752c8017d1bc6eef05d9b18c35716bba0e05813e30d9a2","license":"MIT","urls":["bzz-raw://c6cc6e24fcb88c2616fe5fcb62534b2472a3758dc8ce803fa21c0b4c1affb458","dweb:/ipfs/QmNvUBKzjXX8Rv8Q1pWfJn3dvUBb9DXCX6rzJHGacyMHsF"]},"contracts/mixins/CollateralManagement.sol":{"keccak256":"0x98f2ae014836ff3f3bee616a83a1df07b7c36fbdfe465b27bb478ad8b6595be5","license":"MIT","urls":["bzz-raw://0f33334993e44e63bb8374b54902dce50974a50dec517b05d1076285ad8a7ba3","dweb:/ipfs/QmZCP2BmwCon8rLihVnS3j7miXUkW3w6qGJZQ6RRxRmGR8"]}},"version":1},"version":1,"checkPoints":[]}