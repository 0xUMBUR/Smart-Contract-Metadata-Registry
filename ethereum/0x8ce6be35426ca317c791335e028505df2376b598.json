{"address":"0x8ce6be35426CA317c791335e028505Df2376B598","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DELEGATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"}],"name":"checkpoints","outputs":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint256","name":"votes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegator","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCurrentVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPriorVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {BEP20-allowance}."},"approve(address,uint256)":{"details":"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {BEP20-balanceOf}."},"decimals()":{"details":"Returns the token decimals."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"delegate(address)":{"params":{"delegatee":"The address to delegate votes to"}},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"delegatee":"The address to delegate votes to","expiry":"The time at which to expire the signature","nonce":"The contract state required to match the signature","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"delegates(address)":{"params":{"delegator":"The address to get delegatee for"}},"getCurrentVotes(address)":{"params":{"account":"The address to get votes balance"},"returns":{"_0":"The number of current votes for `account`"}},"getOwner()":{"details":"Returns the bep token owner."},"getPriorVotes(address,uint256)":{"details":"Block number must be a finalized block or else this function will revert to prevent misinformation.","params":{"account":"The address of the account to check","blockNumber":"The block number to get the vote balance at"},"returns":{"_0":"The number of votes the account had as of the given block"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(uint256)":{"details":"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"},"name()":{"details":"Returns the token name."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the token symbol."},"totalSupply()":{"details":"See {BEP20-totalSupply}."},"transfer(address,uint256)":{"details":"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"events":{"DelegateChanged(address,address,address)":{"notice":"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{"notice":"An event thats emitted when a delegate account's vote balance changes"}},"kind":"user","methods":{"DELEGATION_TYPEHASH()":{"notice":"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{"notice":"The EIP-712 typehash for the contract's domain"},"checkpoints(address,uint32)":{"notice":"A record of votes checkpoints for each account, by index"},"delegate(address)":{"notice":"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Delegates votes from signatory to `delegatee`"},"delegates(address)":{"notice":"Delegate votes from `msg.sender` to `delegatee`"},"getCurrentVotes(address)":{"notice":"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{"notice":"Determine the prior number of votes for an account as of a block number"},"mint(address,uint256)":{"notice":"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."},"nonces(address)":{"notice":"A record of states for signing / validating signatures"},"numCheckpoints(address)":{"notice":"The number of checkpoints for each account"}},"version":1}},"settings":{"compilationTarget":{"contracts/HowlToken.sol":"HowlToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/HowlToken.sol":{"keccak256":"0x5fbe0ea573ecd141433c61ee011c1340703bbfc0f98b18cdffaef3f86f9b10da","urls":["bzz-raw://9597efead0a3ed50fe79b183b60700b80e3c26f2099fda51eb04d6f839a05df6","dweb:/ipfs/QmQeCfz9i5ouowQ2nFwoDYVd53fNxTNDn3BFCe3iTg7qAa"]},"contracts/libs/GSN/Context.sol":{"keccak256":"0x4148ca08b60e848006a6051217916fb58a4ea9d6f825a345d99fbbc50f9b7c09","urls":["bzz-raw://ea7bddb9cbbd38729c17e5b336bc6919a4618738357817f0ad9ad861cca4b4d7","dweb:/ipfs/QmRXqYsQgzndjSQJ29VrGofSxJAdsNzinBbj3cXu5BL2m3"]},"contracts/libs/access/Ownable.sol":{"keccak256":"0xe322133878eef3cf881446a429def0dd0e31d36304538bb76b451cba50578dba","urls":["bzz-raw://82ff89869b1e5d11fff734d8799556293f0ca30bc55e1c7206db141e7b8c9e5c","dweb:/ipfs/Qmc7UrWt39wTtzko9uDN1DNfFtYUX9CzHDwLEsz42z2ozN"]},"contracts/libs/math/SafeMath.sol":{"keccak256":"0x9ed09430799b39e964ba0a2c16d93e6ef107338413cdbdbc2837ee7440706447","license":"MIT","urls":["bzz-raw://5e941b0d3fdbd6e8c803ff762c6ff4aef6a0c3cb4023ffd939c6f7fec138f2d0","dweb:/ipfs/QmXsbw7m5SrbYvYkP8wRRu1zcVGJbj7m6xwnWg2XbugLLA"]},"contracts/libs/token/BEP20/BEP20.sol":{"keccak256":"0xdc1b9d314f11a694be6bd30b1378dd700d1dbe2b64b3fe47894774df0907ab55","license":"MIT","urls":["bzz-raw://2235197bbe2d676bbeab8e0d3be5f74e74c9ffc35e137f1950ee272b5b1c4ec5","dweb:/ipfs/QmVCGUTteH6irfZQmev3JQHHZur8QweA7f6str9rtUuzaj"]},"contracts/libs/token/BEP20/IBEP20.sol":{"keccak256":"0x3b66ec93d0fcbba70208f244eef66e74acfcc295f582ac28610e855ad8d1054c","urls":["bzz-raw://b02c1f72f181dd106d32389e4d8422018aa0ba1a69671fb9b3455f10e0f5d508","dweb:/ipfs/QmaSKyo4aspTGrmoMNfpBjEN9KqcBRicEmjyjdQq4UoSRR"]},"contracts/libs/utils/Address.sol":{"keccak256":"0x7ffea9d334117285ef78893e33b26d97c82404c3d804e692bb517da2624b2480","license":"MIT","urls":["bzz-raw://6c1e8d4f0f7a6ba11315ba3728eb4bb996ac47f2c9863ad4f0f7df5bed771a5f","dweb:/ipfs/QmXdhUzombSb7e8EMj5pWYQNKYqhnQGa33THJ9PyctkjM7"]}},"version":1},"version":1,"checkPoints":[]}