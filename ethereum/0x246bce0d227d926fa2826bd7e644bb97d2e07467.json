{"address":"0x246BCE0D227D926fa2826bd7E644bB97d2e07467","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"uint256","name":"endOfTurn_","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"_price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimCrown","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"claimPrice","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"king","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"remainingBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"claimCrown()":{"details":" This is the main and most important functionality of this game, to claim the crown by claiming the crown, we mean, of course, placing the highest bid,  you can only place twice as much as the latest bid place, this is controlled by the modifier  'costs' that is located in AccessControl, why did I choose to do so ?  For the main reason that, placing a bid twice as much as the latest one, means that you become a KING,  for that a ROLE is GRANTED to you, and another's player role is being REVOKED, to keep track of that is the main function of AccessControl.sol  *"},"remainingBlock()":{"details":"This function servers to see the remaining blocks before the end of the turn, it's like a clock tic-tacking before  no one can claim the crown anymore, and only the king can interract with the smart-contract, therefore reseting it for another turn. "}},"stateVariables":{"_endOfTurn":{"details":"The first one is a variable keep track of the blocknumber, it will store the block.number where our game will end and no more bids can be placed anymore."},"_price":{"details":" Storage Variables Monetary Values : These three following storage variables are there to keep track of the money that is flowing into  the smart-contract, the _price will track the highest bid. \"_ownerProfit\" will be used to send the profit earned in total, by the deployer and coder of the contract. the \"_tax\" is the immuable in percent, ammount of tax that the owner can apply, we set it as 10%"}},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"This is our constructor, it takes two paramettersn, an owner, and the number of blocks from the time of the deployment that the game will run until the only public accessible function of this game will be frozen.  this constructor, respond to the one in AccessControl.sol in order to set up an owner, AccessControl is the file where we manage all the roles and modifiers, functions, related to these roles.  finally, we make that constructor payable, in order to place an inital bid, the one that will put that inital bid can not play again, we'll see that later. The seed value of the bid must be above 0 eth, then, after the first turn of the game,  the value will reset itself depending of the price of the king at the end of a turn (10%)"}},"version":1}},"settings":{"compilationTarget":{"contracts/KingOfTheHill.sol":"KingOfTheHill"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/AccessControl.sol":{"keccak256":"0x25402d3ccafd01b8778c8a8df49596661eac066825e79dc5019b586137c11e4f","license":"MIT","urls":["bzz-raw://7e0c4b79d2be2e811bd645eb83208d19dffaea6b4d41cece3967a0ba8639edd4","dweb:/ipfs/QmU181PLM5Acv6dbtTVSBED3Pi1Pv93yzxCPhc38pzaXSC"]},"contracts/KingOfTheHill.sol":{"keccak256":"0xb8fa75f9cc53426a6b3cb53eb9a38f2add61bd203324961d5e0f793ea184526d","license":"MIT","urls":["bzz-raw://7bcf25582b53ddce814dcf81ec5494da4dd68d372aa6b1f9e584d11aee3295b2","dweb:/ipfs/QmapdY5vkdSRY4J9XF46LHKFzbWuJDAvpLgdSddy1H5V5T"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol":{"keccak256":"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45","license":"MIT","urls":["bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e","dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"]}},"version":1},"version":1,"checkPoints":[]}