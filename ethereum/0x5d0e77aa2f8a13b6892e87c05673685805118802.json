{"address":"0x5D0e77aA2F8a13B6892e87c05673685805118802","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract MarsPoolToken","name":"_lpt","type":"address"},{"internalType":"uint256","name":"_maxLPTAvailableForFarming","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"},{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_erc20Token","type":"address"},{"internalType":"uint256","name":"_maxStakingAmountPerUser","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpt","outputs":[{"internalType":"contract MarsPoolToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lptPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxLPTAvailableForFarming","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numberOfPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingLpt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accLptPerShare","type":"uint256"},{"internalType":"uint256","name":"maxStakingAmountPerUser","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"uint256","name":"_maxStakingAmountPerUser","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"BlockRocket.tech","details":"Only the owner can add new pools","kind":"dev","methods":{"add(uint256,address,uint256,bool)":{"details":"Can only be called by the contract owner","params":{"_allocPoint":"Governs what percentage of the total LPT rewards this pool and other pools will get","_erc20Token":"Address of the staking token being whitelisted","_maxStakingAmountPerUser":"For this pool, maximum amount per user that can be staked","_withUpdate":"Set to true for updating all pools before adding this one"}},"constructor":{"params":{"_endBlock":"Block number when farming will end for all pools","_lpt":"Address of the LPT reward token","_maxLPTAvailableForFarming":"Maximum number of LPT that will be distributed between the start and end of farming","_startBlock":"Block number when farming will begin for all pools"}},"deposit(uint256,uint256)":{"params":{"_amount":"Amount of ERC20 being staked","_pid":"ID of the pool"}},"emergencyWithdraw(uint256)":{"params":{"_pid":"Pool ID"}},"numberOfPools()":{"returns":{"_0":"Number of pools"}},"owner()":{"details":"Returns the address of the current owner."},"pendingLpt(uint256,address)":{"params":{"_pid":"ID of the pool where a user has a stake","_user":"Account being queried"},"returns":{"_0":"Amount of LPT tokens due to a user"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"set(uint256,uint256,uint256,bool)":{"details":"Can only be called by the owner","params":{"_allocPoint":"New allocation point","_maxStakingAmountPerUser":"Maximum amount that a user can deposit into the far","_pid":"ID of the pool being updated","_withUpdate":"Set to true if you want to update all pools before making this change - it will checkpoint those rewards"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updatePool(uint256)":{"params":{"_pid":"ID of the pool"}},"withdraw(uint256,uint256)":{"details":"Partial withdrawals permitted","params":{"_amount":"Being withdrawn","_pid":"Pool ID"}}},"title":"Staking contract for farming LPT rewards in return for staking a whitelisted token(s)","version":1},"userdoc":{"kind":"user","methods":{"add(uint256,address,uint256,bool)":{"notice":"Create a new LPT pool by whitelisting a new ERC20 token."},"deposit(uint256,uint256)":{"notice":"Where any user can stake their ERC20 tokens into a pool in order to farm $LPT"},"emergencyWithdraw(uint256)":{"notice":"Emergency only. Should the rewards issuance mechanism fail, people can still withdraw their stake"},"endBlock()":{"notice":"The block number when rewards ends."},"lpt()":{"notice":"The reward token aka $LPT"},"lptPerBlock()":{"notice":"Number of LPT tokens distributed per block, across all pools."},"massUpdatePools()":{"notice":"Cycles through the pools to update all of the rewards accrued"},"maxLPTAvailableForFarming()":{"notice":"The total amount of reward token available for farming across all pools between start and end block."},"numberOfPools()":{"notice":"Returns the number of pools that have been added by the owner"},"pendingLpt(uint256,address)":{"notice":"View function to see pending and unclaimed LPTs for a given user"},"poolInfo(uint256)":{"notice":"List of pools that users can stake into"},"set(uint256,uint256,uint256,bool)":{"notice":"Update a pool's allocation point to increase or decrease its share of contract-level rewardsCan also update the max amount that can be staked per user"},"startBlock()":{"notice":"The block number when LPT rewards starts across all pools."},"totalAllocPoint()":{"notice":"Total allocation points. Must be the sum of all allocation points in all pools."},"updatePool(uint256)":{"notice":"Updates a specific pool to track all of the rewards accrued up to the TX block"},"userInfo(uint256,address)":{"notice":"Per pool, info of each user that stakes ERC20 tokens.Pool ID => User Address => User Info"},"withdraw(uint256,uint256)":{"notice":"Allows a user to withdraw any ERC20 tokens staked in a pool"}},"notice":"Fork of MasterChef.sol from SushiSwap","version":1}},"settings":{"compilationTarget":{"browser/contracts/MarsPoolStaking.sol":"MarsPoolStaking"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/contracts/MarsPoolStaking.sol":{"keccak256":"0x49777b7c5650fee2e7bac3003bb0723da87dac864c9f261ae82eb8f4cd5f13c2","license":"MIT","urls":["bzz-raw://8ffabef2fb9730aa988836fddc2d577a8a1c0ee4c5bff4d3901beff268c9de21","dweb:/ipfs/QmbZoQVTYLDS47KAZvgbYpRXoCiJRmg5tnsoQASGMBWk38"]},"browser/contracts/MarsPoolToken.sol":{"keccak256":"0x9669926b8b307ce5c32e7fa435b740a806aace82f7938b19653fa338e82c1199","urls":["bzz-raw://1c06df258d761b8102994bb7146be093ba16e48e11125f82161c263b82055b6e","dweb:/ipfs/QmbZf7bhRK1M59CxYYEWkBXRb8iirkAS7AuEg82QGVoeVR"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","license":"MIT","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xf204d98eef08edacf5a02a2af1516ea4febdb6aba7a1ae5ac8deb6e568fd3dbb","license":"MIT","urls":["bzz-raw://c4dea62bffbd180772a6cfe7cb90e3a045c52d6b502bdb2fdff83193da42d8d0","dweb:/ipfs/QmW8qGZ5nngajmv5Aamdrpkeuq7S5YCVaR7rtcqNekKHtK"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","license":"MIT","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27","license":"MIT","urls":["bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3","dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/utils/Address.sol":{"keccak256":"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498","license":"MIT","urls":["bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff","dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/utils/EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","license":"MIT","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]}},"version":1},"version":1,"checkPoints":[]}