{"address":"0xa15AB615451ce64D52Ad958f39929244215015C7","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"}],"name":"getFirstPool","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"}],"name":"hasMultiplePools","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"}],"name":"numPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"}],"name":"skipToken","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"getFirstPool(bytes)":{"params":{"path":"The bytes encoded swap path"},"returns":{"_0":"The segment containing all data necessary to target the first pool in the path"}},"hasMultiplePools(bytes)":{"params":{"path":"The encoded swap path"},"returns":{"_0":"True if path contains two or more pools, otherwise false"}},"numPools(bytes)":{"params":{"path":"The encoded swap path"},"returns":{"_0":"The number of pools in the path"}},"skipToken(bytes)":{"params":{"path":"The swap path"},"returns":{"_0":"The remaining token + fee elements in the path"}}},"stateVariables":{"ADDR_SIZE":{"details":"The length of the bytes encoded address"},"FEE_SIZE":{"details":"The length of the bytes encoded fee"},"MULTIPLE_POOLS_MIN_LENGTH":{"details":"The minimum length of an encoding that contains 2 or more pools"},"NEXT_OFFSET":{"details":"The offset of a single token address and pool fee"},"POP_OFFSET":{"details":"The offset of an encoded pool key"}},"title":"Functions for manipulating path data for multihop swaps","version":1},"userdoc":{"kind":"user","methods":{"getFirstPool(bytes)":{"notice":"Gets the segment corresponding to the first pool in the path"},"hasMultiplePools(bytes)":{"notice":"Returns true iff the path contains two or more pools"},"numPools(bytes)":{"notice":"Returns the number of pools in the path"},"skipToken(bytes)":{"notice":"Skips a token + fee element from the buffer and returns the remainder"}},"version":1}},"settings":{"compilationTarget":{"github/Uniswap/uniswap-v3-periphery/contracts/libraries/Path.sol":"Path"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"github/Uniswap/uniswap-v3-periphery/contracts/libraries/BytesLib.sol":{"keccak256":"0x2bf7e2af781f6f129cdc7f1f8bbf808349f00d6f2a32a6495092c68bd4dafdc0","license":"GPL-2.0-or-later","urls":["bzz-raw://909a876a31fe5a41a80c6d8f24cf08cce61866a4032eb1bf60e4777e7215036f","dweb:/ipfs/QmVwiLKdxr4oKz8MqyS7pMWEfHad4VP3ZBbGX1iep98bCR"]},"github/Uniswap/uniswap-v3-periphery/contracts/libraries/Path.sol":{"keccak256":"0x52fb584f98d17f405357a6bed54e8e1b9b77439f512d319de1d8cde09a5d35bb","license":"GPL-2.0-or-later","urls":["bzz-raw://39ded9823ada59d4f467993b8d3f6d1ad2a20d5ca225db50c1766b73b6a8d131","dweb:/ipfs/QmfPc2J85MtFqk7RssAnVBoUKuu5dEFm6g8kjTiDd7Zz25"]}},"version":1},"version":1,"checkPoints":[]}