{"address":"0x86a37a81471Bc835f192839240CE50003099fD92","name":"","metadata":{"compiler":{"version":"0.8.3+commit.8d00100c"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"Freeze","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[],"name":"Unfreeze","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burnTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"calculateFee","outputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"createTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"delegatedTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"flags","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"freezeTransfers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeParameters","outputs":[{"internalType":"uint256","name":"_fixedFee","type":"uint256"},{"internalType":"uint256","name":"_minVariableFee","type":"uint256"},{"internalType":"uint256","name":"_maxVariableFee","type":"uint256"},{"internalType":"uint256","name":"_variableFeeNumnerator","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_flags","type":"uint256"}],"name":"setFlags","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unfreezeTransfers","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"params":{"_owner":"address to get number of tokens allowed to be transferred        from the owner of","_spender":"address to get number of tokens allowed to be transferred        by the owner of"},"returns":{"remaining":"number of tokens given spender is currently allowed to transfer         from given owner"}},"approve(address,uint256)":{"params":{"_spender":"address to allow the owner of to transfer tokens from        message sender","_value":"number of tokens to allow to transfer"},"returns":{"success":"true if token transfer was successfully approved, false otherwise"}},"balanceOf(address)":{"params":{"_owner":"address to get number of tokens currently belonging to the        owner of"},"returns":{"balance":"number of tokens currently belonging to the owner of given address"}},"burnTokens(uint256)":{"params":{"_value":"number of tokens to burn"}},"calculateFee(uint256)":{"params":{"_amount":"transfer amount to calculate fee for"},"returns":{"_fee":"fee for transfer of given amount"}},"createTokens(uint256)":{"params":{"_value":"number of tokens to be created."}},"decimals()":{"returns":{"_0":"number of decimals for the token"}},"delegatedTransfer(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"_fee":"number of tokens to give to message sender","_nonce":"nonce of the transfer","_r":"parameter R of digital signature","_s":"parameter S of digital signature","_to":"address to transfer token to the owner of","_v":"parameter V of digital signature","_value":"number of tokens to transfer"}},"flags(address)":{"params":{"_address":"address to get flags for"},"returns":{"_0":"flags for given address"}},"getFeeParameters()":{"returns":{"_fixedFee":"fixed fee","_maxVariableFee":"maximum variable fee","_minVariableFee":"minimum variable fee","_variableFeeNumnerator":"variable fee numerator"}},"name()":{"returns":{"_0":"name of the token"}},"nonce(address)":{"params":{"_owner":"address of the token holder to get nonce for"},"returns":{"_0":"current nonce for token holder with give address"}},"setFlags(address,uint256)":{"params":{"_address":"address to set flags for","_flags":"flags to set"}},"setOwner(address)":{"params":{"_newOwner":"address of the new owner"}},"symbol()":{"returns":{"_0":"symbol of the token"}},"totalSupply()":{"returns":{"_0":"total number of tokens in circulation"}},"transfer(address,uint256)":{"params":{"_to":"address to transfer tokens to the owner of","_value":"number of tokens to transfer to the owner of given address"},"returns":{"_0":"true if tokens were transferred successfully, false otherwise"}},"transferFrom(address,address,uint256)":{"params":{"_from":"address to transfer tokens from the owner of","_to":"address to transfer tokens to the owner of","_value":"number of tokens to transfer from given owner to given        recipient"},"returns":{"_0":"true if tokens were transferred successfully, false otherwise"}}},"stateVariables":{"BLACK_LIST_FLAG":{"details":"Address flag that marks black listed addresses."},"FEE_DENOMINATOR":{"details":"Fee denominator (0.001%)."},"MAX_FEE_NUMERATOR":{"details":"Maximum fee numerator (100%)."},"MAX_TOKENS_COUNT":{"details":"Maximum allowed number of tokens in circulation."},"addressFlags":{"details":"Maps address to its flags."},"delegate":{"details":"Address of smart contract to delegate execution of delegatable methods to, or zero to not delegate delegatable methods execution.  Not used in upgrade."},"feeCollector":{"details":"Address where fees are sent to.  Not used anymore."},"fixedFee":{"details":"Fixed fee amount in token units.  Not used anymore."},"frozen":{"details":"Whether token transfers are currently frozen."},"maxVariableFee":{"details":"Maximum variable fee in token units.  Not used anymore."},"minVariableFee":{"details":"Minimum variable fee in token units.  Not used anymore."},"nonces":{"details":"Mapping from sender's address to the next delegated transfer nonce."},"owner":{"details":"Owner of the smart contract."},"tokensCount":{"details":"Number of tokens in circulation."},"variableFeeNumerator":{"details":"Variable fee numerator.  Not used anymore."}},"version":1},"userdoc":{"events":{"Approval(address,address,uint256)":{"notice":"Logged when owner approved his tokens to be transferred by some spender."},"Freeze()":{"notice":"Logged when token transfers were frozen."},"Transfer(address,address,uint256)":{"notice":"Logged when tokens were transferred from one owner to another."},"Unfreeze()":{"notice":"Logged when token transfers were unfrozen."}},"kind":"user","methods":{"allowance(address,address)":{"notice":"Tell how many tokens given spender is currently allowed to transfer from given owner."},"approve(address,uint256)":{"notice":"Allow given spender to transfer given number of tokens from message sender."},"balanceOf(address)":{"notice":"Get number of tokens currently belonging to given owner."},"burnTokens(uint256)":{"notice":"Burn tokens."},"calculateFee(uint256)":{"notice":"Calculate fee for transfer of given number of tokens."},"constructor":{"notice":"Create EURS Token smart contract with message sender as an owner."},"createTokens(uint256)":{"notice":"Create tokens."},"decimals()":{"notice":"Get number of decimals for the token."},"delegatedTransfer(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Transfer given number of token from the signed defined by digital signature to given recipient."},"flags(address)":{"notice":"Get flags for given address."},"freezeTransfers()":{"notice":"Freeze token transfers."},"getFeeParameters()":{"notice":"Get fee parameters."},"name()":{"notice":"Get name of the token."},"nonce(address)":{"notice":"Get current nonce for token holder with given address, i.e. nonce this token holder should use for next delegated transfer."},"setFlags(address,uint256)":{"notice":"Set flags for given address."},"setOwner(address)":{"notice":"Set smart contract owner."},"symbol()":{"notice":"Get symbol of the token."},"totalSupply()":{"notice":"Get total number of tokens in circulation."},"transfer(address,uint256)":{"notice":"Transfer given number of tokens from message sender to given recipient."},"transferFrom(address,address,uint256)":{"notice":"Transfer given number of tokens from given owner to given recipient."},"unfreezeTransfers()":{"notice":"Unfreeze token transfers."}},"notice":"EURS Token Smart Contract: EIP-20 compatible token smart contract that manages EURS tokens.","version":1}},"settings":{"compilationTarget":{"EURSToken.sol":"EURSToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"AbstractToken.sol":{"keccak256":"0x4af09c12d8b6c22d8260d2822aef143b79c6d1bc8ae175a8f358864590644740","license":"UNLICENSED","urls":["bzz-raw://ccbbec32608fdeb2f63733064ee6a1e7f41a1d4077d3c5362a4dccf34b343bfe","dweb:/ipfs/QmTrrNeGVQPbCUKdEifGw9A8jmQiYPamKJ2G334GWfza1L"]},"EURSToken.sol":{"keccak256":"0x29a2ff89a1e291a2d424f2a559cca40877eac43f53a31d56e5f08cb44a2269b0","license":"UNLICENSED","urls":["bzz-raw://e3ea6e7227949dc817122cd20bc69b15808ca7b54cabbd992391a9308fd0e15d","dweb:/ipfs/Qme7bd3iWtofUjub61wPD4PCq4CAvjSunod7vJL25FnSn5"]},"Token.sol":{"keccak256":"0x2c6944c80d962b0fc0b1a149e53d81adba86a1016008aeea81c227af23774b2b","license":"UNLICENSED","urls":["bzz-raw://94e876a2d8b498003fd70a2586ddd5ff9e06053b316a228be54efb13fc540a5a","dweb:/ipfs/QmeWK8vTr6cktofoeDzBLas5wWVCVrbSzLS2JxZKRLbEwY"]}},"version":1},"version":1,"checkPoints":[]}