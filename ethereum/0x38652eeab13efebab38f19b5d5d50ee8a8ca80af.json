{"address":"0x38652eEab13efEBAB38f19B5D5d50Ee8a8ca80aF","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"int24","name":"_baseThreshold","type":"int24"},{"internalType":"int24","name":"_limitThreshold","type":"int24"},{"internalType":"int24","name":"_maxTwapDeviation","type":"int24"},{"internalType":"uint32","name":"_twapDuration","type":"uint32"},{"internalType":"uint256","name":"_rebalanceCooldown","type":"uint256"},{"internalType":"uint256","name":"_maxTotalSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint256","name":"totalAmount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"Rebalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"DUST_THRESHOLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_TOTAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseLower","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseThreshold","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseUpper","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"amount0Max","type":"uint256"},{"internalType":"uint256","name":"amount1Max","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dev","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"name":"emergencyBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finalize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBasePosition","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLimitPosition","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalAmounts","outputs":[{"internalType":"uint256","name":"total0","type":"uint256"},{"internalType":"uint256","name":"total1","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTwap","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"keeper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"limitLower","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"limitThreshold","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"limitUpper","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTwapDeviation","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingGovernance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"internalType":"contract IUniswapV3Pool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalanceCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"_baseThreshold","type":"int24"}],"name":"setBaseThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_dev","type":"address"}],"name":"setDev","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governance","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_keeper","type":"address"}],"name":"setKeeper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"_limitThreshold","type":"int24"}],"name":"setLimitThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxTotalSupply","type":"uint256"}],"name":"setMaxTotalSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"_maxTwapDeviation","type":"int24"}],"name":"setMaxTwapDeviation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rebalanceCooldown","type":"uint256"}],"name":"setRebalanceCooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_twapDuration","type":"uint32"}],"name":"setTwapDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"twapDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3MintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"params":{"_baseThreshold":"Used to determine base range","_limitThreshold":"Used to determine limit range","_maxTotalSupply":"Pause deposits if total supply exceeds this","_maxTwapDeviation":"Max deviation from TWAP during rebalance","_pool":"Underlying Uniswap V3 pool","_rebalanceCooldown":"Min time between rebalance() calls in seconds","_twapDuration":"TWAP duration in seconds for rebalance check"}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"deposit(uint256,uint256,uint256,address)":{"params":{"amount0Max":"Revert if resulting amount0 is larger than this","amount1Max":"Revert if resulting amount1 is larger than this","shares":"Shares minted to recipient","to":"Recipient of shares"},"returns":{"amount0":"Amount of token0 paid by sender","amount1":"Amount of token1 paid by sender"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"uniswapV3MintCallback(uint256,uint256,bytes)":{"details":"Callback for Uniswap V3 pool."},"withdraw(uint256,uint256,uint256,address)":{"params":{"amount0Min":"Revert if resulting amount0 is smaller than this","amount1Min":"Revert if resulting amount1 is smaller than this","shares":"Shares burned by sender","to":"Recipient of tokens"},"returns":{"amount0":"Amount of token0 sent to recipient","amount1":"Amount of token1 sent to recipient"}}},"title":"Passive Rebalance Vault","version":1},"userdoc":{"kind":"user","methods":{"acceptGovernance()":{"notice":"setGovernance() should be called by the existing governance address prior to calling this function."},"deposit(uint256,uint256,uint256,address)":{"notice":"Deposit tokens in proportion to the vault's holdings."},"emergencyBurn(int24,int24,uint128)":{"notice":"Burn liquidity and transfer tokens to governance in case of emergency. Cannot be called if already finalized."},"emergencyWithdraw(address,uint256)":{"notice":"Transfer tokens to governance in case of emergency. Cannot be called if already finalized."},"finalize()":{"notice":"Renounce emergency powers."},"getBasePosition()":{"notice":"Calculate liquidity and equivalent token amounts of base order."},"getLimitPosition()":{"notice":"Calculate liquidity and equivalent token amounts of limit order."},"getTotalAmounts()":{"notice":"Calculate total holdings of token0 and token1, or how much of each token this vault would hold if it withdrew all its liquidity."},"getTwap()":{"notice":"Fetch TWAP from Uniswap V3 pool. If `twapDuration` is 0, returns current price."},"rebalance()":{"notice":"Update vault's positions depending on how the price has moved. Reverts if cooldown period after last rebalance hasn't elapsed, or if current price deviates too much from the TWAP, or if current price is too close to boundary."},"setGovernance(address)":{"notice":"Governance address is not updated until the new governance address has called acceptGovernance() to accept this responsibility."},"withdraw(uint256,uint256,uint256,address)":{"notice":"Withdraw tokens in proportion to the vault's holdings."}},"notice":"Automatically manages liquidity on Uniswap V3 on behalf of users.          When a user calls deposit(), they have to add amounts of the two          tokens proportional to the vault's current holdings. These are          directly deposited into the Uniswap V3 pool. Similarly, when a user          calls withdraw(), the proportion of liquidity is withdrawn from the          pool and the resulting amounts are returned to the user.          The rebalance() method has to be called periodically. This method          withdraws all liquidity from the pool, collects fees and then uses          all the tokens it holds to place the two range orders below.              1. Base order is placed between X - B and X + B + TS.              2. Limit order is placed between X - L and X, or between X + TS                 and X + L + TS, depending on which token it holds more of.          where:              X = current tick rounded down to multiple of tick spacing              TS = tick spacing              B = base threshold              L = limit threshold          Note that after the rebalance, the vault should theoretically          have deposited all its tokens and shouldn't have any unused          balance. The base order deposits equal values, so it uses up          the entire balance of whichever token it holds less of. Then, the          limit order is placed only one side of the current price so that          the other token which it holds more of is used up.","version":1}},"settings":{"compilationTarget":{"RoboVaults.sol":"PassiveRebalanceVault"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"Address.sol":{"keccak256":"0x17de04c9a869de25c86566a4d0ae5569374884a54ac619506073b14197d2f6ed","license":"MIT","urls":["bzz-raw://c5910c7dce55c17825ea964237054a544f164e854732bfdfaf593b612a89f57b","dweb:/ipfs/QmUQ2gzqoAvYcJ5LqdUEsbMY8aA7tWxFKZjVt8tFgttEVu"]},"Context.sol":{"keccak256":"0xa475c1685349498b21fd15bf23d66cc09480745186a5854b010784b620ffe4f3","license":"MIT","urls":["bzz-raw://7aa171a3b0aeabd7b31b94cf63eb14df9fd3d2e3a12d5ba3d9a634a789871196","dweb:/ipfs/QmNwZDsCn4Af9Uyw3syohXAAoe9pAwCuvCm6FZXG3Hv5ka"]},"ERC20.sol":{"keccak256":"0xf3563cc27a649724dbd630b3ce0575193edc5411a332f64fc547e81aca576566","license":"MIT","urls":["bzz-raw://4d131757bb079eba7da1c2e53b097b65d6f8d15fdbc0f4b00a06c0de18e32d26","dweb:/ipfs/QmezxTUKdYcUCu1BPU3GmMWQEmxMUce5m91q6Fd78hyLb4"]},"FixedPoint96.sol":{"keccak256":"0xb677c7af76c11c1704a190cf481c7d3a2af14a4b4db7547d0f03dff690ee4e1e","license":"GPL-2.0-or-later","urls":["bzz-raw://e8bad520b080ec871ff19a4a5e3c3a49f3e3a33246053a19fbad50c112232f19","dweb:/ipfs/QmZ7G5wybxuewsi5RCRYTWXmDg76X7agHGrPWEPLohr4vm"]},"FullMath.sol":{"keccak256":"0x38f9c8c41e7138c95a6d1a059960b4db41b451e40c6b82f38035c5e8ad224b4c","license":"MIT","urls":["bzz-raw://8b2092e6d76d5b4f08c13355f56ead3447d6ddfca6afe8518149d6d9942aa469","dweb:/ipfs/QmPZSopxFGV7VTpmxYmwZ66DcYCXATW6Zs46pgH43HSA7y"]},"IERC20.sol":{"keccak256":"0x1cf8c1e1a8a8f60671d426bcedba75f5f0509dc74789e2d2475791c0596c33d1","license":"MIT","urls":["bzz-raw://687bcf000696228ec0ab4f0a4a694c5d66386a03e3accb981882e44c267ecc2a","dweb:/ipfs/QmbbfbCnBKTiqC1avw89kfA3wx8nmJWAWL7AAdu2p8DrHp"]},"IUniswapV3MintCallback.sol":{"keccak256":"0x9e9b48f64160dcb1746e3b9ebd1d9204a36f2db9ef86b941daab635b359abda9","license":"GPL-2.0-or-later","urls":["bzz-raw://b2465ae7fe2a2765abb0759cbc2f11139f9d395b27648439f94f73b87f577511","dweb:/ipfs/QmR6NKqEJRQJMCEyAQXJcmoaDwtEwQqwZY8RPfrfxjepB5"]},"IUniswapV3Pool_flat.sol":{"keccak256":"0x22a49f8f14a0aed10b80f66789725c88498c45b9e49ea15f201ed60d01beeba7","license":"GPL-2.0-or-later","urls":["bzz-raw://e848925440b4142be0dcffece885db118ec4efa3daa9bd179a698824d3409564","dweb:/ipfs/Qmf1hEompJqEhXycARdKfZe26THZ5RZWwU8Y1XZWhsvD17"]},"IVault.sol":{"keccak256":"0xebaba19dc23cdf08e2fb895ddd929a009cb0bc6760a3c6db376fe928ebc35d72","license":"Unlicense","urls":["bzz-raw://66feb2717a56eb439f7dfab4ca232a87766d8b2aed6b1fd9690ffafe16d83efc","dweb:/ipfs/QmNVHErkdxRQPD4ffqGhUCmZTiMkrrNnRdcm6DchFj6A42"]},"LiquidityAmounts.sol":{"keccak256":"0x3010d7b67733074c633287388a2dc4646fec3a3b1a4e35a9ae5bfd0b4a4f1357","license":"GPL-2.0-or-later","urls":["bzz-raw://2e038cb417eaa931505b35aa5f55003f34a957b0ac8c77ad92a4e24228483b7c","dweb:/ipfs/QmaDrjjG3yUGPPCAt2GhhS8yFNYdYshXBRzWCTy7RqCdZx"]},"ReentrancyGuard.sol":{"keccak256":"0x10a8bcbbec076292c6e1f73e4f1b494ef365b4af9cbf81f4eb468ade94b3a613","license":"MIT","urls":["bzz-raw://7c022635f275710e68d77c79ef0e59a6beb7f66ecb84a1fa9dbb841b37ddc761","dweb:/ipfs/QmScEmYXgunecKeDKpuyPzHFKFVjTVijrWe4TGyNSMkV3e"]},"RoboVaults.sol":{"keccak256":"0xfec07a37af75f4006d784caebc17334dd64d5e3bdd95f9f8c47be1350c8b90cf","license":"Unlicense","urls":["bzz-raw://7ecda8040650583facb1c1f98cc1e34fe7aa5ca939638ea3ab92b7b4dd885e89","dweb:/ipfs/QmcwUQgyGdmYEuwbrZE8iwoyGn7JHvWPVpZcWdFtVEQqtj"]},"SafeERC20.sol":{"keccak256":"0xfe6bdac4ce5dd838b407a45ef80026e69d5e708141573ed69d3789dc9f13d9d6","license":"MIT","urls":["bzz-raw://07bf9f662f228dbe95dd5665c3b0e86e5e1665039f8fbfb960724b74c1dde651","dweb:/ipfs/QmYwvSRQrWQhEVpVYDwnnwpjXzb4pUFwbWLb4hsAU9Vvd7"]},"SafeMath.sol":{"keccak256":"0x7a187c7031248663ae674cb56acdcea47099c2fa4fde49f91679b14b004e1ce0","license":"MIT","urls":["bzz-raw://5f48576ad6b6ece288d6df1241d22503330c86696f2fb719e61205b2fbc34a8e","dweb:/ipfs/QmYqDwsCFkEZ9UusAZvLReiRCU1UV8GQ8bzHgeRmCVkSAJ"]},"TickMath.sol":{"keccak256":"0xd5d5fc572f416a6f403d56350e5431468376d6285ba28e7322238e509de20f1e","license":"GPL-2.0-or-later","urls":["bzz-raw://763ea79416f4ae4ebd9662ab06004289b2c654bbee8b7ca203d14f2f3765a871","dweb:/ipfs/QmUFCMnMZQoSM7TnHCJrNpQKD9fkQbBRjBWQfjPbUJsZUZ"]}},"version":1},"version":1,"checkPoints":[]}