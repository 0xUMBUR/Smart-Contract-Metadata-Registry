{"address":"0x9Cf53e772473189eAfeC7efA48eD2E1E446fa8FF","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CLAIMING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DELTA_FINANCIAL_MULTISIG","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INTERIM_ADMIN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LSW_RUN_TIME","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_ETH_POOL_SEED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TIME_BONUS_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminEndLSWAndRefundEveryone","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"person","type":"address"}],"name":"allLiquidityContributionsOfAnAddress","outputs":[{"components":[{"internalType":"address","name":"byWho","type":"address"},{"internalType":"uint256","name":"howMuchETHUnits","type":"uint256"},{"internalType":"uint256","name":"contributionTimestamp","type":"uint256"},{"internalType":"uint256","name":"creditsAdded","type":"uint256"}],"internalType":"struct DELTA_Limited_Staking_Window.LiquidityContribution[]","name":"liquidityContributionsOfPerson","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"claimToWalletInstead","type":"bool"}],"name":"claimOrStakeAndClaimLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimedLP","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"readAndAgreedToLiquidityProviderAgreement","type":"bool"},{"internalType":"address","name":"referrerAddress","type":"address"},{"internalType":"uint256","name":"referralID","type":"uint256"}],"name":"contributeLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deltaDeepFarmingVaultAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deltaTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endLiquidityDeployment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"numberSeconds","type":"uint256"}],"name":"extendLSWEndTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"finalizeLSW","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getWETHBonusForReferrals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"liquidityContributedInETHUnitsMapping","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"liquidityContributionsArray","outputs":[{"internalType":"address","name":"byWho","type":"address"},{"internalType":"uint256","name":"howMuchETHUnits","type":"uint256"},{"internalType":"uint256","name":"contributionTimestamp","type":"uint256"},{"internalType":"uint256","name":"creditsAdded","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"liquidityCreditsMapping","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityGenerationEndTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityGenerationHasEnded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityGenerationHasStarted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityGenerationParticipationAgreement","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"liquidityGenerationStartTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"makeRefCode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"onlyInterimAdmin","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"onlyMultisig","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"openRefunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebasingLP","outputs":[{"internalType":"contract IRLP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralBonusWETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralBonusWETHClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralCodeMappingIndexedByAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"referralCodeMappingIndexedByID","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"refundClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundsOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserveVaultAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rlpPerCredit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"secondsLeftInLiquidityGenerationEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deltaToken","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"name":"setDELTAToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"farmingVault","type":"address"}],"name":"setFarmingVaultAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"multisig","type":"address"}],"name":"setMultisig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rlpAddress","type":"address"}],"name":"setRLPWrap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserveVault","type":"address"}],"name":"setReserveVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startLiquidityGeneration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalCreditValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReferralIDs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWETHEarmarkedForReferrers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"allLiquidityContributionsOfAnAddress(address)":{"details":"we loop over all liquidity contributions of a person and return them here for front end display Note this might suffer from gas limits on infura if there are enogh deposits and we are aware of that Its just a nice helper function that is not nessesary"}},"stateVariables":{"UNISWAP_FACTORY":{"details":"All this variables should be set only once. Anything else is a bug."},"claimedLP":{"details":"a boolean flag for an address to signify they have already claimed LP owed to them"},"liquidityContributedInETHUnitsMapping":{"details":"This is ETH contributed by the specific person, it doesn't include any bonuses this is used to handle refunds"},"liquidityContributionsArray":{"details":"An array of all contributions with metadata"},"liquidityGenerationHasStarted":{"details":"variables for length of LSW, separate from constant ones above"},"liquidityGenerationStartTimestamp":{"details":"timestamps are not dynamic and generated upon calling the start function"},"referralBonusWETH":{"details":"we store bonus WETH in this variable because we don't want to send it until LSW is over... Because of the possibility of refund"},"referralBonusWETHClaimed":{"details":"boolean flag if the user already claimed his WETH bonus"},"referralCodeMappingIndexedByID":{"details":"mappings and reverse mapping handling the referral id ( for links to be smaller)"},"refundClaimed":{"details":"mapping of boolean flags if the user already claimed his refund"},"refundsOpen":{"details":"This opens refunds, refunds do not adjust anything except the above mapping. Its important this variable is never triggered"},"rlpPerCredit":{"details":"stored multiplied by 1e12 for change"},"totalCreditValue":{"details":"total Credit inside the smart contract used for ending calculation for rlpPerCredit"},"totalReferralIDs":{"details":"Sequential referral IDs (skipping 0)"}},"version":1},"userdoc":{"kind":"user","methods":{"INTERIM_ADMIN()":{"notice":"the person who sets the multisig wallet, happens only once"},"endLiquidityDeployment()":{"notice":"a publically callable function that ends the LSW, adds liquidity and splits RLP for each credit."},"finalizeLSW(address)":{"notice":"Transfer any remaining tokens in the contract This is done after the claiming period is over in case there are malformed not claimed referal amounts "},"getRefund()":{"notice":"this function allows anyone to refund the eth deposited in case the contract cannot finish This is a nessesary function because of the contrract not having admin controls And is only here as a safety pillow failure"},"getWETHBonusForReferrals()":{"notice":"Sends the bonus WETH to the referer after LSW is over."},"liquidityCreditsMapping(address)":{"notice":"Each person has a credit based on their referrals and other bonuses as well as ETH contributions. This is what is used for owed LP"},"makeRefCode()":{"notice":"publically callable function that assigns a sequential shortened referral ID so a long one doesnt need to be provided in the URL"},"refundClaimed(address)":{"notice":"Variables used for potential refund if the liquidity addition fails. This failover happens 2 days after LSW is supposed to be over, and its is not."},"refundsOpen()":{"notice":"boolean flag that can be initiated if LSW didnt end 2 days after it was supposed to calling the refund function."},"rlpPerCredit()":{"notice":"Calculated at the time of liquidity addition. RLP per each credit"},"setRLPWrap(address)":{"notice":"Helper functions"},"startLiquidityGeneration()":{"notice":"This function starts the LSW and opens deposits and creates the RLP wrap"}},"version":1}},"settings":{"compilationTarget":{"delta.sol":"DELTA_Limited_Staking_Window"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"delta.sol":{"keccak256":"0x47277cc40c1088dbfcfc95c0b0465c5eb87fc90a33d9a4f3636b7a5c55fd5e9e","license":"No","urls":["bzz-raw://90129951f90657b318e033dd0a2c5c459acc7dae0ab3148570a9252d03ae7f0e","dweb:/ipfs/QmfVhbwXdby68FGHbg9RrZkrZm942aNbFx8DgPPC39SESX"]}},"version":1},"version":1,"checkPoints":[]}