{"address":"0x14A588F15a043913b30c19A80049876E4a21fAFb","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listId","type":"uint256"},{"indexed":false,"internalType":"string","name":"listName","type":"string"}],"name":"AddList","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listId","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"AddToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listId","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RemoveToken","type":"event"},{"inputs":[{"internalType":"string","name":"_listName","type":"string"}],"name":"addList","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listId","type":"uint256"},{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"addTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_trader","type":"address"},{"internalType":"address[]","name":"_assetAddresses","type":"address[]"}],"name":"getExternalBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listId","type":"uint256"}],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"getTokensData","outputs":[{"internalType":"string[]","name":"names","type":"string[]"},{"internalType":"string[]","name":"symbols","type":"string[]"},{"internalType":"uint256[]","name":"decimals","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listId","type":"uint256"},{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"getTokensRange","outputs":[{"internalType":"address[]","name":"tokensRange","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listId","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"listCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listId","type":"uint256"},{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"removeTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tcrs","outputs":[{"internalType":"uint256","name":"listId","type":"uint256"},{"internalType":"string","name":"listName","type":"string"},{"internalType":"uint256","name":"activeTokenCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addList(string)":{"params":{"_listName":"Name of new list."},"returns":{"_0":"New list ID."}},"addTokens(uint256,address[])":{"details":"Attempting to add token addresses which are already in the list will cause revert.","params":{"_listId":"ID of list to add new tokens.","_tokens":"Array of token addresses to add."}},"getExternalBalances(address,address[])":{"params":{"_assetAddresses":"Array of token addresses.","_trader":"Account to check balances for."},"returns":{"_0":"Account balances for each token."}},"getTokens(uint256)":{"params":{"_listId":"ID of list to get tokens from."},"returns":{"_0":"Array of token addresses tracked by list."}},"getTokensData(address[])":{"params":{"_tokens":"Array of token addresses."},"returns":{"decimals":"for each token.","names":"for each token.","symbols":"for each token."}},"getTokensRange(uint256,uint256,uint256)":{"params":{"_end":"End index.","_listId":"ID of list to get tokens from.","_start":"Start index."},"returns":{"tokensRange":"Array of active token addresses in index range."}},"isOwner()":{"details":"Returns true if the caller is the current owner."},"isTokenActive(uint256,address)":{"params":{"_listId":"ID of list to get tokens from.","_token":"Token address to check."},"returns":{"_0":"Active status of given token address in list."}},"owner()":{"details":"Returns the address of the current owner."},"removeTokens(uint256,address[])":{"details":"Attempting to remove token addresses which are not active, or not present in the list, will cause revert.","params":{"_listId":"ID of list to remove tokens from.","_tokens":"Array of token addresses to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"dxDAO Token Multi-Registry","version":1},"userdoc":{"kind":"user","methods":{"addList(string)":{"notice":"Add new token list."},"addTokens(uint256,address[])":{"notice":"The owner can add new token(s) to existing list, by address."},"getExternalBalances(address,address[])":{"notice":"Convenience method to get account balances for given tokens."},"getTokens(uint256)":{"notice":"Get all tokens tracked by a token list"},"getTokensData(address[])":{"notice":"Convenience method to get ERC20 metadata for given tokens."},"getTokensRange(uint256,uint256,uint256)":{"notice":"Get active tokens from a list, within a specified index range."},"isTokenActive(uint256,address)":{"notice":"Check if list has a given token address active."},"removeTokens(uint256,address[])":{"notice":"The owner can remove token(s) on existing list, by address."}},"notice":"Maintains multiple token lists, curated by the DAO","version":1}},"settings":{"compilationTarget":{"browser/TokenRegistry.sol":"DXTokenRegistry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/TokenRegistry.sol":{"keccak256":"0xaa75cf711c25fa329acbb8afd7e84b1c7dbea8ba270f898576d32f52c35558b8","urls":["bzz-raw://056e8667b650783ecd08b88c2818ecccb51255dd63d0bc1447ba36610b36dfee","dweb:/ipfs/QmQB4BrCP5k8zDF7unQK9o7PuBVKz6sm2JpmPA6kf5VMT2"]}},"version":1},"version":1,"checkPoints":[]}