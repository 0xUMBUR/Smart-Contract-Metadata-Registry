{"address":"0x068F8339905E65DA559cB6066E0d9F94C3E3b979","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EscapeHatchCalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"emergencyStop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address payable","name":"_escapeHatchDestination","type":"address"}],"name":"escapeHatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable[]","name":"_addresses","type":"address[]"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"multiTransferEqual_L1R","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address[]","name":"_addresses","type":"address[]"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"multiTransferTokenEqual_71p","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address payable[]","name":"_addresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"uint256","name":"_amountSum","type":"uint256"},{"internalType":"uint256[]","name":"_amountsEther","type":"uint256[]"}],"name":"multiTransferTokenEther","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address payable[]","name":"_addresses","type":"address[]"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_amountEther","type":"uint256"}],"name":"multiTransferTokenEtherEqual","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address[]","name":"_addresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"},{"internalType":"uint256","name":"_amountSum","type":"uint256"}],"name":"multiTransferToken_a4A","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable[]","name":"_addresses","type":"address[]"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"name":"multiTransfer_OST","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_address1","type":"address"},{"internalType":"uint256","name":"_amount1","type":"uint256"},{"internalType":"address payable","name":"_address2","type":"address"},{"internalType":"uint256","name":"_amount2","type":"uint256"}],"name":"transfer2","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"emergencyStop()":{"details":"Emergency stop contract in a case of a critical security flaw discovered"},"escapeHatch(address,address)":{"params":{"_token":"to transfer, use 0x0 for ether"}},"multiTransferEqual_L1R(address[],uint256)":{"params":{"_addresses":"Array of addresses to send to","_amount":"Amount to send"}},"multiTransferTokenEqual_71p(address,address[],uint256)":{"params":{"_addresses":"Array of addresses to send to","_amount":"Tokens amount to send to each address","_token":"The token to send"}},"multiTransferTokenEther(address,address[],uint256[],uint256,uint256[])":{"params":{"_addresses":"Array of addresses to send to","_amounts":"Array of token amounts to send","_amountsEther":"Array of Ether amounts to send","_token":"The token to send"}},"multiTransferTokenEtherEqual(address,address[],uint256,uint256)":{"params":{"_addresses":"Array of addresses to send to","_amount":"Tokens amount to send to each address","_amountEther":"Ether amount to send","_token":"The token to send"}},"multiTransferToken_a4A(address,address[],uint256[],uint256)":{"params":{"_addresses":"Array of addresses to send to","_amountSum":"Sum of the _amounts array to send","_amounts":"Array of token amounts to send","_token":"The token to send"}},"multiTransfer_OST(address[],uint256[])":{"params":{"_addresses":"Array of addresses to send to","_amounts":"Array of amounts to send"}},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transfer2(address,uint256,address,uint256)":{"params":{"_address1":"Address to send to","_address2":"Address to send to","_amount1":"Amount to send to _address1","_amount2":"Amount to send to _address2"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"escapeHatch(address,address)":{"notice":"The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened"},"multiTransferEqual_L1R(address[],uint256)":{"notice":"Send equal Ether amount to multiple addresses.  Payable"},"multiTransferTokenEqual_71p(address,address[],uint256)":{"notice":"Send equal ERC20 tokens amount to multiple contracts"},"multiTransferTokenEther(address,address[],uint256[],uint256,uint256[])":{"notice":"Send ERC20 tokens and Ether to multiple addresses  using three arrays which includes the address and the amounts."},"multiTransferTokenEtherEqual(address,address[],uint256,uint256)":{"notice":"Send equal ERC20 tokens amount to multiple addresses"},"multiTransferToken_a4A(address,address[],uint256[],uint256)":{"notice":"Send ERC20 tokens to multiple addresses  using two arrays which includes the address and the amount."},"multiTransfer_OST(address[],uint256[])":{"notice":"Send to multiple addresses using two arrays which  includes the address and the amount.  Payable"},"transfer2(address,uint256,address,uint256)":{"notice":"Send to two addresses  Payable"}},"notice":"`MultiSend` is a contract for sending multiple ETH/ERC20 Tokens to multiple addresses. Used for the https://ethereumico.io/multisend service and in the [Ethereum Wallet](https://wordpress.org/plugins/ethereum-wallet/) and [ERC20 Dividend Payments WordPress](https://ethereumico.io/product/erc20-dividend-payments/) plugins implementation","version":1}},"settings":{"compilationTarget":{"browser/MultiSend.sol":"MultiSend"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":1337},"remappings":[]},"sources":{"browser/MultiSend.sol":{"keccak256":"0xe1d3fd8fa3672364400e765b2f6c222ec828f824575e92857ac0d3921dab3058","license":"GPL-3.0-or-later","urls":["bzz-raw://ee107c3490864000dc337ef8ab352528c70d4f859796804b4c17d5793c59ce62","dweb:/ipfs/QmThA62b4cyiAcaDsEock8wP8gUSFsaAAanM1H3QhrPtKr"]}},"version":1},"version":1,"checkPoints":[]}