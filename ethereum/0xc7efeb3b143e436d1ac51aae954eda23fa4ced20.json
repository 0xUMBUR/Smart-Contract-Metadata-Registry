{"address":"0xC7efeB3b143E436d1aC51Aae954eda23fA4ced20","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_mdt","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"}],"name":"CancelOracleRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"specId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"},{"indexed":false,"internalType":"address","name":"callbackAddr","type":"address"},{"indexed":false,"internalType":"bytes4","name":"callbackFunctionId","type":"bytes4"},{"indexed":false,"internalType":"uint256","name":"cancelExpiration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dataVersion","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"OracleRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"EXPIRY_TIME","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes4","name":"_callbackFunc","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"}],"name":"cancelOracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_requestId","type":"bytes32"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"address","name":"_callbackAddress","type":"address"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_expiration","type":"uint256"},{"internalType":"bytes32","name":"_data","type":"bytes32"}],"name":"fulfillOracleRequest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_node","type":"address"}],"name":"getAuthorizationStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMeFiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"bytes32","name":"_specId","type":"bytes32"},{"internalType":"address","name":"_callbackAddress","type":"address"},{"internalType":"bytes4","name":"_callbackFunctionId","type":"bytes4"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_dataVersion","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"oracleRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_node","type":"address"},{"internalType":"bool","name":"_allowed","type":"bool"}],"name":"setFulfillmentPermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":{"details":"Given params must hash to a commitment stored on the contract in order for the request to be valid Emits CancelOracleRequest event.","params":{"_callbackFunc":"The requester's specified callback address","_expiration":"The time of the expiration for the request","_payment":"The amount of payment given (specified in wei)","_requestId":"The request ID"}},"constructor":{"details":"Sets the LinkToken address for the imported LinkTokenInterface","params":{"_mdt":"The address of the MDT"}},"fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":{"details":"Given params must hash back to the commitment stored from `oracleRequest`. Will call the callback address' callback function without bubbling up error checking in a `require` so that the node can get paid.","params":{"_callbackAddress":"The callback address to call for fulfillment","_callbackFunctionId":"The callback function ID to use for fulfillment","_data":"The data to return to the consuming contract","_expiration":"The expiration that the node should respond by before the requester can cancel","_payment":"The payment amount that will be released for the oracle (specified in wei)","_requestId":"The fulfillment request ID that must match the requester's"},"returns":{"_0":"Status if the external call was successful"}},"getAuthorizationStatus(address)":{"params":{"_node":"The address of the Chainlink node"},"returns":{"_0":"The authorization status of the node"}},"getMeFiToken()":{"details":"This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"onTokenTransfer(address,uint256,bytes)":{"details":"The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.","params":{"_amount":"Amount of MDT sent (specified in wei)","_data":"Payload of the transaction","_sender":"Address of the sender"}},"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":{"details":"Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.","params":{"_callbackAddress":"The callback address for the response","_callbackFunctionId":"The callback function ID for the response","_data":"The CBOR payload of the request","_dataVersion":"The specified data version","_nonce":"The nonce sent by the requester","_payment":"The amount of payment given (specified in wei)","_sender":"The sender of the request","_specId":"The Job Specification ID"}},"owner()":{"details":"Returns the address of the current owner."},"setFulfillmentPermission(address,bool)":{"params":{"_allowed":"Bool value to determine if the node can fulfill requests","_node":"The address of the Chainlink node"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(address,uint256)":{"details":"The owner of the contract can be another wallet and does not have to be a Chainlink node","params":{"_amount":"The amount to send (specified in wei)","_recipient":"The address to send the LINK token to"}},"withdrawable()":{"details":"We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage","returns":{"_0":"The amount of withdrawable LINK on the contract"}}},"title":"The MeFi Oracle contract"},"userdoc":{"methods":{"cancelOracleRequest(bytes32,uint256,bytes4,uint256)":{"notice":"Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK sent for the request back to the requester's address."},"constructor":"Deploy with the address of the MDT","fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)":{"notice":"Called by the Chainlink node to fulfill requests"},"getAuthorizationStatus(address)":{"notice":"Use this to check if a node is authorized for fulfilling requests"},"getMeFiToken()":{"notice":"Returns the address of the MDT"},"onTokenTransfer(address,uint256,bytes)":{"notice":"Called when MDT is sent to the contract via `transferAndCall`"},"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)":{"notice":"Creates the Chainlink request"},"setFulfillmentPermission(address,bool)":{"notice":"Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow."},"withdraw(address,uint256)":{"notice":"Allows the node operator to withdraw earned LINK to a given address"},"withdrawable()":{"notice":"Displays the amount of LINK that is available for the node operator to withdraw"}},"notice":"Node operators can deploy this contract to fulfill requests sent to them"}},"settings":{"compilationTarget":{"contracts/MefiOracle.sol":"Oracle"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/MefiOracle.sol":{"keccak256":"0xdb703a725703b3361b07e940a77bc86fb28ff7c12d91b212a5ed5587e0cd5f0b","urls":["bzz-raw://b886242a6e22bb1b32128f368c32516b9f538486938d6133bce8edd7919e167c","dweb:/ipfs/QmYaCAm8iNiBincgSNk3Vf9EaKEtT8qDuu1wnM6TphjiTn"]},"contracts/mefi/RequestInterface.sol":{"keccak256":"0x105e889ca83ae9f6f1c9e245e9dd4eec6564f081d014953860985e68cbbb7560","urls":["bzz-raw://84f38d79c15c1fba7c493306dfbd18dc00e1f4a9a35984e366ffd75e4c303360","dweb:/ipfs/QmeEgNajtYCoBL377zni3E8Cc5rH946PxRndfaDB5JszMn"]},"contracts/mefi/TokenInterface.sol":{"keccak256":"0xc6885d1d0e3f908a24fdd4c24b85ad32c98a091e8d8c6f13cc0d4c024677764c","urls":["bzz-raw://6f379b8dae0c1a5cf3cd5ca8180b4c5107c6bef5683d6203703d90764576e6d7","dweb:/ipfs/QmdwxieJt5At7e6RmFYutNhXfvjqmVsTXrEMJqxGiMzseR"]},"contracts/mefi/TokenReceiver.sol":{"keccak256":"0x5c77343f0dbc5b6eff5d749b578a2898b50b4ca7fbb6835e0b1440f3e0907cee","urls":["bzz-raw://0b88aaffa7a6640ee7ea6977c74b389a1381f648e1e3309a2908b1d22b8c2768","dweb:/ipfs/QmSsvLBTFfoAyyVAt3kv5oZpwZwijvUH76dkpudKD7MGzw"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/OracleInterface.sol":{"keccak256":"0xd6a2eb19d73207e6e571208a19604fc3be880dbf317678ecd6b80e984d9a80d5","urls":["bzz-raw://c220a59b929b622d3c70e869c6baa2e991746b017e31086c1975e6d43405b87d","dweb:/ipfs/QmSchVZTRTL1snH1DnKF7ABCkL67hHEPqCDUKYztBnDx7D"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/interfaces/WithdrawalInterface.sol":{"keccak256":"0xa3d3b86c791eafb1611562946ece09da4d389a51bcc518d13191750264eac715","urls":["bzz-raw://5d749fac4831c1145750a1bdc9ed64eeeab950fd01f71701358dfe95f0ca8a7e","dweb:/ipfs/QmR7TRN3U5KePYVFymScvRQEydKM6Yfawz4XaSALZuTnqn"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/vendor/Ownable.sol":{"keccak256":"0x20a325da437d524570c833519481749e6e33018fe899dfdad66e59e1f60f6192","urls":["bzz-raw://921b292b3621c1728852040f7ce8853a827a0498517ea12c9f576959419f019a","dweb:/ipfs/QmXpqPMDshxmwfYMjcZiDNVJWecLz7ASnAQwHnmMgvxhXb"]},"https://github.com/smartcontractkit/chainlink/blob/develop/evm-contracts/src/v0.6/vendor/SafeMathChainlink.sol":{"keccak256":"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f","urls":["bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73","dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9"]}},"version":1},"version":1,"checkPoints":[]}