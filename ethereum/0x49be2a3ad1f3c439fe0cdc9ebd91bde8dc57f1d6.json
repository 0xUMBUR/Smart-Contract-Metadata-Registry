{"address":"0x49BE2A3AD1F3c439Fe0cDC9EBd91BdE8Dc57F1d6","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_cUSDToken","type":"address"},{"internalType":"address","name":"_cUBIAuthToken","type":"address"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_custodian","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_disbursementWei","type":"uint256"}],"name":"DisbursementUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_oldFactoryAddress","type":"address"},{"indexed":true,"internalType":"address","name":"_newFactoryAddress","type":"address"}],"name":"FactoryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_userId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_ubiAddress","type":"address"}],"name":"NewUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"}],"name":"authBalanceOfUBIBeneficiary","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"},{"internalType":"string","name":"_txId","type":"string"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"}],"name":"balanceOfUBIBeneficiary","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"}],"name":"beneficiaryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cUBIAuthToken","outputs":[{"internalType":"contract ERC20PresetMinterPauser","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cUSDToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"},{"internalType":"string","name":"_txId","type":"string"}],"name":"deauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disbursementWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getBeneficiaryAddressAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBeneficiaryCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_userId","type":"string"}],"name":"newUbiBeneficiary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reconcile","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reconciliationAccount","outputs":[{"internalType":"contract IUBIReconciliationAccount","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_custodian","type":"address"}],"name":"setCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_blocksInEpoch","type":"uint256"},{"internalType":"uint256","name":"_demurrageFreeEpochs","type":"uint256"},{"internalType":"uint256","name":"_demurrageNumerator","type":"uint256"},{"internalType":"uint256","name":"_demurrageDenominator","type":"uint256"}],"name":"setDemurrageParameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newDisbursementWei","type":"uint256"}],"name":"setDisbursementWei","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newFactoryAddress","type":"address"}],"name":"setUBIBeneficiaryFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_userId","type":"bytes32"},{"internalType":"string","name":"_txId","type":"string"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"settle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ubiFactory","outputs":[{"internalType":"contract IUBIBeneficiaryFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newLogic","type":"address"}],"name":"updateBeneficiaryImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newLogic","type":"address"}],"name":"updateReconciliationImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawToCustodian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawToOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aaron Boyd <https://github.com/aaronmboyd>","details":"Administrative and orchestrator contract for the Celo UBI program","events":{"DisbursementUpdated(uint256)":{"params":{"_disbursementWei":"New value of wei to disburse to beneficiaries"}},"FactoryUpdated(address,address)":{"params":{"_newFactoryAddress":"New factory address","_oldFactoryAddress":"Old factory address"}},"NewUser(bytes32,address)":{"params":{"_ubiAddress":"Celo address of the UBI Beneficiary","_userId":"Hashed bytes32 of the userId"}}},"kind":"dev","methods":{"authBalanceOfUBIBeneficiary(bytes32)":{"params":{"_userId":"user identifier"},"returns":{"_0":"uint256 authorized balance"}},"authorize(bytes32,string,uint256)":{"params":{"_txId":"Raw transaction ID for this event","_userId":"User identifier","_value":"Amount to authorize"}},"balanceOfUBIBeneficiary(bytes32)":{"params":{"_userId":"user identifier"},"returns":{"_0":"uint256 available balance"}},"beneficiaryAddress(bytes32)":{"params":{"_userId":"user identifier"},"returns":{"_0":"address of user's contract"}},"constructor":{"params":{"_cUSDToken":"token used for cUSD"}},"deauthorize(bytes32,string)":{"params":{"_txId":"Raw transaction ID for this event","_userId":"User identifier"}},"getBeneficiaryAddressAtIndex(uint256)":{"details":"Used for iterating the complete list of beneficiaries"},"newUbiBeneficiary(string)":{"params":{"_userId":"user identifier"}},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Requirements: The contract must not be paused."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCustodian(address)":{"params":{"_custodian":"new custodian address"}},"setDemurrageParameters(uint256,uint256,uint256,uint256)":{"params":{"_blocksInEpoch":"Number of blocks in an epoch for this network","_demurrageDenominator":"Denominator for demurrage ratio","_demurrageFreeEpochs":"Number of epochs which are free of demurrage","_demurrageNumerator":"Numerator for demurrage ratio"}},"setDisbursementWei(uint256)":{"params":{"_newDisbursementWei":"disbursement amount in wei"}},"setUBIBeneficiaryFactory(address)":{"params":{"_newFactoryAddress":"new factory address"}},"settle(bytes32,string,uint256)":{"params":{"_txId":"Raw transaction ID for this event","_userId":"User identifier","_value":"Amount to settle"}},"transferOwnership(address)":{"details":"In this override, we iterate all the existing UBIBeneficiary contracts and change their owner before changing the owner of the core contract","params":{"newOwner":"new owner of this contract"}},"unpause()":{"details":"Requirements: The contract must be paused."},"updateBeneficiaryImplementation(address)":{"params":{"_newLogic":"New implementation logic for beneficiary proxies"}},"updateReconciliationImplementation(address)":{"params":{"_newLogic":"New implementation logic for reconciliationAccount"}},"withdrawToCustodian()":{"details":"The contract must be pausedSends cUSD to current custodian from the current reconciliation account"},"withdrawToOwner()":{"details":"The contract must be pausedSends cUSD to current owner"}},"title":"Celo UBI administrative contract","version":1},"userdoc":{"events":{"DisbursementUpdated(uint256)":{"notice":"Triggered when the disbursement amount is changed"},"FactoryUpdated(address,address)":{"notice":"Triggered when the UBI Beneficiary Factory is updated"},"NewUser(bytes32,address)":{"notice":"Triggered when a new user has been created"}},"kind":"user","methods":{"authBalanceOfUBIBeneficiary(bytes32)":{"notice":"Retrieves the authorized balance of a UBI beneficiary"},"authorize(bytes32,string,uint256)":{"notice":"Authorizes an amount for a UBI beneficiary"},"balanceOfUBIBeneficiary(bytes32)":{"notice":"Retrieves the available balance of a UBI beneficiary"},"beneficiaryAddress(bytes32)":{"notice":"retrieve contract address for a UBI Beneficiary"},"constructor":"Used to initialize a new UBIController contract","deauthorize(bytes32,string)":{"notice":"Deauthorizes an amount for a UBI beneficiary"},"getBeneficiaryAddressAtIndex(uint256)":{"notice":"Get beneficiary address at index"},"getBeneficiaryCount()":{"notice":"Get count of beneficiaries"},"newUbiBeneficiary(string)":{"notice":"create a new user and assign them a wallet contract"},"pause()":{"notice":"Triggers stopped state."},"reconcile()":{"notice":"Reconciles cUSD built up in reconciliation account and sends to pre-configured custodian"},"setCustodian(address)":{"notice":"Update the custodian address"},"setDemurrageParameters(uint256,uint256,uint256,uint256)":{"notice":"Update demurrage parameters. Can only be called by the current owner."},"setDisbursementWei(uint256)":{"notice":"Set amount of wei to disburse to new beneficiaries"},"setUBIBeneficiaryFactory(address)":{"notice":"Public update to a new UBI Beneficiary Factory"},"settle(bytes32,string,uint256)":{"notice":"Settles an amount for a UBI Beneficiary and transfers to the Reconciliation account"},"transferOwnership(address)":{"notice":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"notice":"Returns to normal state."},"updateBeneficiaryImplementation(address)":{"notice":"Update implementation address for beneficiaries"},"updateReconciliationImplementation(address)":{"notice":"Update implementation address for reconciliationAccount"},"withdrawToCustodian()":{"notice":"Emergency withdrawal of all remaining cUSD to the custodian account"},"withdrawToOwner()":{"notice":"Emergency withdrawal of all remaining cUSD to the owner account"}},"version":1}},"settings":{"compilationTarget":{"/home/boyd/git/keyko/celo-ubi-contract/contracts/UBIController.sol":"UBIController"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":100},"remappings":[]},"sources":{"/home/boyd/git/keyko/celo-ubi-contract/contracts/UBIController.sol":{"keccak256":"0xd2baf40a2a45928ae37dc6c7ae7838cec51a2d146a7f421b09f09908a10f85b6","license":"MIT","urls":["bzz-raw://bd15446f98cb32799a6c8d6bd71edd107ce315cf26362959017d3621ef1138b8","dweb:/ipfs/QmeM9i38rw8g4nvrMmFHtdx7LDdv6Zrk6khZKTt9QP6NXB"]},"/home/boyd/git/keyko/celo-ubi-contract/contracts/interface/IUBIBeneficiary.sol":{"keccak256":"0x5bffdf92d5b087ee86d6dc2564999ee07a8bac665bb9f842c3ee5b41e6a4104a","license":"MIT","urls":["bzz-raw://e644ce4e305f3a0af90a9427ed7fdc51aaba7225692da5ce22f5810503914461","dweb:/ipfs/QmfBuNsoykvZtXby1eBRKfBbJt8B6JWwqtPu8XagwCB2YW"]},"/home/boyd/git/keyko/celo-ubi-contract/contracts/interface/IUBIBeneficiaryFactory.sol":{"keccak256":"0xde729493286a4d5da3d24ae00452a2031318ebb67fd6f48c1440b795218bcc31","license":"MIT","urls":["bzz-raw://001a1ebdf93fd1bcb076734d186889d74bd19bcf91e46a5be40dd83e7623189c","dweb:/ipfs/QmdEZVHny7byXHSqtAHdwYzi7kMrmi8w214VTvU4xL5rTd"]},"/home/boyd/git/keyko/celo-ubi-contract/contracts/interface/IUBIReconciliationAccount.sol":{"keccak256":"0xb52aafa7fdcb8638edd3956751ad1fe876f674f2eb31d7ddcf8044da62595b06","license":"MIT","urls":["bzz-raw://75187da0b1da090949a12e8ad23f3fb25ee944d7ebc4f5838bb9e84d5402b1e1","dweb:/ipfs/QmTHVu461r6b4JhP67wSE7snJLj11zHgS93MfJokUvKbBp"]},"@openzeppelin/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"@openzeppelin/contracts/access/AccessControl.sol":{"keccak256":"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360","license":"MIT","urls":["bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187","dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ"]},"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"@openzeppelin/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","license":"MIT","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"@openzeppelin/contracts/presets/ERC20PresetMinterPauser.sol":{"keccak256":"0xe30213b0851987b0455057cdfb65660c05805cbb05b12c0d61b0ff7a99cc36cc","license":"MIT","urls":["bzz-raw://1c61711ecc3ad53890dded63c27909a315ba3053c553be29acaa239bc6a7a0cf","dweb:/ipfs/QmQjriBzSyAYQTm4NfWpnnoH8RhZrayyXm2zvpeHkxQnAk"]},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0","license":"MIT","urls":["bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02","dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9"]},"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol":{"keccak256":"0x657b0d90be17331364211d74359df2a734fac864f6e88c80de7626fa33090ffb","license":"MIT","urls":["bzz-raw://09cca25fefa2354a424d55a97930c76b11dc50697ba62c85d7affc27a37e830c","dweb:/ipfs/QmPTQBYXxQDSNmMKqwe4WnM8E7NwnpLnkFLSRH8hZRvrVK"]},"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol":{"keccak256":"0xbab4a97af2a6810a8ffc187205dfb331284949ea5b30caa5b9052828853bb149","license":"MIT","urls":["bzz-raw://f53c98e31ed415c2a6f03d99809cd4f2f5fff92a13ee85022922a09df82ee459","dweb:/ipfs/QmXiv4ysuQSRfoXqPpwA1QCreEnqfkrHDGyJTmifoni7dK"]},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","license":"MIT","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27","license":"MIT","urls":["bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3","dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390","license":"MIT","urls":["bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37","dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA"]},"@openzeppelin/contracts/utils/EnumerableMap.sol":{"keccak256":"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b","license":"MIT","urls":["bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e","dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh"]},"@openzeppelin/contracts/utils/EnumerableSet.sol":{"keccak256":"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79","license":"MIT","urls":["bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3","dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN"]},"@openzeppelin/contracts/utils/Pausable.sol":{"keccak256":"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08","license":"MIT","urls":["bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c","dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe"]},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb","license":"MIT","urls":["bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5","dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ"]}},"version":1},"version":1,"checkPoints":[]}