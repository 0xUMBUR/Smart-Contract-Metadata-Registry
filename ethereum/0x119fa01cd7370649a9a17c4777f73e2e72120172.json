{"address":"0x119fa01Cd7370649A9a17c4777f73e2E72120172","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string[]","name":"proposalNames","type":"string[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"chairperson","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"giveRightToVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"s","type":"string"}],"name":"string_tobytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"proposal","type":"string"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"bool","name":"voted","type":"bool"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"vote","type":"uint256"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerName","outputs":[{"internalType":"string","name":"winnerName_","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposal","outputs":[{"internalType":"string","name":"winningProposal_","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"winningProposal()":{"details":"Computes the winning proposal taking all previous votes into account."}},"title":"Voting with delegation."},"userdoc":{"methods":{"constructor":"Create a new ballot to choose one of `proposalNames`.","delegate(address)":{"notice":"Delegate your vote to the voter `to`."},"vote(string)":{"notice":"Give your vote (including votes delegated to you) to proposal `proposals[proposal].name`."}}}},"settings":{"compilationTarget":{"browser/Ballot.sol":"Ballot"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Ballot.sol":{"keccak256":"0x3fe78f23e76648956eb454081bb8f9c814e30a0afbe7117579f2a621442fb9be","urls":["bzz-raw://2697fc53bea99c8a822103cc91acb489f8a92d72b039c8600924a566d3c23932","dweb:/ipfs/QmbRqP6EXn4YBBNgKFbi5gPQ5Anu5FvWL9TkbjkgAZWGqY"]}},"version":1},"version":1,"checkPoints":[]}