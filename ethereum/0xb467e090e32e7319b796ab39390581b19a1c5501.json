{"address":"0xb467E090E32e7319B796Ab39390581B19a1c5501","name":"","metadata":{"compiler":{"version":"0.8.4+commit.c7e474f2"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"calls","type":"bytes[]"},{"internalType":"bool","name":"revertOnFail","type":"bool"}],"name":"batch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"nyan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"nyanETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"nyanSUSHI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unNyan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unNyanSUSHI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Return the DOMAIN_SEPARATOR."},"approve(address,uint256)":{"params":{"amount":"The maximum collective `amount` that `spender` can draw.","spender":"Address of the party that can draw tokens from msg.sender's account."},"returns":{"_0":"(bool) Returns True if approved."}},"batch(bytes[],bool)":{"params":{"calls":"An array of inputs for each call.","revertOnFail":"If True, reverts after a failed call and stops further calls."}},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The maximum collective `amount` that `spender` can draw.","deadline":"This permit must be redeemed before this deadline (UTC timestamp in seconds).","owner":"Address of the `owner`.","spender":"The address of the `spender` that gets approved to draw from `owner`."}},"transfer(address,uint256)":{"params":{"amount":"The token `amount` to move.","to":"The address to move tokens `to`."},"returns":{"_0":"(bool) Returns True if succeeded."}},"transferFrom(address,address,uint256)":{"params":{"amount":"The token `amount` to move.","from":"Address to draw tokens `from`.","to":"The address to move tokens `to`."},"returns":{"_0":"(bool) Returns True if succeeded."}}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address)":{"notice":"owner > spender > allowance mapping."},"approve(address,uint256)":{"notice":"Approves `amount` from msg.sender to be spent by `spender`."},"balanceOf(address)":{"notice":"owner > balance mapping."},"batch(bytes[],bool)":{"notice":"Allows batched call to self (this contract)."},"nonces(address)":{"notice":"owner > nonce mapping. Used in `permit`."},"nyan(address,uint256)":{"notice":"**** xSUSHI NYANEnter Neko Sushi. Deposit xSUSHI `amount`. Mint NEKO for `to`."},"nyanETH(address)":{"notice":"Enter Neko Sushi. Deposit ETH `msg.value`. Mint NEKO for `to`."},"nyanSUSHI(address,uint256)":{"notice":"**** SUSHI NYANEnter Neko Sushi. Deposit SUSHI `amount`. Mint NEKO for `to`."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approves `amount` from `owner` to be spent by `spender` using EIP-2612 method."},"transfer(address,uint256)":{"notice":"Transfers `amount` tokens from `msg.sender` to `to`."},"transferFrom(address,address,uint256)":{"notice":"Transfers `amount` tokens from `from` to `to`. Caller needs approval from `from`."},"unNyan(address,uint256)":{"notice":"Leave Neko Sushi. Burn NEKO `amount`. Claim xSUSHI for `to`."},"unNyanSUSHI(address,uint256)":{"notice":"Leave Neko Sushi. Burn NEKO `amount`. Claim SUSHI for `to`."}},"notice":"Neko Sushi takes SUSHI / xSUSHI / ETH to mint NEKO tokens that can be burned to claim SUSHI / xSUSHI from BentoBox with yields.","version":1}},"settings":{"compilationTarget":{"nya.sol":"NekoSushi"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"nya.sol":{"keccak256":"0xde233192d9da2c6f7ad873790e0677612506bbf349e94e46c2c4e5466cd59c1e","license":"UNLICENSED","urls":["bzz-raw://920440978615b1f68aa7bd2ed28897963b01c6ad2ec831572131fa97fd8a658e","dweb:/ipfs/QmeAfDiouP6FGcL3B1dFDq98qVmps7fW4oxbMo7mpyq5At"]}},"version":1},"version":1,"checkPoints":[]}