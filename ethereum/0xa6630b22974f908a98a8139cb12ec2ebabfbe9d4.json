{"address":"0xa6630B22974F908a98a8139CB12Ec2EbABfbe9D4","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"Name","type":"string"},{"internalType":"string","name":"Symbol","type":"string"},{"internalType":"uint8","name":"Decimal","type":"uint8"},{"internalType":"address","name":"Owner","type":"address"},{"internalType":"address","name":"tokenPoolAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"VotesSubmitted","type":"event"},{"inputs":[],"name":"_crowdsaleAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"},{"internalType":"uint256[]","name":"_amount","type":"uint256[]"}],"name":"airdropByOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"},{"internalType":"uint256[]","name":"_amount","type":"uint256[]"}],"name":"airdropByOwnerForMMM","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"airdropcount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"status","type":"bool"},{"internalType":"address","name":"_account","type":"address"}],"name":"blacklistAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"status","type":"bool"},{"internalType":"uint256","name":"stakingId","type":"uint256"}],"name":"blacklistStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burnForCrowdsale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getActiveStakesById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractETHBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getFinalWithdrawlStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRewardPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getRewardsDetailsOfUserById","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getStakingAddressById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakingCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getStakingStartTimeById","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getStakingTokenById","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getTokenLockstatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenpoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getowner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isBlocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"performStaking","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposalIDcount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"address","name":"submitter","type":"address"},{"internalType":"uint256","name":"votingDeadline","type":"uint256"},{"internalType":"uint256","name":"inFavour","type":"uint256"},{"internalType":"uint256","name":"inAgainst","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"status","type":"bool"}],"name":"setCrowdSalesStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add","type":"address"}],"name":"setCrowdsaleAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardsPercentage","type":"uint256"}],"name":"setRewardPercentage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add","type":"address"}],"name":"setTokenPoolAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"withdrawLimit","type":"uint256"}],"name":"setWithdrawLimit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"voteLength","type":"uint256"}],"name":"submitProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"},{"internalType":"bool","name":"vote","type":"bool"}],"name":"submitVote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleContractActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"voted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"votes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"stakingId","type":"uint256"}],"name":"withdrawStakedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ILUS tokens as per ERC20 Standards","kind":"dev","methods":{"airdropByOwner(address[],uint256[])":{"details":"Airdrop function to airdrop tokens. Best works upto 50 addresses in one time. Maximum limit is 200 addresses in one time.","params":{"_addresses":"array of address in serial order","_amount":"amount in serial order with respect to address array"}},"airdropByOwnerForMMM(address[],uint256[])":{"details":"Airdrop function to airdrop tokens. Best works upto 50 addresses in one time. Maximum limit is 200 addresses in one time.","params":{"_addresses":"array of address in serial order","_amount":"amount in serial order with respect to address array"}},"allowance(address,address)":{"details":"Function to check the amount of tokens that an owner allowed to a spender.","params":{"owner":"address The address which owns the funds.","spender":"address The address which will spend the funds."},"returns":{"_0":"A uint256 specifying the amount of tokens still available for the spender."}},"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"returns":{"_0":"A uint256 representing the amount owned by the passed address."}},"blacklistAddresses(bool,address)":{"details":"Function to blacklist any address","params":{"_account":"_account address for that particular user","status":"true/false"}},"blacklistStake(bool,uint256)":{"details":"Function to blacklist any stake","params":{"stakingId":"stake id for that particular stake","status":"true/false"}},"burn(uint256)":{"details":"Burns a specific amount of tokens.","params":{"_value":"The amount of token to be burned."}},"burnForCrowdsale(uint256)":{"details":"Burns a specific amount of tokens.","params":{"_value":"The amount of token to be burned."}},"decimals()":{"returns":{"_0":"the number of decimal of the token."}},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"getActiveStakesById(uint256)":{"details":"Function to get active Staking tokens by id","params":{"id":"stake id for the stake"}},"getContractETHBalance()":{"details":"function to get total ethers in contract"},"getFinalWithdrawlStake(uint256)":{"details":"Function to get Final Withdraw Staked value","params":{"id":"stake id for the stake"}},"getProposalStatus(uint256)":{"details":"Allows to get status of a proposal for a specific proposalID","params":{"_proposalID":"The proposal ID the proposal"}},"getRewardPercentage()":{"details":"Function for getting rewards percentage by owner"},"getRewardsDetailsOfUserById(uint256)":{"details":"Function to get Rewards on the stake","params":{"id":"stake id for the stake"}},"getStakingAddressById(uint256)":{"details":"Function to get Staking address by id","params":{"id":"stake id for the stake"}},"getStakingCount()":{"details":"Function to get staking count"},"getStakingStartTimeById(uint256)":{"details":"Function to get Staking Starting time by id","params":{"id":"stake id for the stake"}},"getStakingTokenById(uint256)":{"details":"Function to get Staking tokens by id","params":{"id":"stake id for the stake"}},"getTokenLockstatus(uint256)":{"details":"Function to get Token lockstatus by id","params":{"id":"stake id for the stake"}},"getTokenpoolAddress()":{"details":"Function to get Token Pool addresss"},"getWithdrawLimit()":{"details":"Function for getting withdraw limit by owner"},"getowner()":{"details":"get address of smart contract owner","returns":{"_0":"address of owner"}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"returns":{"_0":"the name of the token."}},"performStaking(uint256)":{"details":"Function to performs staking for user tokens for a specific period of time","params":{"tokens":"number of tokens"}},"setCrowdSalesStatus(bool)":{"details":"Set crowsales status.","params":{"status":"status of crowdsale."}},"setCrowdsaleAddress(address)":{"details":"Function to set crowdsale address","params":{"add":"Address for crowdsale smart contract."}},"setRewardPercentage(uint256)":{"details":"Function for setting rewards percentage by owner","params":{"rewardsPercentage":"Reward percentage"}},"setTokenPoolAddress(address)":{"details":"Function to set token pool address","params":{"add":"Address for token pool that manages supplies for stakes."}},"setWithdrawLimit(uint256)":{"details":"Function for setting withdraw time limit by owner","params":{"withdrawLimit":"Withdraw Limit"}},"submitProposal(uint256)":{"details":"Allows a token holder to submit a proposal to vote on","params":{"voteLength":"time limit for the voting"}},"submitVote(uint256,bool)":{"details":"Allows token holders to submit their votes in favor of a specific proposalID","params":{"_proposalID":"The proposal ID the token holder is voting on"}},"symbol()":{"returns":{"_0":"the symbol of the token."}},"toggleContractActive()":{"details":"Function to secure contract from fail by toggling _stopped variable"},"totalSupply()":{"details":"Total number of tokens in existence."},"transfer(address,uint256)":{"details":"Transfer token to a specified address.","params":{"to":"The address to transfer to.","value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another.","params":{"from":"address The address which you want to send tokens from","to":"address The address which you want to transfer to","value":"uint256 the amount of tokens to be transferred"}},"transferOwnership(address)":{"details":"Transfer ownership of the smart contract. For owner only","returns":{"_0":"request status"}},"withdrawETH()":{"details":"function to withdraw total ethers from contract"},"withdrawStakedTokens(uint256)":{"details":"Function for withdrawing staked tokens","params":{"stakingId":"stake id for the stake"}}},"title":"ILUS Contract For ERC20 Tokens","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"ILUS Contract.sol":"StandardToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"ILUS Contract.sol":{"keccak256":"0x9b7544e5d70e0a718ecb95d7638c075e63377630cd66dadf7222bcc32b65cea0","license":"MIT","urls":["bzz-raw://14561a4e181544534f720e8ec69e2a85a5f16cb3faa5283ff6b80952bec01836","dweb:/ipfs/QmVrbbTKxZZMQCXSpVanA3WeJARMnTNdcoi4mo9GQ4UVc5"]}},"version":1},"version":1,"checkPoints":[]}