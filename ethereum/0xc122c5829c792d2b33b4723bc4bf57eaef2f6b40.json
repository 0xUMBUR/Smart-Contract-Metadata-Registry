{"address":"0xc122C5829c792d2B33b4723bC4bf57eAef2F6B40","name":"","metadata":{"compiler":{"version":"0.5.16+commit.9c3226ce"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tokenURI","type":"string"}],"name":"TokenURISet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transferred","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"mintWithTokenURI","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setTokenURI","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenOwned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"made for https://sips.synthetix.io/sips/sip-93","methods":{"balanceOf(address)":{"details":"Function to retrieve whether an address owns a token","params":{"owner":"address the address to check the balance of"}},"burn(uint256)":{"details":"Burn function to remove a given tokenId Reverts if the token ID does not exist.","params":{"tokenId":"uint256 ID of the token to burn"}},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection.","params":{"_name":"the name of the token","_symbol":"the symbol of the token"}},"isOwner()":{"details":"Returns true if the caller is the current owner."},"mint(address,uint256)":{"details":"Mint function to mint a new token given a tokenId and assign it to an address Reverts if the tokenId is 0 or the token already exist","params":{"to":"address the address to assign the token to","tokenId":"uint256 ID of the token to mint"}},"mintWithTokenURI(address,uint256,string)":{"details":"Mint function to mint a new token given a tokenId and assign it to an address Reverts if the tokenId is 0 or the token already exist","params":{"to":"address the address to assign the token to","tokenId":"uint256 ID of the token to mint"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setTokenURI(uint256,string)":{"details":"Function to set the token URI for a given token. Reverts if the token ID does not exist.","params":{"tokenId":"uint256 ID of the token to set its URI","uri":"string URI to assign"}},"tokenURI(uint256)":{"details":"Function to get the token URI for a given token. Reverts if the token ID does not exist.","params":{"tokenId":"uint256 ID of the token to retrieve the uri for"}},"totalSupply()":{"details":"Function to get the total supply of tokens currently available"},"transferFrom(address,address,uint256)":{"details":"Transfer function to assign a token to another address Reverts if the address already owns a token","params":{"from":"address the address that currently owns the token","to":"address the address to assign the token to","tokenId":"uint256 ID of the token to transfer"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Custom NFT contract based off ERC721 but restricted by access control."},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/andytcf/spartan-council/contracts/SpartanCouncil.sol":"SpartanCouncil"},"evmVersion":"istanbul","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"/Users/andytcf/spartan-council/contracts/SpartanCouncil.sol":{"keccak256":"0x867a30c7b8f77e618e8caefcb3812929a072115b83bb4da0db233f8f06e44920","urls":["bzz-raw://ebade7c3708b010b8a72c7d4e3636af4903e13ab86f123e4607ba77418d53d6e","dweb:/ipfs/Qmddg2wArHvPPD1T1qJCXxPrmTTTxmCA4cVYhLoSDvzbqe"]},"openzeppelin-solidity-2.3.0/contracts/ownership/Ownable.sol":{"keccak256":"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc","urls":["bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c","dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2"]}},"version":1},"version":1,"checkPoints":[]}