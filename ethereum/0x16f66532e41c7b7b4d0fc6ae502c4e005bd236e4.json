{"address":"0x16f66532E41C7b7b4D0fC6aE502C4e005bd236E4","name":"","metadata":{"compiler":{"version":"0.6.4+commit.1dca32f3"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"executionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRedeemed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAucBurned","type":"uint256"}],"name":"CompoundRedeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseExecutionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseExecutionAmountForFee","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalRedeemed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"yield","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAucBurned","type":"uint256"}],"name":"Finish","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldTime","type":"uint256"}],"name":"SetMinimumTimeBetweenExecutions","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"oldAdmin","type":"address"}],"name":"SetProxyAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementation","type":"address"}],"name":"SetProxyImplementation","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"addEscrow","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeCompoundRedeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"executions","outputs":[{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"totalDai","type":"uint256"},{"internalType":"uint256","name":"totalRedeemed","type":"uint256"},{"internalType":"uint256","name":"totalBought","type":"uint256"},{"internalType":"uint256","name":"totalBalance","type":"uint256"},{"internalType":"uint256","name":"totalFeeDeduction","type":"uint256"},{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeExemptionAmountForAucEscrowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeExemptionAmountForUserBaseData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finish","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"forceFinish","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"forceRedeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMinimumTimeForNextExecution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAssetRedeemed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"time","type":"uint256"}],"name":"getUserEstimatedCurrentFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEstimatedCurrentProfitWithoutFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserProfitsAndFeeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTotalInvested","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_minimumTimeBetweenExecutions","type":"uint256"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isCompound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumTimeBetweenExecutions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"}],"name":"resignAssetForMigration","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setMinimumTimeBetweenExecutions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalBalanceNormalizedDifference","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"usersData","outputs":[{"internalType":"uint256","name":"baseExecutionId","type":"uint256"},{"internalType":"uint256","name":"baseExecutionAvgRate","type":"uint256"},{"internalType":"uint256","name":"baseExecutionAccumulatedAmount","type":"uint256"},{"internalType":"uint256","name":"baseExecutionAccumulatedWeightForRate","type":"uint256"},{"internalType":"uint256","name":"baseExecutionAmountForFee","type":"uint256"},{"internalType":"uint256","name":"currentAllocated","type":"uint256"},{"internalType":"uint256","name":"previousAllocated","type":"uint256"},{"internalType":"uint256","name":"previousProfit","type":"uint256"},{"internalType":"uint256","name":"previousAssetAmount","type":"uint256"},{"internalType":"uint256","name":"previousFeeAmount","type":"uint256"},{"internalType":"uint256","name":"redeemed","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"The contract is proxied for dPiggyAssetProxy. It is created and managed by dPiggy contract that is also the contract admin. Implements all operations for the Dai deposited for an asset.","methods":{"addEscrow(address)":{"details":"Function to set the fee exemption due to the Auc escrowed for the user. Only can be called by the admin (dPiggy contract).","params":{"user":"User's address. "},"returns":{"_0":"True if the user has some Dai deposited on the asset otherwise False. "}},"deposit(address,uint256)":{"details":"Function to deposit Dai. Only can be called by the admin (dPiggy contract). On deposit, it sets all previous Dai profit, asset profit and fee amount until the last Compound redeem execution. It sets stored data to be able to calculate the proportional profit and fee on the next Compound redeem execution because the rate is a weighted average of all deposits rate in this period (between executions)  and the same for the fee that should be proportional to the number of days in this period.","params":{"amount":"Amount of Dai deposited.","user":"User's address. "}},"executeCompoundRedeem()":{"details":"Function to execute the Compound redeem. It is redeemed all Dai profit for the period: (total on Compound contract - total deposited). The fee is calculated over total Dai deposited minus: - Amount of Dai of the users that has Auc escrowed. - Proportional amount of Dai for users that deposited Dai between last execution and current execution.    The fee is charged only during the days that the Dai was invested, not all period. The amount of Dai for the fee is used to buy Auc on Uniswap and then the Auc is burned. So the remaining amount of Dai redeemed is used to buy the respective asset on Uniswap. The execution is general, not for a user, the distribution of profit to each user is calculated on redeem/finish functions."},"finish()":{"details":"Function to finish the sender's participation for the asset. The asset profit is redeemed as well as all the Dai deposited."},"forceFinish(address)":{"details":"Function to force finish of the user participation for the asset. The asset profit is redeemed as well as all the Dai deposited. Only can be called by the admin (dPiggy contract).","params":{"user":"User's address. "}},"forceRedeem(address)":{"details":"Function to force redeem of the asset profit for the user address. Only can be called by the admin (dPiggy contract).","params":{"user":"User's address. "}},"getMinimumTimeForNextExecution()":{"details":"Function to get the minimum time for the next Compound redeem execution.","returns":{"_0":"The minimum time in Unix for the next Compound redeem execution."}},"getUserAssetRedeemed(address)":{"details":"Function to get the amount of asset redeemed for the user.","params":{"user":"User's address. "},"returns":{"_0":"The amount of asset redeemed. "}},"getUserEstimatedCurrentFee(address,uint256)":{"details":"Function to get the estimated current fee in Dai for the user. To estimate the amount of fee on the Compound redeem execution is calculated by the difference between the `time` and the last execution time. So it is not the total amount of fee, for an estimated total of the fee in Dai:  `getUserAssetProfitAndFeeAmount(second return)` + `getUserEstimatedCurrentFee`.","params":{"time":"The Unix time to calculate the fee. It should be the current Unix time. ","user":"User's address. "},"returns":{"_0":"The estimated fee in Dai. "}},"getUserEstimatedCurrentProfitWithoutFee(address)":{"details":"Function to get the estimated current gross profit in Dai for the user. So it is not the total gross profit, it is only for the user amount of Dai on the next Compound redeem execution. The estimative of the amount of Dai on the Compound redeem execution considering the current Compound stored rate. For an estimated total of the gross profit: `getUserProfit` + `getUserEstimatedCurrentProfitWithoutFee`.","params":{"user":"User's address. "},"returns":{"_0":"The estimated gross profit in Dai. "}},"getUserProfitsAndFeeAmount(address)":{"details":"Function to get the user's Dai gross profit, asset net profit and the fee amount in Dai.","params":{"user":"User's address. "},"returns":{"_0":"The user's Dai gross profit, asset net profit and the fee amount charged in Dai.  First return is the gross profit in Dai. Second return is the asset net profit. Third return is the fee amount charged in Dai."}},"getUserTotalInvested(address)":{"details":"Function to get the amount of Dai deposited for the user.","params":{"user":"User's address. "},"returns":{"_0":"The amount of Dai deposited. "}},"init(address,uint256)":{"details":"Function to initialize the contract. It should be called through the `data` argument when creating the proxy. It must be called only once. The `assert` is to guarantee that behavior.","params":{"_minimumTimeBetweenExecutions":"The minimum time in seconds between executions to run the Compound redeem.","_tokenAddress":"The ERC20 token address on the chain or '0x0' for Ethereum. It is the asset for the respective contract. "}},"redeem()":{"details":"Function to redeem the asset profit for the sender address."},"resignAssetForMigration(address[])":{"details":"Function to resign the asset due to a proxy migration. Only can be called by the admin (dPiggy contract).","params":{"users":"The users to be clear due to the migration."},"returns":{"_0":"cDai and asset amount on the respective contract."}},"setMinimumTimeBetweenExecutions(uint256)":{"details":"Function to set the minimum time between the Compound redeem executions. Only can be called by the admin (dPiggy contract).","params":{"time":"New minimum time in seconds between the Compound redeem executions."}}},"title":"DPiggyAsset"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/DPiggyAsset.sol":"DPiggyAsset"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"Address.sol":{"keccak256":"0x2842c172d1afbc79ed066102b4a219405dfa01c9a5de6b97daf7e4905516e005","urls":["bzz-raw://b67f73520a9cbef74ebfff936fc395d6eaf3e254a472a57f791fcb629890bfeb","dweb:/ipfs/QmaJgXwGVZZ8pZtc7QZARDHG3jWDHB8cPia824oJEjS9N2"]},"AucInterface.sol":{"keccak256":"0x44c5b3aae5e9716df8b606527cb3a408764333fd4ee4828965cf9f6dc7156715","urls":["bzz-raw://860bf13977401e2cb500869aaf9839ed73dbf4cc72caa8909bb212c1aaf195c8","dweb:/ipfs/QmPJieEcG84VcHAn6NPxDNCVLt9AzauMdKwQ1WvdbfCdsy"]},"CompoundInterface.sol":{"keccak256":"0xdfc43bd48b6436f103927963e3f9b63466a4cd656fe22530ff494095d69d5232","urls":["bzz-raw://c0d6882c54909e47043d0495436e8aedae19872fdf9049d0890758f5e8700341","dweb:/ipfs/QmeiVvfCv8v1Ar8wVQt774ox1vLiZLbDg7nE8XoYpyVTmZ"]},"DPiggyAssetData.sol":{"keccak256":"0x9d092b7d689ff5b002964ca13556e2a63e25db56ccd44776e664c1b296ba090d","urls":["bzz-raw://b9cca8afbd1d896057344670af0ad27233aef6cfd4033960bd9e57f5e38c21d8","dweb:/ipfs/Qmdwns3fqmfoDmu9mrqYkPiHG7uGRqVhwT2zomasEhKB1X"]},"DPiggyAssetInterface.sol":{"keccak256":"0xdc26a7c81c05b0afada57f011b0f9fbbf2415918889ef5f8a3a8d9455aa86b4a","urls":["bzz-raw://1c3eda8bfa7fe46f48e1ffe21ea3c9ec11b2195e7d0b37b42dc145f5f8874af5","dweb:/ipfs/QmfT7KkrFurzNs7oVD13Px1cU1viZ2gkeUZZyGjEUYuama"]},"DPiggyBaseProxyData.sol":{"keccak256":"0xc19fd56df743f6136a28598a0664c67352cff2c5b97f592a866840290d789f7b","urls":["bzz-raw://f2f8ef1738f892d309c0b6c6a425d92d72f13e3da4162d39d397c0b8fd0e31ab","dweb:/ipfs/QmRkGgo362TCBPKWyqg1HsuaL4mP9rkr1gZgSZ7xtQTbii"]},"DPiggyInterface.sol":{"keccak256":"0x90b63daf1652058e26485bc74d7c5f4ef1bf801061004e913d66af71a4237559","urls":["bzz-raw://396c0f79734b9d31c5451179df1a36b1dfa6b4d88c4af45d7f1eb79754a8e1c2","dweb:/ipfs/QmP8Q8PWMPBjBPt6Z5KKDuJKUPrMzgKYjjfJotWcLCNsRY"]},"EIP20Interface.sol":{"keccak256":"0x3ad5b9cf5528c5d97ed1c1889f7efd1af3b9af0ab521594dea27686eccc835bc","urls":["bzz-raw://8040a7ca4b8ee26c8a25b8e09b0e8daab1f03a8139356d15f8f02e45c47557b5","dweb:/ipfs/QmZA4TH59GMKRQZpiWR5nuaSfX5xHkAX4hBzxMnkZTMLPP"]},"ReentrancyGuard.sol":{"keccak256":"0x579629d7796a0ff4acff3903daf201231bb45b54af82ba51d280035fb419dec7","urls":["bzz-raw://c12e9d49cd6ccd855f1fd03ef17bf198726fbf1b6e2214979eb24bac6197e81c","dweb:/ipfs/QmPwg8FG3XZw8GhXyXnEi6VNtnu5DjH5e5FNzoxyM3uYwS"]},"SafeMath.sol":{"keccak256":"0xd53af6bfe6cfce474e262c4974749708d19417b6c0a44ea2a64314fd2d95600e","urls":["bzz-raw://b42659e48c83c2de8794a441e9b3c097f8975fc6692fa74e7f8cf5b490127084","dweb:/ipfs/QmPKDdJ96SY8eUupe2JjNPftTcUnMFzGUn7hg2jx2Xt6ye"]},"UniswapExchangeInterface.sol":{"keccak256":"0x77c855b4cdcb98920de794c7efb8f68b8b434766a9894e4a0ce09a7fd740e0a7","urls":["bzz-raw://edcb796e5e48f3eba9ac35c684b895878c52ef7e2326d09e62afb0a9573c4e7c","dweb:/ipfs/QmZFvCxRP6cjfenUpz4ARp1xJCz5k8cB9WK3zZRyhDkx22"]},"browser/DPiggyAsset.sol":{"keccak256":"0xce1f855b46b39182c230f66ca8797063a978bd7fdbce752c2a337abe5c96a52b","urls":["bzz-raw://dcee3c76f546facfc3379bb619a68a7ceb62b9a7112fca6a4de1882d13e7fbef","dweb:/ipfs/QmV9aERoYZAExym5vjXS5xvjiD85ZWgjXpZk9cVaiKhMaN"]}},"version":1},"version":1,"checkPoints":[]}