{"address":"0x9D9021c2F2601fF95EE1b64F9Ad95EEcdb99e40c","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_DOTBASE","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"epoch","type":"uint256"},{"indexed":false,"internalType":"int256","name":"ratio","type":"int256"},{"indexed":false,"internalType":"int256","name":"requestedSupplyAdjustment","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestampSec","type":"uint256"}],"name":"LogRebase","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"ratio","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RatioSet","type":"event"},{"inputs":[],"name":"DOTBASE","outputs":[{"internalType":"contract IDOTBASE","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cooldownExpiryTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRebaseValues","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRebaseTimestampSec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ratio","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebaseCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebaseLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addy","type":"address"}],"name":"setOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"_ratio","type":"int256"}],"name":"setRatio","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_locked","type":"bool"}],"name":"setRebaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Controller for an elastic supply currency based on the uFragments Ideal Money protocol a.k.a. Ampleforth.      uFragments operates symmetrically on expansion and contraction. It will both split and      combine coins to maintain a stable unit price.      This component regulates the token supply of the uFragments ERC20 token in response to      market oracles.","kind":"dev","methods":{"isOwner()":{"returns":{"_0":"true if `msg.sender` is the owner of the contract."}},"owner()":{"returns":{"_0":"the address of the owner."}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}}},"title":"DOTBASE Controller","version":1},"userdoc":{"kind":"user","methods":{"rebase()":{"notice":"Initiates a new rebase operation, provided the minimum time period has elapsed."},"renounceOwnership()":{"notice":"Override to ensure that rebases aren't locked when this happens."}},"version":1}},"settings":{"compilationTarget":{"/C/Users/flisko/Documents/GitHub/dotbase-contracts/contracts/dotBaseController.sol":"dotBaseController"},"evmVersion":"byzantium","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/C/Users/flisko/Documents/GitHub/dotbase-contracts/contracts/dotBaseController.sol":{"keccak256":"0xbb15934255e83a5043c0ff20ae0150f338871e7d770e61f99b259e23c24f5ed1","license":"MIT","urls":["bzz-raw://b6875b8b041b99489849c3192c2915f213c83ebf3305bfdc5d9b538dec4ec9c8","dweb:/ipfs/QmZBC56CJcjfoACgwatVh7nbhGRduJn7asxhD9Hwa5M5Vz"]}},"version":1},"version":1,"checkPoints":[]}