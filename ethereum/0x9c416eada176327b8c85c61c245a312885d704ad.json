{"address":"0x9c416eAda176327B8C85C61c245A312885D704AD","name":"","metadata":{"compiler":{"version":"0.6.10+commit.00c0fcaf"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"eta","type":"uint256"}],"name":"ProposalQueued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"support","type":"bool"},{"indexed":false,"internalType":"uint256","name":"votes","type":"uint256"}],"name":"VoteCast","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"__abdicate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"__acceptAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPendingAdmin","type":"address"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"__executeSetTimelockPendingAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPendingAdmin","type":"address"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"__queueSetTimelockPendingAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"cancel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bool","name":"support","type":"bool"}],"name":"castVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"bool","name":"support","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"countVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getActions","outputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"string[]","name":"signatures","type":"string[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"name":"getReceipt","outputs":[{"components":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"bool","name":"support","type":"bool"},{"internalType":"uint96","name":"votes","type":"uint96"}],"internalType":"struct GovernorAlpha.Receipt","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"guardian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ITimelock","name":"_timelock","type":"address"},{"internalType":"contract IVoteToken","name":"_trustToken","type":"address"},{"internalType":"address","name":"_guardian","type":"address"},{"internalType":"contract IVoteToken","name":"_stkTRU","type":"address"},{"internalType":"uint256","name":"_votingPeriod","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"latestProposalIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalMaxOperations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"uint256","name":"eta","type":"uint256"},{"internalType":"uint256","name":"startBlock","type":"uint256"},{"internalType":"uint256","name":"endBlock","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"bool","name":"canceled","type":"bool"},{"internalType":"bool","name":"executed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"string[]","name":"signatures","type":"string[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"queue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quorumVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum GovernorAlpha.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stkTRU","outputs":[{"internalType":"contract IVoteToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timelock","outputs":[{"internalType":"contract ITimelock","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustToken","outputs":[{"internalType":"contract IVoteToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"__abdicate()":{"details":"Abdicate the guardian address to address(0)"},"__acceptAdmin()":{"details":"Accept the pending admin as the admin in timelock contract"},"__executeSetTimelockPendingAdmin(address,uint256)":{"details":"Execute a setTimeLockPendingAdmin transaction to timelock contract","params":{"eta":"The current block timestamp plus the timelock.delay() timestamp","newPendingAdmin":"The address of desired pending admin"}},"__queueSetTimelockPendingAdmin(address,uint256)":{"details":"Queue a setTimeLockPendingAdmin transaction to timelock contract","params":{"eta":"The current block timestamp plus the timelock.delay() timestamp","newPendingAdmin":"The address of desired pending admin"}},"cancel(uint256)":{"details":"Cancel a proposal that has not yet been executed","params":{"proposalId":"ID of a proposal that wished to be canceled"}},"castVote(uint256,bool)":{"details":"Cast a vote on a proposal","params":{"proposalId":"ID of a proposal in which to cast a vote","support":"A boolean of true for 'for' or false for 'against' vote"}},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{"details":"Cast a vote on a proposal by offline signatures","params":{"proposalId":"ID of a proposal in which to cast a vote","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","support":"A boolean of true for 'for' or false for 'against' vote","v":"The recovery byte of the signature"}},"claimOwnership()":{"details":"Allows the pendingOwner address to finalize the transfer."},"countVotes(address,uint256)":{"details":"Count the total PriorVotes from TRU and stkTRU","params":{"account":"The address to check the total votes","blockNumber":"The block number at which the getPriorVotes() check"},"returns":{"_0":"The sum of PriorVotes from TRU and stkTRU"}},"execute(uint256)":{"details":"Execute a proposal after a proposal has queued and invoke each of the actions in the proposal","params":{"proposalId":"ID of a proposal that has queued"}},"getActions(uint256)":{"details":"Get the actions of a selected proposal","params":{"proposalId":"ID of a proposal return An array of target addresses, an array of proposal values, an array of proposal signatures, and an array of calldata"}},"getReceipt(uint256,address)":{"details":"Get a proposal ballot receipt of the indicated voter","params":{"proposalId":"ID of a proposal in which to get voter's ballot receipt"},"returns":{"_0":"the Ballot receipt record for a voter"}},"initialize(address,address,address,address,uint256)":{"details":"Initialize sets the addresses of timelock contract, trusttoken contract, and guardian"},"isInitialized()":{"details":"Return true if and only if the contract has been initialized","returns":{"_0":"whether the contract has been initialized"}},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"propose(address[],uint256[],string[],bytes[],string)":{"details":"Create a proposal to change the protocol","params":{"calldatas":"The ordered list of data to be passed to each individual function call","description":"A human readable description of the proposal and changes it will enact","signatures":"The ordered list of function signatures to be passed during execution","targets":"The ordered list of target addresses for calls to be made during proposal execution","values":"The ordered list of values to be passed to the calls made during proposal execution"},"returns":{"_0":"The ID of the newly created proposal"}},"queue(uint256)":{"details":"Queue a proposal after a proposal has succeeded","params":{"proposalId":"ID of a proposal that has succeeded"}},"state(uint256)":{"details":"Get the proposal state for the specified proposal","params":{"proposalId":"ID of a proposal in which to get its state"},"returns":{"_0":"Enumerated type of ProposalState"}},"transferOwnership(address)":{"details":"Allows the current owner to set the pendingOwner address.","params":{"newOwner":"The address to transfer ownership to."}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"GovernorAlpha.sol":"GovernorAlpha"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":2000},"remappings":[]},"sources":{"GovernorAlpha.sol":{"keccak256":"0x67cdb7aaa2ec14f1a5a130faf37161238b8ea4eb77bc1f31c235bdd0c49d77aa","license":"MIT","urls":["bzz-raw://eb40f839d97ad47e4d07de9fcf31b791823b05962b96f4c67afd6460374d2fe4","dweb:/ipfs/QmUApi8nei1pHMpLPsDCSWE6d9RfqFs8kAe1N5owPYfCfd"]}},"version":1},"version":1,"checkPoints":[]}