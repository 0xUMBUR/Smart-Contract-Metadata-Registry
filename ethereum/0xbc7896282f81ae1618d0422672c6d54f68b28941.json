{"address":"0xbC7896282f81AE1618D0422672c6D54f68b28941","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_samoz","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Harvest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allocPoint","type":"uint256"},{"indexed":true,"internalType":"contract IERC20","name":"lpToken","type":"address"}],"name":"LogPoolAddition","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"samozPerSecond","type":"uint256"}],"name":"LogSamozPerSecond","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"allocPoint","type":"uint256"},{"indexed":false,"internalType":"bool","name":"overwrite","type":"bool"}],"name":"LogSetPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"lastRewardTime","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"lpSupply","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"accSamozPerShare","type":"uint256"}],"name":"LogUpdatePool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"SAMOZ","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"calls","type":"bytes[]"},{"internalType":"bool","name":"revertOnFail","type":"bool"}],"name":"batch","outputs":[{"internalType":"bool[]","name":"successes","type":"bool[]"},{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"claimOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"pid","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"pid","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lpToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"pids","type":"uint256[]"}],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"migrator","outputs":[{"internalType":"contract IMigratorChef","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingSamoz","outputs":[{"internalType":"uint256","name":"pending","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"uint128","name":"accSamozPerShare","type":"uint128"},{"internalType":"uint64","name":"lastRewardTime","type":"uint64"},{"internalType":"uint64","name":"allocPoint","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"pools","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"samozPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"overwrite","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IMigratorChef","name":"_migrator","type":"address"}],"name":"setMigrator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_samozPerSecond","type":"uint256"}],"name":"setSamozPerSecond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"bool","name":"direct","type":"bool"},{"internalType":"bool","name":"renounce","type":"bool"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"pid","type":"uint256"}],"name":"updatePool","outputs":[{"components":[{"internalType":"uint128","name":"accSamozPerShare","type":"uint128"},{"internalType":"uint64","name":"lastRewardTime","type":"uint64"},{"internalType":"uint64","name":"allocPoint","type":"uint64"}],"internalType":"struct Farming.PoolInfo","name":"pool","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"int256","name":"rewardDebt","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"pid","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"add(uint256,address)":{"params":{"_lpToken":"Address of the LP ERC-20 token.","allocPoint":"AP of the new pool."}},"constructor":{"params":{"_samoz":"The SAMOZ token contract address."}},"deposit(uint256,uint256,address)":{"params":{"amount":"LP token amount to deposit.","pid":"The index of the pool. See `poolInfo`.","to":"The receiver of `amount` deposit benefit."}},"emergencyWithdraw(uint256,address)":{"params":{"pid":"The index of the pool. See `poolInfo`.","to":"Receiver of the LP tokens."}},"massUpdatePools(uint256[])":{"params":{"pids":"Pool IDs of all to be updated. Make sure to update all active pools."}},"migrate(uint256)":{"params":{"_pid":"The index of the pool. See `poolInfo`."}},"pendingSamoz(uint256,address)":{"params":{"_pid":"The index of the pool. See `poolInfo`.","_user":"Address of user."},"returns":{"pending":"SAMOZ reward for a given user."}},"set(uint256,uint256,bool)":{"params":{"_allocPoint":"New AP of the pool.","_pid":"The index of the pool. See `poolInfo`."}},"setMigrator(address)":{"params":{"_migrator":"The contract address to set."}},"setSamozPerSecond(uint256)":{"params":{"_samozPerSecond":"The amount of Samoz to be distributed per second."}},"updatePool(uint256)":{"params":{"pid":"The index of the pool. See `poolInfo`."},"returns":{"pool":"Returns the pool that was updated."}},"withdraw(uint256,uint256,address)":{"params":{"amount":"LP token amount to withdraw.","pid":"The index of the pool. See `poolInfo`.","to":"Receiver of the LP tokens and SAMOZ rewards."}}},"stateVariables":{"totalAllocPoint":{"details":"Total allocation points. Must be the sum of all allocation points in all pools."}},"version":1},"userdoc":{"kind":"user","methods":{"SAMOZ()":{"notice":"Address of SAMOZ contract."},"add(uint256,address)":{"notice":"Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do."},"deposit(uint256,uint256,address)":{"notice":"Deposit LP tokens to MCV2 for SAMOZ allocation."},"emergencyWithdraw(uint256,address)":{"notice":"Withdraw without caring about rewards. EMERGENCY ONLY."},"lpToken(uint256)":{"notice":"Address of the LP token for each MCV2 pool."},"massUpdatePools(uint256[])":{"notice":"Update reward variables for all pools. Be careful of gas spending!"},"migrate(uint256)":{"notice":"Migrate LP token to another LP contract through the `migrator` contract."},"pendingSamoz(uint256,address)":{"notice":"View function to see pending SAMOZ on frontend."},"poolInfo(uint256)":{"notice":"Info of each MCV2 pool."},"poolLength()":{"notice":"Returns the number of MCV2 pools."},"set(uint256,uint256,bool)":{"notice":"Update the given pool's SAMOZ allocation point, can only be called by the owner."},"setMigrator(address)":{"notice":"Set the `migrator` contract. Can only be called by the owner."},"setSamozPerSecond(uint256)":{"notice":"Sets the samoz per second to be distributed. Can only be called by the owner."},"updatePool(uint256)":{"notice":"Update reward variables of the given pool."},"userInfo(uint256,address)":{"notice":"Info of each user that stakes LP tokens."},"withdraw(uint256,uint256,address)":{"notice":"Withdraw LP tokens from MCV2 and harvest proceeds for transaction sender to `to`."}},"notice":"The (older) MasterChef contract gives out a constant number of SAMOZ tokens per block. It is the only address with minting rights for SAMOZ. The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive double incentives.","version":1}},"settings":{"compilationTarget":{"farming.sol":"Farming"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"farming.sol":{"keccak256":"0x68d594a2c8a7cba442d7197cf12a1a9faa28c441eeb104e3e3efc8fed2a69cd9","license":"MIT","urls":["bzz-raw://2d5480ab6c64a209508404fe641342bdf4c98df749b2bf07810ad920d156beca","dweb:/ipfs/QmfFFH87ghLxz4MioKG9jYQx2pPFLcTqA5JrnKtfzJahGA"]}},"version":1},"version":1,"checkPoints":[]}