{"address":"0x05F5230b57E7D1d96B7ECC3975e447955a690b85","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"curve","type":"address"},{"indexed":false,"internalType":"address","name":"market","type":"address"}],"name":"factorySetUp","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"marketCreated","type":"event"},{"inputs":[],"name":"activeCurve","outputs":[{"internalType":"contract Curve","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeMarketTransition","outputs":[{"internalType":"contract MarketTransition","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[3]","name":"_curveParameters","type":"uint256[3]"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_underlyingCollateral","type":"address"},{"internalType":"uint256","name":"_tokenThreshold","type":"uint256"},{"internalType":"uint256","name":"_minimumTokenThreshold","type":"uint256"},{"internalType":"uint256","name":"_thresholdTimeout","type":"uint256"}],"name":"createMarket","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deployedMarkets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getDeployedMarkets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactorySetUp","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"contract IUniswapV2Router01","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Veronica Coutts @vonnie610 (twitter) @VeronicaLC (GitLab) ","methods":{"constructor":{"params":{"_uniswapRouter":": The address of the uniswap contract on the        network this contract is deployed on. "}},"createMarket(uint256[3],string,string,address,uint256,uint256,uint256)":{"params":{"_curveParameters":": The curve \"settings\" that will be used in the         curve instance in order to determine the prices of the token.         For more information please see the curve contract docs. ","_minimumTokenThreshold":": This minimum token threshold is a safty        catch for it the threshold is not met before expiry, this min        threshold can still force the market into uniswap. If you only        want to move acress at your threshold, simply set this vaule         to be the same as the threshold. ","_name":": The name of the token.","_symbol":": The symbol for the token.","_thresholdTimeout":": Once this timeout is reached the curve will         check against the min threshold for transition. When this         timeout is reached, the curve will operate as normal.","_tokenThreshold":": The transition threshold for the token in         tokens. As the value of the tokens is determanistic (with the         bonding curve enforcing a price) the threshold for when the         token can move to the free market can be expressed in tokens.","_underlyingCollateral":": The addresss of the underlying collateral        for the tokens. I.e the currency for the price of the token.         Recomended to use a stable coin such as DAI to ensure a stable        price for your token. "},"returns":{"_0":"address: The address of the new token."}},"getDeployedMarkets(address)":{"params":{"_user":": The address of the user"},"returns":{"_0":"address[]: The addresses of any markets the user has deployed        through this factory."}}},"title":"Bonding Curve Factory"},"userdoc":{"methods":{},"notice":"This curve contract enables an IBCO (Initial Bonding Curve Offering)        as a mechanism to launch a token into the open market without having        to raise the funds in a traditional manner.        This product is a beta. Use at your own risk."}},"settings":{"compilationTarget":{"BondingCurveFactory_flat.sol":"BondingCurveFactory"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"BondingCurveFactory_flat.sol":{"keccak256":"0x71421f42853506418ef1ed8463545cd0b4d98f24b8b9910020943541cbd2890a","urls":["bzz-raw://f2c11f1993b0762070e897886cdfa25de780df51623afeaa2870385901cefd39","dweb:/ipfs/QmYHzaRMZsKYd4UWodgXy8XopzFBmcNYejHhrusFubbQgn"]}},"version":1},"version":1,"checkPoints":[]}