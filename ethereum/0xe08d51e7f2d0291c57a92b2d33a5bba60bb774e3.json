{"address":"0xE08d51E7F2D0291C57A92B2d33A5Bba60bb774e3","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"uuid","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"mint_with_receipt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/ecld.sol":"eCLD"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Address.sol":{"keccak256":"0x7f2a32397237965130682699f8bcede5fb052dc7e4e9f4bd01bfec9a671dfb90","urls":["bzz-raw://a685cc14d6ee4ec4191a7aacfe3b48b8917bddedb5616b46664b526385b1e98a","dweb:/ipfs/QmRSJhwbURtFuucqhZbmrsmGUKSPU8JUas8TxtcCrBYvZk"]},"browser/Context.sol":{"keccak256":"0x36704d996ccad9610e57aecc8d4f38a12215142e1e6dd7a384a0cccfec1fc25c","urls":["bzz-raw://8516a6a8ddc8091342a2c64fba66a7a089d2d1c0d98071047ccb0d096e232f0e","dweb:/ipfs/QmYHq5v1uPYqmrD9GviJkYJ6acHjxRdxLqwfCiWVyE1ywe"]},"browser/ERC20.sol":{"keccak256":"0xb2e14ac64578a0787e9bd9e83e23fd7fc55423126db8292a62324c407a654250","urls":["bzz-raw://ae90e7e9c221573d8289f7c9745660c1246b745ad7dd20dfda5db85004643ccc","dweb:/ipfs/QmWPpU8qTWeTaMKAsLpDjeVgEaHVEsSetisvdDxoUc93ov"]},"browser/ERC20Burnable.sol":{"keccak256":"0x74bbd2f6dfae57a56d56a9d63a03046a0f1445af453cd39a4510b2b0124097d7","urls":["bzz-raw://55fa3df5e3cdcac82b9721a32ce6755b5d0c41a5041c4bcc441186dcff8ea907","dweb:/ipfs/QmSGf219A6s6stA8jpHLSoPmxcJfYb5RSyXfhDZjMweRXF"]},"browser/IERC20.sol":{"keccak256":"0xbb7cb3dbf9068fa1d66784083febb5dfeaf34f85411a5634fbe8260e74cef9ba","urls":["bzz-raw://c49130bd3326e7af7a22272256550dba5572ed15d15a7d13dbe1cf157e7af350","dweb:/ipfs/QmWxzgKJigoh2rfx41uJD49hNoHh9R6hReFFB6DmCzKEiQ"]},"browser/SafeMath.sol":{"keccak256":"0x419a4c5dfdce232e2c533817a96722bda830a9172deb308dcbd2b1fde2fd86d5","urls":["bzz-raw://1ea99a2ac3af2b0f060f391bf6064ae1e6159ec27aa29d4e4a986ba28ac313fb","dweb:/ipfs/QmPop531An8SuC25ws8bEjFpQPMVZYixPfth4NBmurBXUY"]},"browser/ecld.sol":{"keccak256":"0x86d21104a29d01f54390e59b1c393cb97b644b6e4427ea2882061d85755beb6b","urls":["bzz-raw://d0f559f726e1d8dc4590aacfa2376b040f3622ddf449b11f46325917edb020e5","dweb:/ipfs/QmUAXaZZ5CzqJ76jFt1xX9veddxAw3s2V37wAHhXxLMRTv"]}},"version":1},"version":1,"checkPoints":[]}