{"address":"0x1c0a9a8Fc9182B82dC69866C80F4Cfe0D483c510","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"baseCpi_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"epoch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"exchangeRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cpi","type":"uint256"},{"indexed":false,"internalType":"int256","name":"requestedSupplyAdjustment","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestampSec","type":"uint256"}],"name":"LogRebase","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"canRebase","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cpiOracle","outputs":[{"internalType":"contract IOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deviationThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRebaseValues","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRebaseTimestampSec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"contract IOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minRebaseTimeIntervalSec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebaseLag","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebased","outputs":[{"internalType":"contract IRebased","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IOracle","name":"cpiOracle_","type":"address"}],"name":"setCpiOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IOracle","name":"marketOracle_","type":"address"}],"name":"setMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IRebased","name":"rebased_","type":"address"}],"name":"setRebased","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This is a simplified version of the uFragments Ideal Money protocol a.k.a. Ampleforth.      uFragments operates symmetrically on expansion and contraction. It will both split and      combine coins to maintain a stable unit price.      This component regulates the token supply of the uFragments ERC20 token in response to      market oracles.","kind":"dev","methods":{"getRebaseValues()":{"details":"The supply adjustment equals (_totalSupply * DeviationFromTargetRate) / rebaseLag      Where DeviationFromTargetRate is (MarketOracleRate - targetRate) / targetRate      and targetRate is CpiOracleRate / baseCpi "},"isOwner()":{"returns":{"_0":"true if `msg.sender` is the owner of the contract."}},"owner()":{"returns":{"_0":"the address of the owner."}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"setCpiOracle(address)":{"params":{"cpiOracle_":"The address of the cpi oracle contract."}},"setMarketOracle(address)":{"params":{"marketOracle_":"The address of the market oracle contract."}},"setRebased(address)":{"params":{"rebased_":"The address of the Rebased ERC20 token."}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}}},"title":"Rebased Monetary Supply Policy","version":1},"userdoc":{"kind":"user","methods":{"canRebase()":{"notice":"Returns true if at least minRebaseTimeIntervalSec seconds have passed since last rebase."},"getRebaseValues()":{"notice":"Calculates the supplyDelta and returns the current set of values for the rebase"},"rebase()":{"notice":"Initiates a new rebase operation, provided the minimum time period has elapsed."},"renounceOwnership()":{"notice":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"setCpiOracle(address)":{"notice":"Sets the reference to the CPI oracle."},"setMarketOracle(address)":{"notice":"Sets the reference to the market oracle."},"setRebased(address)":{"notice":"Sets the reference to the Rebased token governed.         Can only be called once during initialization. "}},"version":1}},"settings":{"compilationTarget":{"localhost/MonetaryPolicy.sol":"MonetaryPolicy"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"localhost/MonetaryPolicy.sol":{"keccak256":"0x596e528eca0a5b4fc64332c60e63ebaa786e79903f76b5ad97c05eb7bf708ac3","license":"MIT","urls":["bzz-raw://6a884ed04de101a2a53527f69b3bf2c32a2f2dee0ee6f5d2d4c7d85f71d0990e","dweb:/ipfs/QmZJBb63oynVh7uCXT9n8jit4Nctta6wspg9Di52f5FdMg"]}},"version":1},"version":1,"checkPoints":[]}