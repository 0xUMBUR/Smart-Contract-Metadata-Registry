{"address":"0x07363547dE0D5154F8a169DcA3B9ba89Ff15b74c","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"Corgi Inu Token contract","version":1}},"settings":{"compilationTarget":{"CorgiInu.sol":"CorgiInuToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"CorgiInu.sol":{"keccak256":"0x9eafa3ce55a847f32dce1ac6817208726a9f685662446d9abc62ddd49f53b25b","license":"MIT","urls":["bzz-raw://3b2dbf8ac9d83b5984766ab4c4d442cc7c27994b9006950c12688f046a5bea6d","dweb:/ipfs/QmYsTE3HuLrJ4B85RbQvKn5yyw8EFNk15VX94wC8FktkRo"]},"contracts/Context.sol":{"keccak256":"0x927f6329e371ece3cb3c871f2b1ec7e887676c9e10640b0f8ab3adfdc4da309a","license":"MIT","urls":["bzz-raw://c75fce2bc365f666703ffd366bfa8f074bee2f561c47766027cc7bcfb2848375","dweb:/ipfs/QmQym6R5YwNb7Vqk8egCsCtzqtQpJYAEqcfweYMZnq2UhG"]},"contracts/ERC20.sol":{"keccak256":"0x0890c27e6324c0d44e80b6a941d68a542493bbc3a3568504ae6abcdaba20db1e","license":"MIT","urls":["bzz-raw://2d72a949a3f02e669b9bf37461eeed3fa7f9b00735d1e3d33510cc8414ca0721","dweb:/ipfs/QmdGXgVpX1BPrSxLKTpQJkGQ8W3rBCjBCmdNJ4jwsL8r6q"]},"contracts/IERC20.sol":{"keccak256":"0xaca5f464f3077920a839001bfeaf7fc3d993a2781c5e684fe46913b80db2adf1","license":"MIT","urls":["bzz-raw://ef2da6b73638c61d53da5cccf412fd82f7d52b4efad76576ec544a28b96e3ba8","dweb:/ipfs/QmXMBjt3kjty7EhLm76aqqvH5QpNTL5sUGznDpASnd7fXU"]},"contracts/math/SafeMath.sol":{"keccak256":"0x658c498b240167f5d4aefc6f411c077dc73a90a9cac277e04c7d14f88ce28380","license":"MIT","urls":["bzz-raw://269e0e0f8fa5844e8ad5bda85d40170a68558ea0b42151f7cbd77f435610ab2a","dweb:/ipfs/QmaELUxnVHWz6MniyNZAFkztKqtkWWghRbR3xMfKRPBcDk"]},"contracts/utils/Address.sol":{"keccak256":"0x8a810d049711b80120f088f87a9161566657ac9522e7b62a9b6900ec853d8948","license":"MIT","urls":["bzz-raw://b12e989071e07600da0e61c46f06bcf5a49024e97a349168eaed96148fef1116","dweb:/ipfs/QmSN5qN6AJErVKQiNPHPtqRYsrcwzvqQmMZ6Va3bEHD4CL"]}},"version":1},"version":1,"checkPoints":[]}