{"address":"0x09B623Cd28eFCD96aD2abA7380b14172D07De5A7","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address payable","name":"_PIN","type":"address"},{"internalType":"address payable","name":"_PUK","type":"address"},{"internalType":"address","name":"_PUK2a","type":"address"},{"internalType":"address","name":"_PUK2b","type":"address"},{"internalType":"address","name":"_PUK2c","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"SenderID","type":"int64"},{"indexed":false,"internalType":"address","name":"newPIN","type":"address"}],"name":"PINChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"CustomerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"MonetaryAmount","type":"uint256"}],"name":"fallbackCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"SenderID","type":"int64"},{"indexed":false,"internalType":"address","name":"PIN","type":"address"},{"indexed":false,"internalType":"address","name":"PUK","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2a","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2b","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2c","type":"address"}],"name":"newClaim","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"SenderID","type":"int64"},{"indexed":false,"internalType":"address","name":"PIN","type":"address"},{"indexed":false,"internalType":"address","name":"PUK","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2a","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2b","type":"address"},{"indexed":false,"internalType":"address","name":"PUK2c","type":"address"}],"name":"newSender","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"},{"internalType":"address payable","name":"_newPIN","type":"address"}],"name":"ChangePIN","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"}],"name":"GetPIN","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"}],"name":"GetPUK","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GetSenderID","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"}],"name":"GetSenderInformation","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_PIN","type":"address"},{"internalType":"address payable","name":"_PUK","type":"address"}],"name":"NewSender","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_PIN","type":"address"},{"internalType":"address payable","name":"_PUK","type":"address"},{"internalType":"address","name":"_PUK2a","type":"address"},{"internalType":"address","name":"_PUK2b","type":"address"},{"internalType":"address","name":"_PUK2c","type":"address"}],"name":"NewSenderPro","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"},{"internalType":"address payable","name":"_newPIN","type":"address"},{"internalType":"address payable","name":"_newPUK","type":"address"},{"internalType":"address","name":"_newPUK2a","type":"address"},{"internalType":"address","name":"_newPUK2b","type":"address"},{"internalType":"address","name":"_newPUK2c","type":"address"}],"name":"ResetPINPUK","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"keyMap","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"PINChanged(int64,address)":{"details":"provides information of changed PIN to the website","params":{"SenderID":"uint that identifies a specific sender (is constant)","newPIN":"alternative PIN for the deleted one"}},"fallbackCall(address,uint256)":{"params":{"CustomerAddress":"is the address that called the fallback function","MonetaryAmount":"is the msg.value that was provided within the call"}},"newClaim(int64,address,address,address,address,address)":{"details":"provides information of calls of the ResetPINPUK function in its first stage of the reset process","params":{"PIN":"is the main address","SenderID":"uint that identifies a specific sender (is constant)"}},"newSender(int64,address,address,address,address,address)":{"params":{"PIN":"is the main address","PUK":"is the address to change the PIN address","PUK2a":"first of the PUK2 triplet. Is held by the sender","PUK2b":"second of the PUK2 triplet. Is held by the first trusted party","PUK2c":"third of the PUK2 triplet. Is held by the second trusted party","SenderID":"uint that identifies a specific sender (is constant)"}}},"kind":"dev","methods":{"ChangePIN(int64,address)":{"details":"to change the PIN address via the PUKhas to be called by the PUK","params":{"SenderID":"uint that identifies a specific sender (is constant)","_newPIN":"alternative PIN for the deleted one"}},"Collect()":{"details":"transfers all collected payments from this contract to the owner"},"GetPIN(int64)":{"details":"returns the PIN of the SenderID"},"GetPUK(int64)":{"details":"returns the PUK of the SenderID"},"GetSenderID()":{"details":"determines the SenderID via the address (PIN or PUK)the possibility to easlily get your SenderID increases the sender convenienceis needed for testing purposes, you have to kblock.timestamp the SenderID"},"GetSenderInformation(int64)":{"details":"returns the hole sender structhas to be called by the PUKis needed for testing purposes (backend) you have to check whether PIN and/or PUK got changed","params":{"SenderID":"uint that identifies a specific sender (is constant)"}},"NewSender(address,address)":{"details":"function registers new senders within a lower security level using the PUK address as PUK und PUK2 triplet","params":{"_PIN":"is the SCAs main address","_PUK":"is the senders main address"}},"NewSenderPro(address,address,address,address,address)":{"details":"function register allows to set PIN, PUK and PUK2 triplet, thereby creating the SenderIDthis function has to be called via the PUK address","params":{"_PIN":"is the SCAs main address","_PUK":"is the senders main address","_PUK2a":"first of the PUK2 triplet. Is held by the sender","_PUK2b":"second of the PUK2 triplet. Is held by the first trusted party","_PUK2c":"third of the PUK2 triplet. Is held by the second trusted party"}},"constructor":{"details":"defines the BCP owner as SenderID-3defines SenderID-0 - SenderID-2"}},"stateVariables":{"keyMap":{"details":"maps PIN and PUK to SenderID NOTE: ensures that different SenderIDs have different PINs and that PINs are not used as PUKs"},"resetIndex":{"details":"maps SenderID to ResetPUK NOTE: recalls last claim for reset (if any)"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"BCP Registration module.sol":"BCPRegistration"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"BCP Registration module.sol":{"keccak256":"0x8f0ca0fbfe5120675a7095f5fe1974786e8925fbff1b197362c2a3451ab7d8d8","license":"UNLICENSED","urls":["bzz-raw://48edf15435b418919097e007ef1da260accd8fba9bf33306c7e6997867f49e27","dweb:/ipfs/Qmb4QnAg5pr1WNMYGZiUBUWnL2Ao3E5Psi92xinyJcWZHH"]}},"version":1},"version":1,"checkPoints":[]}