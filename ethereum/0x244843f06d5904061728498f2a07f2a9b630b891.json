{"address":"0x244843F06d5904061728498f2A07f2A9b630B891","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_stakeholder","type":"address"}],"name":"addStakeholder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeholder","type":"address"}],"name":"calculateReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"createStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributeRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"isStakeholder","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"removeStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeholder","type":"address"}],"name":"removeStakeholder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeholder","type":"address"}],"name":"rewardOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeholder","type":"address"}],"name":"stakeOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawReward","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Alberto Cuesta Canada","kind":"dev","methods":{"addStakeholder(address)":{"params":{"_stakeholder":"The stakeholder to add."}},"calculateReward(address)":{"params":{"_stakeholder":"The stakeholder to calculate rewards for."}},"createStake(uint256)":{"params":{"_stake":"The size of the stake to be created."}},"isOwner()":{"details":"Returns true if the caller is the current owner."},"isStakeholder(address)":{"params":{"_address":"The address to verify."},"returns":{"_0":"bool, uint256 Whether the address is a stakeholder, and if so its position in the stakeholders array."}},"owner()":{"details":"Returns the address of the current owner."},"removeStake(uint256)":{"params":{"_stake":"The size of the stake to be removed."}},"removeStakeholder(address)":{"params":{"_stakeholder":"The stakeholder to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardOf(address)":{"params":{"_stakeholder":"The stakeholder to check rewards for."}},"stakeOf(address)":{"params":{"_stakeholder":"The stakeholder to retrieve the stake for."},"returns":{"_0":"uint256 The amount of wei staked."}},"totalRewards()":{"returns":{"_0":"uint256 The aggregated rewards from all stakeholders."}},"totalStakes()":{"returns":{"_0":"uint256 The aggregated stakes from all stakeholders."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Staking Token (STK)","version":1},"userdoc":{"kind":"user","methods":{"addStakeholder(address)":{"notice":"A method to add a stakeholder."},"calculateReward(address)":{"notice":"A simple method that calculates the rewards for each stakeholder."},"constructor":"The constructor for the Staking Token.","createStake(uint256)":{"notice":"A method for a stakeholder to create a stake."},"distributeRewards()":{"notice":"A method to distribute rewards to all stakeholders."},"isStakeholder(address)":{"notice":"A method to check if an address is a stakeholder."},"removeStake(uint256)":{"notice":"A method for a stakeholder to remove a stake."},"removeStakeholder(address)":{"notice":"A method to remove a stakeholder."},"rewardOf(address)":{"notice":"A method to allow a stakeholder to check his rewards."},"stakeOf(address)":{"notice":"A method to retrieve the stake for a stakeholder."},"totalRewards()":{"notice":"A method to the aggregated rewards from all stakeholders."},"totalStakes()":{"notice":"A method to the aggregated stakes from all stakeholders."},"withdrawReward()":{"notice":"A method to allow a stakeholder to withdraw his rewards."}},"notice":"Implements a basic ERC20 staking token with incentive distribution.","version":1}},"settings":{"compilationTarget":{"Staking1.sol":"StakingToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"Staking1.sol":{"keccak256":"0xda541b696a3f72981da61ef1cf70e3e21530a34f62de521550a2c1593f78e3a4","license":"UNLICENSED","urls":["bzz-raw://928f90f2cb28fa2e480a759a5637a0fd0c5f5e21967464fce73ea564f70a3ee6","dweb:/ipfs/QmSmGzAxXqP8E9VrqoED38Nf7B9ZJH95vSeN7mzu2Bh6kd"]}},"version":1},"version":1,"checkPoints":[]}