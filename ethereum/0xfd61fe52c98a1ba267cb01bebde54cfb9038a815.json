{"address":"0xfD61Fe52c98a1ba267Cb01bEBDe54cfB9038A815","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC1820_REGISTRY","outputs":[{"internalType":"contract IERC1820Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HOPR_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MULTISIG","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKENS_RECIPIENT_INTERFACE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"recoverTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"register this contract to ERC1820 registry"},"recoverTokens(address)":{"details":"Recover any residual ERC20 token/ETH to the multisig","params":{"token":"ERC20 token address that is sent to this contract. Address 0 for ETH"}},"tokensReceived(address,address,address,uint256,bytes,bytes)":{"details":"token recipient hook for ERC777","params":{"amount":"uint256 amount of tokens to transfer","from":"address token holder address. Should be zddress zero for token mintin","operator":"address operator requesting the transfer","operatorData":"bytes extra information provided by the operator (if any)","to":"address recipient address","userData":"bytes extra information provided by the token holder (if any)"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/HoprForwarder.sol":"HoprForwarder"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/HoprForwarder.sol":{"keccak256":"0x0a5dca177cfd55f88ee361619057af24691b64d75611b4a99a91771218253f6b","license":"GPL-3.0-only","urls":["bzz-raw://5023a08539033a41b24afb8ed6659eff89495e9956589431139b44699fcf04b4","dweb:/ipfs/QmXfRSjZzqKRfx4gtRY5DA8Pq2J3iYJR33xRGwB7ktdhci"]}},"version":1},"version":1,"checkPoints":[]}