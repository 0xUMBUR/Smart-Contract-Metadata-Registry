{"address":"0x9268E5957D6Ecd55CC62BCBB1965938Cd643252D","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"power","type":"uint256"}],"internalType":"struct Bridge.ValidatorWithPower[]","name":"validators","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"blockDetails","outputs":[{"internalType":"bytes32","name":"oracleState","type":"bytes32"},{"internalType":"uint64","name":"timeSecond","type":"uint64"},{"internalType":"uint32","name":"timeNanoSecond","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relayAndMultiVerify","outputs":[{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"oracleScriptID","type":"uint64"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint64","name":"askCount","type":"uint64"},{"internalType":"uint64","name":"minCount","type":"uint64"}],"internalType":"struct IBridge.RequestPacket[]","name":"","type":"tuple[]"},{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"requestID","type":"uint64"},{"internalType":"uint64","name":"ansCount","type":"uint64"},{"internalType":"uint64","name":"requestTime","type":"uint64"},{"internalType":"uint64","name":"resolveTime","type":"uint64"},{"internalType":"uint8","name":"resolveStatus","type":"uint8"},{"internalType":"bytes","name":"result","type":"bytes"}],"internalType":"struct IBridge.ResponsePacket[]","name":"","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relayAndVerify","outputs":[{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"oracleScriptID","type":"uint64"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint64","name":"askCount","type":"uint64"},{"internalType":"uint64","name":"minCount","type":"uint64"}],"internalType":"struct IBridge.RequestPacket","name":"","type":"tuple"},{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"requestID","type":"uint64"},{"internalType":"uint64","name":"ansCount","type":"uint64"},{"internalType":"uint64","name":"requestTime","type":"uint64"},{"internalType":"uint64","name":"resolveTime","type":"uint64"},{"internalType":"uint8","name":"resolveStatus","type":"uint8"},{"internalType":"bytes","name":"result","type":"bytes"}],"internalType":"struct IBridge.ResponsePacket","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"accToGovStoresMerkleHash","type":"bytes32"},{"internalType":"bytes32","name":"mainAndMintStoresMerkleHash","type":"bytes32"},{"internalType":"bytes32","name":"oracleIAVLStateHash","type":"bytes32"},{"internalType":"bytes32","name":"paramsStoresMerkleHash","type":"bytes32"},{"internalType":"bytes32","name":"slashingToUpgradeStoresMerkleHash","type":"bytes32"}],"internalType":"struct MultiStore.Data","name":"multiStore","type":"tuple"},{"components":[{"internalType":"bytes32","name":"versionAndChainIdHash","type":"bytes32"},{"internalType":"uint64","name":"height","type":"uint64"},{"internalType":"uint64","name":"timeSecond","type":"uint64"},{"internalType":"uint32","name":"timeNanoSecond","type":"uint32"},{"internalType":"bytes32","name":"lastBlockIDAndOther","type":"bytes32"},{"internalType":"bytes32","name":"nextValidatorHashAndConsensusHash","type":"bytes32"},{"internalType":"bytes32","name":"lastResultsHash","type":"bytes32"},{"internalType":"bytes32","name":"evidenceAndProposerHash","type":"bytes32"}],"internalType":"struct BlockHeaderMerkleParts.Data","name":"merkleParts","type":"tuple"},{"components":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes","name":"signedDataPrefix","type":"bytes"},{"internalType":"bytes","name":"signedDataSuffix","type":"bytes"}],"internalType":"struct TMSignature.Data[]","name":"signatures","type":"tuple[]"}],"name":"relayBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalValidatorPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"power","type":"uint256"}],"internalType":"struct Bridge.ValidatorWithPower[]","name":"validators","type":"tuple[]"}],"name":"updateValidatorPowers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"validatorPowers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockHeight","type":"uint256"},{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"oracleScriptID","type":"uint64"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint64","name":"askCount","type":"uint64"},{"internalType":"uint64","name":"minCount","type":"uint64"}],"internalType":"struct IBridge.RequestPacket","name":"requestPacket","type":"tuple"},{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"requestID","type":"uint64"},{"internalType":"uint64","name":"ansCount","type":"uint64"},{"internalType":"uint64","name":"requestTime","type":"uint64"},{"internalType":"uint64","name":"resolveTime","type":"uint64"},{"internalType":"uint8","name":"resolveStatus","type":"uint8"},{"internalType":"bytes","name":"result","type":"bytes"}],"internalType":"struct IBridge.ResponsePacket","name":"responsePacket","type":"tuple"},{"internalType":"uint256","name":"version","type":"uint256"},{"components":[{"internalType":"bool","name":"isDataOnRight","type":"bool"},{"internalType":"uint8","name":"subtreeHeight","type":"uint8"},{"internalType":"uint256","name":"subtreeSize","type":"uint256"},{"internalType":"uint256","name":"subtreeVersion","type":"uint256"},{"internalType":"bytes32","name":"siblingHash","type":"bytes32"}],"internalType":"struct IAVLMerklePath.Data[]","name":"merklePaths","type":"tuple[]"}],"name":"verifyOracleData","outputs":[{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"oracleScriptID","type":"uint64"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint64","name":"askCount","type":"uint64"},{"internalType":"uint64","name":"minCount","type":"uint64"}],"internalType":"struct IBridge.RequestPacket","name":"","type":"tuple"},{"components":[{"internalType":"string","name":"clientID","type":"string"},{"internalType":"uint64","name":"requestID","type":"uint64"},{"internalType":"uint64","name":"ansCount","type":"uint64"},{"internalType":"uint64","name":"requestTime","type":"uint64"},{"internalType":"uint64","name":"resolveTime","type":"uint64"},{"internalType":"uint8","name":"resolveStatus","type":"uint8"},{"internalType":"bytes","name":"result","type":"bytes"}],"internalType":"struct IBridge.ResponsePacket","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Band Protocol Team","kind":"dev","methods":{"constructor":{"params":{"validators":"The initial set of BandChain active validators."}},"owner()":{"details":"Returns the address of the current owner."},"relayAndMultiVerify(bytes)":{"params":{"data":"The encoded data for oracle state relay and an array of data verification."}},"relayAndVerify(bytes)":{"params":{"data":"The encoded data for oracle state relay and data verification."}},"relayBlock((bytes32,bytes32,bytes32,bytes32,bytes32),(bytes32,uint64,uint64,uint32,bytes32,bytes32,bytes32,bytes32),(bytes32,bytes32,uint8,bytes,bytes)[])":{"params":{"merkleParts":"Extra merkle parts to compute block hash. See BlockHeaderMerkleParts lib.","multiStore":"Extra multi store to compute app hash. See MultiStore lib.","signatures":"The signatures signed on this block, sorted alphabetically by address."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateValidatorPowers((address,uint256)[])":{"params":{"validators":"The changed set of BandChain validators."}},"verifyOracleData(uint256,(string,uint64,bytes,uint64,uint64),(string,uint64,uint64,uint64,uint64,uint8,bytes),uint256,(bool,uint8,uint256,uint256,bytes32)[])":{"params":{"blockHeight":"The block height. Someone must already relay this block.","merklePaths":"Merkle proof that shows how the data leave is part of the oracle iAVL.","requestPacket":"The request packet is this request.","responsePacket":"The response packet of this request.","version":"Lastest block height that the data node was updated."}}},"title":"BandChain Bridge","version":1},"userdoc":{"kind":"user","methods":{"blockDetails(uint256)":{"notice":"Mapping from block height to the struct that contains block time and hash of \"oracle\" iAVL Merkle tree."},"constructor":"Initializes an oracle bridge to BandChain.","relayAndMultiVerify(bytes)":{"notice":"Performs oracle state relay and many times of oracle data verification in one go. The caller submits the encoded proof and receives back the decoded data, ready to be validated and used."},"relayAndVerify(bytes)":{"notice":"Performs oracle state relay and oracle data verification in one go. The caller submits the encoded proof and receives back the decoded data, ready to be validated and used."},"relayBlock((bytes32,bytes32,bytes32,bytes32,bytes32),(bytes32,uint64,uint64,uint32,bytes32,bytes32,bytes32,bytes32),(bytes32,bytes32,uint8,bytes,bytes)[])":{"notice":"Relays a detail of Bandchain block to the bridge contract."},"totalValidatorPower()":{"notice":"The total voting power of active validators currently on duty."},"updateValidatorPowers((address,uint256)[])":{"notice":"Update validator powers by owner."},"validatorPowers(address)":{"notice":"Mapping from an address to its voting power."},"verifyOracleData(uint256,(string,uint64,bytes,uint64,uint64),(string,uint64,uint64,uint64,uint64,uint8,bytes),uint256,(bool,uint8,uint256,uint256,bytes32)[])":{"notice":"Verifies that the given data is a valid data on BandChain as of the relayed block height."}},"version":1}},"settings":{"compilationTarget":{"browser/Bridge.sol":"Bridge"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Bridge.sol":{"keccak256":"0x5c661effaea83f2aa64021561f0a7f585764a5822e4a8bf3d7c60528221e1618","license":"Apache-2.0","urls":["bzz-raw://9b301c40b647865cdf2e0ea787eb7b272ab9e705ba0ab58af8de7eff212c1f30","dweb:/ipfs/QmTcQCZ5K7ZQ48pjDqFJvT6ADsmPayfK7MGjrBALc5LH6U"]}},"version":1},"version":1,"checkPoints":[]}