{"address":"0xc97720988b4F0F52243686C75aCa72266a049f93","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Overload {grantRole} to track enumerable memberships"},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"mint(address,uint256,uint256,bytes)":{"details":"Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."},"mintBatch(address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."},"pause()":{"details":"Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Overload {revokeRole} to track enumerable memberships"},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"unpause()":{"details":"Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/ERC1155.sol":"NFTsManager"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/ERC1155.sol":{"keccak256":"0xaeef426667c4bb8082db2b9451877326c1b035c9e144594f8bd2a8f9276a1da9","license":"MIT","urls":["bzz-raw://5fbfd6cd4fa39a7096146a7f84b4c59d4a74750962b6ad4c1684f7c32af7c4c1","dweb:/ipfs/QmUDMQ8FsjpZJToZfdTffGZh5kMDfD7FaDRyHRAoMJu8YA"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/access/AccessControlEnumerableUpgradeable.sol":{"keccak256":"0x5c2d9e8119b21f485aa56597ff7ab70ec7800dd09671c5fb63cd3dbfc6690a38","license":"MIT","urls":["bzz-raw://89066543d089b0e044f281a37d362114759ee801da53df155919fab0214b68cc","dweb:/ipfs/QmRDRca5jgF44exSLeydu5DrC6T37FjAEcHbKT8AftRzHd"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/access/AccessControlUpgradeable.sol":{"keccak256":"0x010e2ecd8638076fc99f53e52d2293f2d8b423a840fb710f4bfaf384cab090db","license":"MIT","urls":["bzz-raw://54b772572d760aa9959dd9abc28ef1c707e04b36f258f50bfbfdc99b32b4c0fb","dweb:/ipfs/QmNPo7yF62XT9Fgqt6pj8RsoQddeFeYY47bbAXpJ8SP4iB"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/security/PausableUpgradeable.sol":{"keccak256":"0xda885b772d8096aa39de20455d40f359d90b78b660b06706c40695cbfd64eddb","license":"MIT","urls":["bzz-raw://8289f4fe676df3245d487c3360ae130279df59b096c5935845c9aec02b72bc1e","dweb:/ipfs/QmQWG3eyrHq81CzRJdf26norpwBttPRYhstzscwbiL7J7s"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/ERC1155Upgradeable.sol":{"keccak256":"0xec04aa6b5fd2603a276d218721f8916cffc76ad6f208660e76bd981ed993c948","license":"MIT","urls":["bzz-raw://442e96f3ade5708e10d6c141c0910b49bf0bbf21a31182a1db1a2c87be505ea4","dweb:/ipfs/QmXtYN9w2xd9hHc2ovTBWxUsUqPbQb1f9iBCtqKRbVUMiy"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"keccak256":"0x6e29c2b903823f2a79c52b38b8346e46e9dd7129f124e67102307100f0c21355","license":"MIT","urls":["bzz-raw://685c07e5e5b6104e3cdae1b05fb9ba56b1beaaa13ec6ee38a6cc59996ab2be34","dweb:/ipfs/QmcREqP5CDuGZS7RoUCzQMU7kTqtsQsYjU7xQ3iLQRoZGH"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/IERC1155Upgradeable.sol":{"keccak256":"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9","license":"MIT","urls":["bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a","dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol":{"keccak256":"0xda63fb129f8d2f941733e99b675360421607b11ce21b4c64dc04b603425692f3","license":"MIT","urls":["bzz-raw://f3dec29367ac40c3455d7103a44348afad3867d4d7935a97368851387b83d982","dweb:/ipfs/QmYkCFJ86FooAv2HmoD4joCCmeUFBvrBHe9GwWtNgwE7ez"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"keccak256":"0x579aca37a40d9cae3ee8021769c32b590d13144f286a1a751b7868d21e36e0f8","license":"MIT","urls":["bzz-raw://37d3940504b4ef3b9fb7c2cfcf476a9d70b9391501c025c4e2e115a5f29031c6","dweb:/ipfs/QmPf5WxG3ChkZjNS4nKiFdHmAhW9Ag2YJWomdPfMfB4egZ"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol":{"keccak256":"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165","license":"MIT","urls":["bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819","dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol":{"keccak256":"0x6ad264fc7c9100e0ea2e381d384a9f4aaffa1b0d8bce97e6908ea6d7a5817841","license":"MIT","urls":["bzz-raw://7cc1cd850553aff70e400ba739379098f9700a8ca7c2f2fe42a15430d9cdf9a2","dweb:/ipfs/QmZZNkWe9grXNqRX5ff28t5xpqMBatSfpMJNDkM4Ksb3VR"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb","license":"MIT","urls":["bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726","dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x3d094287dec2bd3a7edf6cdd5d18d158d52e9533ee38e36b2780934039ca166e","license":"MIT","urls":["bzz-raw://e8ecb81826af9d3dd337d0dad1952d7937c6c92b1a516dd3d52d424fc624e9cd","dweb:/ipfs/QmWPuEuGCWMa3DsDkcApXYXcsWVVqyRKLCLBufETFEg6YK"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/Initializable.sol":{"keccak256":"0xab644b65c962df9e77ec01a5abbb06a09c2a97b06a2ac838b5e0091ce05eb30d","license":"MIT","urls":["bzz-raw://a694ed0de99b61cfc07ef3122fe3f0b43d0615e50d648d50458dafde5dfcff60","dweb:/ipfs/QmcHXoieL37gTfu49wfrXEQVjswC2RifYmCAPe36HL9jr4"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0xc56864e832b75218653015a21452bbe396d3ceee9263af42bee16401ba9a2154","license":"MIT","urls":["bzz-raw://42c3676e468967e66b7423247c509db16539304418b7c3abbc07834a6282b392","dweb:/ipfs/QmTGfmsJmGdzFTguGNkVVxvRe5jdqWLoFS8bF7YTSTd3hL"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/introspection/IERC165Upgradeable.sol":{"keccak256":"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c","license":"MIT","urls":["bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590","dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU"]},"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts-upgradeable/master/contracts/utils/structs/EnumerableSetUpgradeable.sol":{"keccak256":"0x23ebf6e219f634c3cc7445147368066dbfb5c1278fc4c48edbb9e0bd38aa4151","license":"MIT","urls":["bzz-raw://f35b1f048c7f38621b3fb70f69e26c06b977f804736a474e4d3f408f7c42076d","dweb:/ipfs/QmUj1gAvJ5PkJuznE9VZTzDU3caSMHFVPMQrj1EXZKFv1P"]}},"version":1},"version":1,"checkPoints":[]}