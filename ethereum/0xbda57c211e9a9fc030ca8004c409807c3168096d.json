{"address":"0xbda57c211E9A9FC030CA8004C409807C3168096D","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"proposalNames","type":"uint256[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candidate","outputs":[{"internalType":"address","name":"Address","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"chairperson","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"giveRightToVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"uint256","name":"name","type":"uint256"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewRank","outputs":[{"internalType":"uint256[]","name":"rankName","type":"uint256[]"},{"internalType":"uint256[]","name":"rankVote","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposal","type":"uint256"}],"name":"viewVoter","outputs":[{"internalType":"address[]","name":"votersAddress","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposal","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"bool","name":"voted","type":"bool"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"vote","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingevent","outputs":[{"internalType":"uint256","name":"totalproposal","type":"uint256"},{"internalType":"uint256","name":"totalvote","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerName","outputs":[{"internalType":"uint256","name":"winnerName_","type":"uint256"},{"internalType":"uint256","name":"voteCount_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposal","outputs":[{"internalType":"uint256","name":"winningProposal_","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"IP Sheung Chiu, Li Chun Ngai Implements voting process along with vote delegation and added funciton that allow users to get more information","kind":"dev","methods":{"constructor":{"details":"Create a new ballot to choose one of 'proposalNames'.","params":{"proposalNames":"names of proposals"}},"delegate(address)":{"details":"Delegate your vote to the voter 'to'.","params":{"to":"address to which vote is delegated"}},"giveRightToVote(address)":{"details":"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.","params":{"voter":"address of voter"}},"viewRank()":{"details":"Call viewRank() function to get the rank of the proposal","returns":{"rankName":"ranked proposal name ","rankVote":"ranked proposal vote count"}},"viewVoter(uint256)":{"details":"Call viewVoter(uint proposal) funciton to get the voter address who voted to that proposal","params":{"proposal":"the proposal that you wnat to find out the voter adress"},"returns":{"votersAddress":"an array of voter address"}},"vote(uint256)":{"details":"Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.","params":{"proposal":"index of proposal in the proposals array"}},"winnerName()":{"details":"Calls winningProposal() function to get the index of the winner contained in the proposals array and then","returns":{"voteCount_":"the vote count of the winner","winnerName_":"the name of the winner"}},"winningProposal()":{"details":"Computes the winning proposal taking all previous votes into account.","returns":{"winningProposal_":"index of winning proposal in the proposals array"}}},"title":"StatementVoting","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/tests/4_Ballot_test.sol":"Voting"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/tests/4_Ballot_test.sol":{"keccak256":"0x230b17b32f9101998bd9c005b695578eeb8b2506f5c864bbb6e1ff6a7b814037","license":"GPL-3.0","urls":["bzz-raw://9e64fe898e20a70c66379f768ded160dc78a3f708d447f70afa74098239147ba","dweb:/ipfs/QmWbCe3rksUXdjnryrF6wXbXxwREqXys4D6oHJbuHpf9sw"]}},"version":1},"version":1,"checkPoints":[]}