{"address":"0x4aA2669332207122a0bE0866e193de70792fFbDd","name":"","metadata":{"compiler":{"version":"0.6.2+commit.bacdbe57"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"address","name":"proxyAdmin","type":"address"},{"internalType":"address","name":"signer1","type":"address"},{"internalType":"address","name":"signer2","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"confirmAdminTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"confirmedImplementation","type":"address"}],"name":"confirmImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"impl","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdminAddress","type":"address"}],"name":"proposeAdminTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"proposeNewImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposedNewAdmin","outputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedNewAdminTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedNewImplementation","outputs":[{"internalType":"address","name":"impl","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyAdmin","outputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"proxySigner","outputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"methods":{"confirmAdminTransfer()":{"details":"Changes the admin address to the previously proposed admin address if 24 hours has past since it was proposed"},"confirmImplementation(address)":{"details":"Confirms a previously proposed implementation if the sender is one of the two cosigners","params":{"confirmedImplementation":"the address of previously proposed implementation (has to match the previously proposed implementation)"}},"constructor":{"details":"Constructor function sets address of master copy contract.","params":{"implementation":"the address of the implementation contract that this proxy uses","proxyAdmin":"the address of the admin of this proxy","signer1":"the first signer of this proxy","signer2":"the second signer of this proxy"}},"implementation()":{"details":"Returns the address of the implementation contract of this proxy"},"proposeAdminTransfer(address)":{"details":"Proposes a new admin address if the sender is the Admin","params":{"newAdminAddress":"address of the new admin role "}},"proposeNewImplementation(address)":{"details":"Proposes a new implementation contract for this proxy if sender is the Admin","params":{"newImplementation":"the address of the new implementation"}},"proposedNewAdmin()":{"details":"Returns the new proposed admin address of this proxy (if there is no proposed implementations, returns address(0x0))"},"proposedNewAdminTimestamp()":{"details":"Returns the timestamp that the proposed admin can be changed/confirmed"},"proposedNewImplementation()":{"details":"Returns the new proposed implementation address of this proxy (if there is no proposed implementations, returns address(0x0))"},"proxyAdmin()":{"details":"Returns the admin address of this proxy"},"proxySigner(uint256)":{"details":"Returns the address of the first cosigner if 'id' == 0, otherwise returns the address of the second cosigner"},"proxyType()":{"details":"Returns the proxy type, specified by EIP-897","returns":{"_0":"Always return 2*"}}},"title":"Proxy - Generic proxy contract allows to execute all transactions"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"contracts/proxies/xAAVEProxy.sol":"xAAVEProxy"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/proxies/xAAVEProxy.sol":{"keccak256":"0xd0056ded120eeb4c61344a781e31e2e82f760270bddec1cf1616c3a03d94bbe0","urls":["bzz-raw://e35f7f1df70b09c7276c3e1f9294813d628e8e87e810f83a12250bc9b2f41d51","dweb:/ipfs/QmUoe7iV9Yd4a3pso9b27F33M7Tqagr2b1YWuzRHXZpJhL"]}},"version":1},"version":1,"checkPoints":[]}