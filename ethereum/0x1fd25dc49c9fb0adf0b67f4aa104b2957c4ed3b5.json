{"address":"0x1fD25DC49C9fb0aDF0b67F4aa104b2957C4Ed3b5","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"ticketId","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"purchasedAt","type":"string"}],"name":"addPurchasers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"ticketId","type":"string"},{"internalType":"string","name":"scanName","type":"string"},{"internalType":"string","name":"purchasedAt","type":"string"}],"name":"addScan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string[]","name":"newTicketsId","type":"string[]"},{"internalType":"string[]","name":"names","type":"string[]"},{"internalType":"string[]","name":"purchasedAt","type":"string[]"}],"name":"addTicket","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eventName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"ticketId","type":"string"}],"name":"getPurchasers","outputs":[{"components":[{"internalType":"string","name":"ticketid","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"date","type":"string"}],"internalType":"struct Event.User[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"ticketId","type":"string"}],"name":"getScans","outputs":[{"components":[{"internalType":"string","name":"ticketid","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"date","type":"string"}],"internalType":"struct Event.Scan[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSales","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"purchasers","outputs":[{"internalType":"string","name":"ticketid","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"date","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"scans","outputs":[{"internalType":"string","name":"ticketid","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"date","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"newEventName","type":"string"}],"name":"setNewEventName","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"tickets","outputs":[{"internalType":"string","name":"ticketid","type":"string"},{"internalType":"uint256","name":"ticketOwner","type":"uint256"},{"internalType":"bool","name":"isValue","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSales","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implements storing transactions information for the event","methods":{"addPurchasers(string,string,string)":{"details":"add a new purchaser for the ticket.","params":{"name":"id value of the new owner of the ticket.","purchasedAt":"date of the ticket purchase.","ticketId":"value of the ticket id for the event."}},"addScan(string,string,string)":{"details":"add a scan for the ticket.","params":{"purchasedAt":"date of the ticket scaned.","scanName":"tiny description of the scan purpose for the ticket.","ticketId":"value of the ticket id for the event."}},"addTicket(string[],string[],string[])":{"details":"sell a list of new tickets for the event.","params":{"names":"id value of the new owner of the ticket.","newTicketsId":"value of the tickets ids for the event.","purchasedAt":"date of the ticket purchase."}},"getPurchasers(string)":{"details":"show a list of purchasers for the ticket.","params":{"ticketId":"value of the ticket id for the event."}},"getScans(string)":{"details":"show a list of scans for the ticket.","params":{"ticketId":"value of the ticket id for the event."}},"getTotalSales()":{"details":"show the amount of tickets sold."},"setNewEventName(string)":{"details":"setNewEventName value in if the title is empty this will set the new event name","params":{"newEventName":"value to set the new event name"}}},"title":"Event"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/Event.sol":"Event"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Event.sol":{"keccak256":"0xbeed80c32a0f524ed5bdba42a7ce51cd0c82d784c0d36e46b8280040d564ad60","urls":["bzz-raw://efffc48102a9852acecad2e045ab3536eba285f3b7fd89db71fd5f1a9aea6943","dweb:/ipfs/QmPtF8CvjXALur7kSMMAvJCLtc1WF5x8NrnrXVXyhsn1uo"]}},"version":1},"version":1,"checkPoints":[]}