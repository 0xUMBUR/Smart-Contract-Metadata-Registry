{"address":"0x3b50336E3E1E618FE74DF351966ebaD2B12cD24a","name":"","metadata":{"compiler":{"version":"0.7.4+commit.3f05b770"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"address","name":"_priceOracle","type":"address"},{"internalType":"bytes","name":"_oraclePayload","type":"bytes"},{"internalType":"uint256","name":"_minColRatio","type":"uint256"}],"name":"getConditionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"address","name":"_priceOracle","type":"address"},{"internalType":"bytes","name":"_oraclePayload","type":"bytes"},{"internalType":"uint256","name":"_minColRatio","type":"uint256"}],"name":"isVaultUnsafe","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"_conditionData","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ok","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Gelato Team","kind":"dev","methods":{"getConditionData(uint256,address,bytes,uint256)":{"details":"Use the return for your Task's Condition.data field off-chain.","returns":{"_0":"The encoded payload for your Task's Condition.data field."}},"isVaultUnsafe(uint256,address,bytes,uint256)":{"details":"The price oracle must return a uint256 WAD (10**18) value.","params":{"_minColRatio":"The minimum collateral ratio measured in the price of the collateral as specified by the _priceOracle.","_oraclePayload":"The data for making the staticcall to the oracle's read  method e.g. the selector for MakerOracle's read fn.","_priceOracle":"The price oracle contract to supply the collateral price  e.g. Maker's ETH/USD oracle for ETH collateral pricing.","_vaultId":"The id of the Maker vault"},"returns":{"_0":"OK if the Maker Vault is unsafe, otherwise some error message."}},"ok(uint256,bytes,uint256)":{"details":"A standard interface for GelatoCore to read Conditions","params":{"_conditionData":"The data you get from `getConditionData()`"},"returns":{"_0":"OK if the Condition is there, else some error message."}}},"title":"ConditionMakerVaultUnsafe","version":1},"userdoc":{"kind":"user","methods":{"getConditionData(uint256,address,bytes,uint256)":{"notice":"Convenience function for off-chain _conditionData encoding"},"isVaultUnsafe(uint256,address,bytes,uint256)":{"notice":"Specific implementation of this Condition's ok function"},"ok(uint256,bytes,uint256)":{"notice":"Standard GelatoCore system function"}},"notice":"Condition tracking Maker vault collateralization safety requirements.","version":1}},"settings":{"compilationTarget":{"contracts/contracts/gelato/conditions/ConditionMakerVaultUnsafe.sol":"ConditionMakerVaultUnsafe"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@gelatonetwork/core/contracts/conditions/GelatoConditionsStandard.sol":{"keccak256":"0xa3d9ee5c4398914bbc0fe75fe54e57b73b8a4367caf9a40d9e5fd1ba9d4adb89","license":"UNLICENSED","urls":["bzz-raw://15a26f9d34cd8319ef5a3505fd0b674e9cde1c91fa288bba77aa83afbad8e1ae","dweb:/ipfs/QmY7HdSvfytgbfyTybS62si6vUoQ3Nihtvm96zvuiGT5HE"]},"@gelatonetwork/core/contracts/conditions/IGelatoCondition.sol":{"keccak256":"0xd07607af93227ec5f8c2f5401289937b98c298f0d2398c1ba7410f82a6253964","license":"UNLICENSED","urls":["bzz-raw://0347bc716c5adc4c0cbc5b712a056a8a14f10541a906b988cd976b5b23ee2a22","dweb:/ipfs/Qmet4QmbiGvAc83y6qbqzdddEsBg5y5HA9MC1ifA3wm3Am"]},"contracts/contracts/gelato/conditions/ConditionMakerVaultUnsafe.sol":{"keccak256":"0x9e2e7031bb676207685a940942814e15d6b3608e203aa510349a85f55b78d33d","license":"UNLICENSED","urls":["bzz-raw://53925f520a37888c7ccb55a9f1a1b7fa5ff9dbfb3544bb95c5d4c58a0aa93533","dweb:/ipfs/QmQsUT7wYkfEHVENEQ91LSRsSADbJnyKyMEcznryKRZJp8"]},"contracts/interfaces/InstaDapp/resolvers/IInstaMakerResolver.sol":{"keccak256":"0x9f5dfebe60dbddfcd90df75a023603c5220c28c21355ef20b1e5fb15f1f4f58d","license":"UNLICENSED","urls":["bzz-raw://20cc98f6a3db3ca587a67fcef0d8bf36dfe3784d798cad2fb9a4a818db0d69d5","dweb:/ipfs/QmYWbXWtWk8FmA8mgxdAhYfRGv9eb92nuT6meWMZ2KbnvU"]},"contracts/lib/GelatoBytes.sol":{"keccak256":"0x9038c820e041814ca2311bf582f2123171865b36c9438a7c6f85eb99406ec45c","license":"UNLICENSED","urls":["bzz-raw://7f6c173fc5175727e2af83c7e81dae1689bd9b20942bd8cf7ce60c758fbd18d0","dweb:/ipfs/QmSJHgGU7TQ1dLruVh7ChfyxApYrMrQY9Be7hEruowKrvr"]},"contracts/vendor/DSMath.sol":{"keccak256":"0xa0b7c69e573cd75641300eaa6f8dffd94d1334b1561079e75aa9e740689f30f7","license":"AGPL-3.0-or-later","urls":["bzz-raw://dbd7989adc7379e24eb94d0c17d2d2097111e831f14a6bacf9f25c347fb723e6","dweb:/ipfs/QmeXfbz2cgV4UxaCrnsTdYdF3QpEm9vnBx1uKVrdQcnGnm"]}},"version":1},"version":1,"checkPoints":[]}