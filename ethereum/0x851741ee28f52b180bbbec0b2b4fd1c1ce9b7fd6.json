{"address":"0x851741Ee28f52B180bbBEC0b2B4fD1C1CE9b7fD6","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"i_start","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"i_end","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total_xdai_rewards","type":"uint256"}],"name":"_BatchedRewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"blockId","type":"uint256"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"uint256","name":"xdai_value","type":"uint256"}],"name":"_BlockOnSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"blockId","type":"uint256"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"string","name":"file_hash","type":"string"},{"indexed":false,"internalType":"uint256","name":"chunk_id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xdai_value","type":"uint256"},{"indexed":false,"internalType":"string","name":"attachments","type":"string"},{"indexed":false,"internalType":"string","name":"tags","type":"string"}],"name":"_BlockPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"epoch_id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"owners_token_rewards","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"epoch_start_date","type":"uint256"}],"name":"_NewEpoch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalID","type":"uint256"},{"indexed":false,"internalType":"bool","name":"decision","type":"bool"}],"name":"_ProposalClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEndDate","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"_ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"user_staking_rewards_","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"owners_token_rewards","type":"uint256"}],"name":"_RewardPoolInitialization","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"user_xdai_rewards_","type":"uint256"}],"name":"_RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"uint256","name":"xdai_value","type":"uint256"}],"name":"_Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"_TakeDown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalID","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"_TokensRescued","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"uint256","name":"xdai_value","type":"uint256"}],"name":"_UnStake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"user_xdai_rewards_","type":"uint256"}],"name":"_UserClaimedRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"numTokens","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"_Voted","type":"event"},{"anonymous":false,"inputs":[],"name":"_moderatorsApprobationVote","type":"event"},{"anonymous":false,"inputs":[],"name":"_moderatorsApprobationVoteClose","type":"event"},{"inputs":[],"name":"BIDDING_PRICE_RATIO_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BLOCK_COUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"i_start","type":"uint256"},{"internalType":"uint256","name":"i_end","type":"uint256"}],"name":"BatchedDistributeRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"Blocks","outputs":[{"internalType":"bool","name":"on","type":"bool"},{"internalType":"string","name":"image_hash","type":"string"},{"internalType":"uint256","name":"chunk_id","type":"uint256"},{"internalType":"enum eternal_page_v2.BlockStatus","name":"status","type":"uint8"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"xdai_value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"block_id_","type":"uint256[]"},{"internalType":"string","name":"file_hash_","type":"string"},{"internalType":"uint256[]","name":"chunk_id_","type":"uint256[]"},{"internalType":"uint256[]","name":"block_paid_prices_","type":"uint256[]"},{"internalType":"string","name":"attachments","type":"string"},{"internalType":"string","name":"tags","type":"string"}],"name":"Buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"ClaimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"CloseModApprobationVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewards_for_block_owners","type":"uint256"}],"name":"DepositRewardsPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"DepositTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"DistributeRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"EPOCH_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERNANCE_FUNDS_RECEIVER_ADDRESS","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INITAL_BLOCK_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_STAKE_TO_START_PROPOSAL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_VOTE_STAKED_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_VOTE_STAKED_REQUIRED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_VOTE_TOTAL_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_APPROB_MIN_VOTE_COUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_MIN_STAKE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_POOL_CAP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_QUORUM_SLASHING","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_REWARD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATION_SLASHING_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool[]","name":"decision_active_moderators_","type":"bool[]"}],"name":"ModApprobationVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposed_receiver","type":"address"}],"name":"ProposeFundsReceiver","outputs":[{"internalType":"uint256","name":"receiverID","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"REQUIRED_STAKE_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STANDARD_VOTE_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"block_id_","type":"uint256[]"},{"internalType":"uint256[]","name":"xdai_sell_price_","type":"uint256[]"}],"name":"SetSell","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"Stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"StakeFromBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"params_","type":"uint256[]"},{"internalType":"uint256[]","name":"new_proposed_values_","type":"uint256[]"}],"name":"StartProposal","outputs":[{"internalType":"uint256","name":"proposalID","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"block_id","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"TakeDown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"block_id_","type":"uint256[]"},{"internalType":"string","name":"reason","type":"string"}],"name":"TakeDowns","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"TriggerNextEpochAndRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"Unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stake","type":"uint256"}],"name":"UnstakeToBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"VOTE_QUORUM_TO_PASS_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"ValidateProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"},{"internalType":"bool","name":"decision","type":"bool"}],"name":"VoteOnProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_proposalIDs","type":"uint256[]"},{"internalType":"bool[]","name":"_decisions","type":"bool[]"}],"name":"VoteOnProposals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_numTokens","type":"uint256"}],"name":"WithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"WithdrawxDai","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"active_moderators_","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"available_xdai_balance","type":"uint256"},{"internalType":"uint256","name":"available_token_balance","type":"uint256"},{"internalType":"uint256","name":"staked_token_balance","type":"uint256"},{"internalType":"uint256","name":"stake_timestamp","type":"uint256"},{"internalType":"uint256","name":"last_collected_epoch","type":"uint256"},{"internalType":"uint256","name":"last_epoch_voted","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"current_xdai_balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_voter","type":"address"},{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"didVote","outputs":[{"internalType":"bool","name":"committed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance_xdai_balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"holders_xdai_balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_terminationDate","type":"uint256"}],"name":"isExpired","outputs":[{"internalType":"bool","name":"expired","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"isPassed","outputs":[{"internalType":"bool","name":"passed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"isStakeholder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_epoch_date","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_epoch_remaining_rewards_","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_epoch_rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_epoch_total_stake_","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"moderation_gov_vote_in_progress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"moderation_governance_votes_amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"moderation_xdai_balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"moderators","outputs":[{"internalType":"bool","name":"on","type":"bool"},{"internalType":"uint256","name":"locked_rewards","type":"uint256"},{"internalType":"enum eternal_page_v2.ModeratorStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"last_takedown_date","type":"uint256"},{"internalType":"uint256","name":"votes_ok","type":"uint256"},{"internalType":"uint256","name":"votes_slash","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owners_rewards_pool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"proposalEnded","outputs":[{"internalType":"bool","name":"ended","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"proposalExists","outputs":[{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"enum eternal_page_v2.ProposalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteEndDate","type":"uint256"},{"internalType":"uint256","name":"votesFor","type":"uint256"},{"internalType":"uint256","name":"votesAgainst","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposed_xdai_funds_receiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakeholders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_stake_count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"used_block_count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalID","type":"uint256"}],"name":"votePeriodActive","outputs":[{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"BatchedDistributeRewards(uint256,uint256)":{"details":"Distribute the rewards (staking rewards AND xDai rewards) to all the stakeholder who staked for the last epoch      if user hasn't staked for at least EPOCH_DURATION, he can't be elligble for rewards.      Remaining rewards that are not distributed are redistributed on the next epoch rewards"},"Buy(uint256[],string,uint256[],uint256[],string,string)":{"details":"Buy blocks identified by block_id_,  pointing to their image file_hash_,   each block is associated with a chunk_id_ (optional, set to zero if not used), block_paid_prices_ contains the prices that the sender is willing to pay for each block_id_  attachments contains some string like a website, for advertisement, tags are for future usecases. ","params":{"attachments":"string attachement, to include a website / URL with an image on the application (advertisement purposes, etc.)","block_id_":"Array of blocks to buy","block_paid_prices_":"Array of the prices to be paid for each block identified in block_id_","chunk_id_":"Array of the chunks identifier associated with each block identified in block_id_","file_hash_":"image_file hash stored in decentralized storage (SWARM)","tags":"string intended to receive json-valid content, for future usecases"}},"ClaimRewards()":{"details":"Distribute the rewards (staking rewards AND xDai rewards) to all the stakeholder who staked for the last epoch      if user hasn't staked for at least EPOCH_DURATION, he can't be elligble for rewards.      Remaining rewards that are not distributed are redistributed on the next epoch rewards"},"CloseModApprobationVote()":{"details":"Closes the current moderation approval vote, execute decisions for each moderator"},"DepositRewardsPool(uint256)":{"details":"Deposit Tokens into the reward pool for the system. Used once at the beginning of the system by the developper team","params":{"rewards_for_block_owners":"amount of tokens to be transfered to the block-owners-rewards pool"}},"DepositTokens(uint256)":{"details":"Deposit Tokens into available token balance","params":{"tokens":"amount of tokens to be transfered, to be called after approve() on the token contract"}},"DistributeRewards()":{"details":"Distribute the rewards (staking rewards AND xDai rewards) to all the stakeholder who staked for the last epoch      if user hasn't staked for at least EPOCH_DURATION, he can't be elligble for rewards.      Remaining rewards that are not distributed are redistributed on the next epoch rewards"},"ModApprobationVote(bool[])":{"details":"Vote in the current moderation approval vote, initated by/for the governance of the system","params":{"decision_active_moderators_":"Array of decisions, to approve (true) or punish (false) the moderator at a given index"}},"ProposeFundsReceiver(address)":{"details":"Propose a new receiving address for any transfer from the governance pool, that will be pushed in the proposed_xdai_funds_receiver array","params":{"proposed_receiver":"proposed address to send funds to, to finance decentralized storage, hosting, etc."},"returns":{"receiverID":"            ID/index of this new receiver address in the public proposed_xdai_funds_receiver array"}},"SetSell(uint256[],uint256[])":{"details":"Set the new price of a list of blocks, but the prices in xdai_sell_price_ can only be lower than the current xdai_price.   The msg.sender must the owner of all blocks provided in block_id_","params":{"block_id_":"Array of blocks to update price","xdai_sell_price_":"Array of new prices for each block [Prices are provided is WITHOUT BIDDING_PRICE_RATIO_PERCENT INCLUDED]"}},"Stake(uint256)":{"params":{"_stake":"The size of the stake to be created."}},"StakeFromBalance(uint256)":{"params":{"_stake":"The size of the stake to be created."}},"StartProposal(uint256[],uint256[])":{"details":"Initiates a proposal to modify the system parameters, with configured parameters at proposalID emitted by ProposalCreated event","params":{"new_proposed_values_":"arerray of proposed values for the parameters quoted in params_, make sure you are using the right unit as it depend on the parameter","params_":"Array of parameters index, like [0,3,7], to be modified in the proposal"},"returns":{"proposalID":"            ID of this new submitted proposal to the governance"}},"TakeDown(uint256,string)":{"details":"Takedown a block that break the rules of the platform, get a reward","params":{"block_id":"ID of the block to takedown","reason":"string to include the reason of the takedown"}},"TakeDowns(uint256[],string)":{"details":"Takedown multiple blocks","params":{"block_id_":"IDs of the block to takedown","reason":"strings to include the reasons of the takedown"}},"Unstake(uint256)":{"params":{"_stake":"The size of the stake to be unstaked and sent back to the user."}},"UnstakeToBalance(uint256)":{"params":{"_stake":"The size of the stake to be unstaked and sent back to the user's balance."}},"ValidateProposal(uint256)":{"params":{"_proposalID":"Integer identifier associated with target proposal to validate, whether it's a passed or refused proposal"}},"VoteOnProposal(uint256,bool)":{"params":{"decision":"user decision (true or false), wether to accept or reject the proposal _proposalID"}},"VoteOnProposals(uint256[],bool[])":{"params":{"_decisions":"Array of user decisions (true or false), wether to accept or reject the proposal _proposalID","_proposalIDs":"Array of integer identifiers associated with target proposals"}},"WithdrawTokens(uint256)":{"params":{"_numTokens":"The number of ERC20 tokens desired in exchange for voting rights"}},"WithdrawxDai(uint256)":{"params":{"_amount":"The number of ERC20 tokens desired in exchange for voting rights"}},"constructor":{"details":"Initializer. Can only be called once."},"didVote(address,uint256)":{"details":"Checks if user has committed for specified proposal","params":{"_proposalID":"Integer identifier associated with target proposal","_voter":"Address of user to check against"},"returns":{"committed":"      Boolean indication of whether user has committed"}},"isExpired(uint256)":{"details":"Checks if an expiration date has been reached","params":{"_terminationDate":"Integer timestamp of date to compare current timestamp with"},"returns":{"expired":"                Boolean indication of whether the terminationDate has passed"}},"isPassed(uint256)":{"details":"Check if votesFor out of totalVotes exceeds votesQuorum","params":{"_proposalID":"Integer identifier associated with target proposal"}},"isStakeholder(address)":{"params":{"_address":"The address to verify."},"returns":{"_0":"bool     Boolean indicator wheter the adress is currently stakeholder"}},"proposalEnded(uint256)":{"params":{"_proposalID":"Integer identifier associated with the target proposal"},"returns":{"ended":"          Boolean indication of whether proposaling period is over"}},"proposalExists(uint256)":{"details":"Checks if a proposal exists","params":{"_proposalID":"The proposalID whose existance is to be evaluated."},"returns":{"exists":"         Boolean Indicates whether a proposal exists for the provided proposalID"}},"votePeriodActive(uint256)":{"details":"Checks isExpired for the specified proposal's voteEndDate","params":{"_proposalID":"Integer identifier associated with target proposal"},"returns":{"active":"         Boolean indication of if voting is still open for target proposal"}}},"version":1},"userdoc":{"kind":"user","methods":{"Stake(uint256)":{"notice":"A method for a stakeholder to create a stake. This method update the stake timestamp of the user"},"StakeFromBalance(uint256)":{"notice":"A method for a stakeholder to create a stake."},"TriggerNextEpochAndRewards()":{"notice":"Trigger the new epoch, redistribute current epoch xdai balance calculate all rewards (staking, owners rewards, holders rewards) and distribute all owners staking rewards rewards the user that trigger this function with TRIGGER_REWARD xDai"},"Unstake(uint256)":{"notice":"A method for a stakeholder to Unstake"},"UnstakeToBalance(uint256)":{"notice":"A method for a stakeholder to Unstake"},"ValidateProposal(uint256)":{"notice":"Trigger the validation of a proposal; if the proposal has ended.  If the requirements are valid, params will be modified accordingly to the proposed values of the proposal"},"VoteOnProposal(uint256,bool)":{"notice":"Commits vote on a given proposal"},"VoteOnProposals(uint256[],bool[])":{"notice":"Commits votes on an array of proposals"},"WithdrawTokens(uint256)":{"notice":"Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights"},"WithdrawxDai(uint256)":{"notice":"Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights"},"isPassed(uint256)":{"notice":"Determines if proposal has passed"},"isStakeholder(address)":{"notice":"A method to check if an address is a stakeholder."},"proposalEnded(uint256)":{"notice":"Determines if proposal is over"},"votePeriodActive(uint256)":{"notice":"Checks if the voting period is still active for the specified proposal"}},"version":1}},"settings":{"compilationTarget":{"contracts/pix_v5.sol":"eternal_page_v2"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/pix_v5.sol":{"keccak256":"0xfa8de73ac8632810f48248731cedca26da475338b2831e0bfe9429035cca84df","urls":["bzz-raw://983213098d3cf6cc5ce45ec5c14a80bd093416cd78c5233bc6c28b927125dac7","dweb:/ipfs/QmTeSyvDco1oAFHnp5bJZeo6YSkT5jxfwPj9iXG7TptRJs"]}},"version":1},"version":1,"checkPoints":[]}