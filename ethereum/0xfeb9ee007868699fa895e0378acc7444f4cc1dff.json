{"address":"0xFEB9EE007868699fa895E0378ACC7444F4CC1dfF","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"purchaser","type":"address"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"aggregator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"capReached","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestETHPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"weiAmount","type":"uint256"}],"name":"getTokenAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"wallet","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weiRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.","kind":"dev","methods":{"aggregator()":{"returns":{"_0":"the aggregator smart contract address"}},"buyTokens(address)":{"details":"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.","params":{"beneficiary":"Recipient of the token purchase"}},"cap()":{"returns":{"_0":"the cap of the crowdsale."}},"capReached()":{"details":"Checks whether the cap has been reached.","returns":{"_0":"Whether the cap was reached"}},"getTokenAmount(uint256)":{"details":"Override to extend the way in which ether is converted to tokens.","params":{"weiAmount":"Value in wei to be converted into tokens"},"returns":{"_0":"Number of tokens that can be purchased with the specified _weiAmount"}},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"rate()":{"returns":{"_0":"the number of token units a buyer gets per wei."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"token()":{"returns":{"_0":"the token being sold."}},"tokenSold()":{"returns":{"_0":"the tokenSold of the crowdsale."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wallet()":{"returns":{"_0":"the address where funds are collected."}},"weiRaised()":{"returns":{"_0":"the amount of wei raised."}}},"title":"PausableCrowdsale","version":1},"userdoc":{"events":{"TokensPurchased(address,address,uint256,uint256)":{"notice":"Event for token purchase logging"}},"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/WALTSale.sol":"WALTSale"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/AggregatorInterface.sol":{"keccak256":"0xc822ed208ced37614e9205bd98c35a0c9de851ec7da7d155531b198d1213a15a","license":"MIT","urls":["bzz-raw://26db81034a78461f9590b8835ed98b6b7d166adb3ab394206c8311897c3f8660","dweb:/ipfs/QmPyNnnxY3fRjwosfk51rsgxdQiHt4W2dUTtojtTfc6kWW"]},"browser/CappedCrowdsale.sol":{"keccak256":"0xbd17ee00783e8b0418b9f37460de056bd674da0c57a243abbbf578bbff6f1541","license":"MIT","urls":["bzz-raw://7e7606f719a63cc0135e200bb94fa1384b1ff55577124a50d9bc8a75cd609f0f","dweb:/ipfs/Qmf4p8emkwYDS3sKzrqxy4iHdJJQvufDDcgg7Qy5CRERSK"]},"browser/Crowdsale.sol":{"keccak256":"0x675d8d18cc96ae5d0b8db1a0e51278bcd50ecf44f7d36eeaea5e1cd6f987ab09","license":"MIT","urls":["bzz-raw://a62f4b22dcb3624f2f07fe27f762d8f9ab929cc1421cc57d1548c5bec0fb67b5","dweb:/ipfs/QmbLbL6kXYxihd9HtJjFy5VEUrdxkKQfkGeVABfXhNDRgp"]},"browser/PausableCrowdsale.sol":{"keccak256":"0xad90b64073de71c1148e1bff34268459d5d26be0f536c9dc35acc7e7051d883e","license":"MIT","urls":["bzz-raw://06f89254d087b70764e5ddf4488b406f2f33cf95a2dbc4386318e1a07477c765","dweb:/ipfs/QmdYP6tv33vzuuNQyGKcvDCbZvAJ1X8873Ka3EYFKT6auM"]},"browser/WALTSale.sol":{"keccak256":"0x28361776de43a9725bedf4b1fc847d6a32194abc204687b0993595e95cec8a33","license":"MIT","urls":["bzz-raw://ebec61602dfc5d9291c76d80a9e95ec532a12eb5c547e4422c8f1403ae3aa56b","dweb:/ipfs/QmcAS6ZMgFMKiV5AK6PJNU55ARtjcS2L4U9yNxSe5CP4Cd"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/GSN/Context.sol":{"keccak256":"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183","license":"MIT","urls":["bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a","dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol":{"keccak256":"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc","license":"MIT","urls":["bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3","dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","license":"MIT","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385","license":"MIT","urls":["bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017","dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27","license":"MIT","urls":["bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3","dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol":{"keccak256":"0xcaf8ece0551d45c7baa9c5682b5d4ff98064ea0490e77730bc023edc6458e1df","license":"MIT","urls":["bzz-raw://ede87cda82eba3cf9584a8429d2a857a2098a72d13d2534547d5a60d10f047e9","dweb:/ipfs/QmWBeL1uHDQstePTgzxHBXL2v7PUTWYLHcL9xoYW3sNcYB"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Pausable.sol":{"keccak256":"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08","license":"MIT","urls":["bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c","dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x7ff0067f2d7df4187eaa1cb4800949b929602c9d9cb20fcaee6922a7613ef2fb","license":"MIT","urls":["bzz-raw://78aa63fd7fbb8df2942b6c6e7bd89349507e306edbd5909ee8d9575c31be57e5","dweb:/ipfs/Qmf6z9KWKCJCfEVokgTBhBVq5yHtE6is31N8AV5BHdMkqQ"]}},"version":1},"version":1,"checkPoints":[]}