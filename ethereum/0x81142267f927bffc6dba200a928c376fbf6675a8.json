{"address":"0x81142267f927bFFc6DBA200a928C376fBf6675a8","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"attribution","type":"address"}],"name":"Distributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"attribution","type":"address"}],"name":"RequireApproval","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"attributionCnt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract StickerMarket","name":"stickerMarket","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"tokenAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"stickerPackIds","type":"uint256[]"}],"internalType":"struct Distributor.Pack","name":"_newPromoPack","type":"tuple"},{"internalType":"uint256","name":"_numberOfPacks","type":"uint256"}],"name":"changePromoPack","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newSigner","type":"address"}],"name":"changeSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract StickerMarket","name":"stickerMarket","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"tokenAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"stickerPackIds","type":"uint256[]"}],"internalType":"struct Distributor.Pack","name":"_newPack","type":"tuple"}],"name":"changeStarterPack","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clearPurchases","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_recipient","type":"address"},{"internalType":"address payable","name":"_attribution","type":"address"}],"name":"distributePack","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"}],"name":"eligible","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDefaultPack","outputs":[{"internalType":"address","name":"stickerMarket","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"tokenAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"stickerPackIds","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPromoPack","outputs":[{"internalType":"address","name":"stickerMarket","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"tokenAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"stickerPackIds","type":"uint256[]"},{"internalType":"uint256","name":"available","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"bool","name":"_isPromo","type":"bool"}],"name":"getReferralReward","outputs":[{"internalType":"uint256","name":"ethAmount","type":"uint256"},{"internalType":"uint256","name":"tokenLen","type":"uint256"},{"internalType":"uint256","name":"maxThreshold","type":"uint256"},{"internalType":"uint256","name":"attribCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"bool","name":"_isPromo","type":"bool"},{"internalType":"uint256","name":"_idx","type":"uint256"}],"name":"getReferralRewardTokens","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ineligible","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingAttributionCnt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_assignedTo","type":"address[]"},{"internalType":"bool","name":"_isPromo","type":"bool"}],"name":"removePayoutAndThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_pause","type":"bool"}],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isPromo","type":"bool"},{"internalType":"uint256","name":"_ethAmount","type":"uint256"},{"internalType":"address[]","name":"_tokens","type":"address[]"},{"internalType":"uint256[]","name":"_tokenAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"_thresholds","type":"uint256[]"},{"internalType":"address[]","name":"_assignedTo","type":"address[]"}],"name":"setPayoutAndThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sntToken","outputs":[{"internalType":"contract ERC20Token","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"The contract assumes Signer has verified an In-App Purchase Receipt, only 1 pack per address is allowed, unless the owner calls clearPurchases()","kind":"dev","methods":{"changeOwner(address)":{"params":{"_newOwner":"The new owner of the contract"}},"changePromoPack((address,uint256,address[],uint256[],uint256[]),uint256)":{"details":"The Owner can change the promo pack contents","params":{"_newPromoPack":"Promo pack configuration","_numberOfPacks":"Max number of promo packs to be given before using the default config"}},"changeSigner(address)":{"params":{"_newSigner":"The new Signer of the contract"}},"changeStarterPack((address,uint256,address[],uint256[],uint256[]))":{"details":"The Owner can change the default starterpack contents","params":{"_newPack":"starter pack configuration"}},"constructor":{"params":{"_signer":"allows the contract deployer(owner) to define the signer on construction"}},"distributePack(address,address)":{"details":"Can only be called by signer, assumes signer has validated an IAP receipt, owner can block calling by pausing.","params":{"_attribution":"A payable address who referred the starterpack purchaser ","_recipient":"A payable address that is sent a starterpack after being checked for eligibility"}},"eligible(address)":{"details":"will return false if a transaction of distributePack for _recipient has been successfully executed","params":{"_recipient":"The address to be checked for eligibility"}},"getDefaultPack()":{"returns":{"ethAmount":"uint256 ETH amount in wei that will be sent to a recipient","stickerMarket":"address Stickermarket contract address","stickerPackIds":"uint[] List of sticker packs to send to a recipient","tokenAmounts":"uint[] Amount of tokens that will be sent to a recipient","tokens":"address[] List of tokens that will be sent to a recipient"}},"getPromoPack()":{"returns":{"available":"uint number of promo packs available","ethAmount":"uint256 ETH amount in wei that will be sent to a recipient","stickerMarket":"address Stickermarket contract address","stickerPackIds":"uint[] List of sticker packs to send to a recipient","tokenAmounts":"uint[] Amount of tokens that will be sent to a recipient","tokens":"address[] List of tokens that will be sent to a recipient"}},"getReferralReward(address,bool)":{"params":{"_account":"The address to obtain the attribution config","_isPromo":"Indicates if the configuration for a promo should be returned or not"},"returns":{"attribCount":"Number of referrals","ethAmount":"Amount of ETH in wei","maxThreshold":"If isPromo == true: Number of promo bonuses still available for that address else: Max number of attributions to pay before requiring approval","tokenLen":"Number of tokens configured as part of the reward"}},"getReferralRewardTokens(address,bool,uint256)":{"params":{"_account":"The address to obtain the attribution's token config","_idx":"Index of token array in the attribution used to obtain the token config","_isPromo":"Indicates if the configuration for a promo should be returned or not"},"returns":{"token":"ERC20 contract address","tokenAmount":"Amount of token configured in the attribution"}},"removePayoutAndThreshold(address[],bool)":{"params":{"_assignedTo":"Array of addresses with an attribution configured","_isPromo":"Indicates if the configuration to delete is the promo or default"}},"setPause(bool)":{"details":"setPause must be called before Signer can call distributePack()"},"setPayoutAndThreshold(bool,uint256,address[],uint256[],uint256[],address[])":{"params":{"_assignedTo":"Use a valid address here to set custom settings. To set the default payout and threshold, use address(0);","_ethAmount":"Payout for referrals","_isPromo":"indicates if this attribution config is a promo or default config","_thresholds":"Max number of referrals allowed beforee requiring approval"}}},"title":"Starterpack Distributor","version":1},"userdoc":{"kind":"user","methods":{"changeOwner(address)":{"notice":"Changes the owner of the contract"},"changePromoPack((address,uint256,address[],uint256[],uint256[]),uint256)":{"notice":"Set a promo configuration"},"changeSigner(address)":{"notice":"Changes the Signer of the contract"},"changeStarterPack((address,uint256,address[],uint256[],uint256[]))":{"notice":"Set a starter pack configuration"},"clearPurchases()":{"notice":"Allows the owner to clear the purchase history. Recipients will be able to receive a starter pack again"},"distributePack(address,address)":{"notice":"Distributes a starterpack to an eligible address. Either a promo pack or a default will be distributed depending on availability"},"eligible(address)":{"notice":"Check if an address is eligible for a starterpack"},"getDefaultPack()":{"notice":"Get the starter pack configuration"},"getPromoPack()":{"notice":"Get the promo pack configuration"},"getReferralReward(address,bool)":{"notice":"Get rewards for specific referrer"},"getReferralRewardTokens(address,bool,uint256)":{"notice":"Get token rewards for specific address"},"removePayoutAndThreshold(address[],bool)":{"notice":"Remove attribution configuration for addresses"},"setPause(bool)":{"notice":"Allows the Owner to allow or prohibit Signer from calling distributePack()."},"setPayoutAndThreshold(bool,uint256,address[],uint256[],uint256[],address[])":{"notice":"Set default/custom payout and threshold for referrals"},"withdraw(address[])":{"notice":"Safety function allowing the owner to immediately pause starterpack distribution and withdraw all balances in the the contract"}},"notice":"Attempts to deliver 1 and only 1 starterpack containing ETH, ERC20 Tokens and NFT Stickerpacks to an eligible recipient","version":1}},"settings":{"compilationTarget":{"browser/Untitled.sol":"Distributor"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Untitled.sol":{"keccak256":"0x1ebd21538822d9482dd82938946693198ca6a8ebb92679e76804c8a7c61177e6","urls":["bzz-raw://eada35686bfbc611befd87880b14d9e35c87195955bdf7b63be8c174d8009b2e","dweb:/ipfs/QmQ6R62aKyrhiJ2eUzfe5sBvX7BJY3cZDwHV9aS1JpHrZn"]}},"version":1},"version":1,"checkPoints":[]}