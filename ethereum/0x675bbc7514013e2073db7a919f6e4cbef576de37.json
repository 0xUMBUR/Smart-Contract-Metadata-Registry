{"address":"0x675BBC7514013E2073DB7a919F6e4cbeF576de37","name":"","metadata":{"compiler":{"version":"0.7.4+commit.3f05b770"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/contracts/Coldstack.sol":"Coldstack"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/contracts/AddressUpgradeable.sol":{"keccak256":"0x5aa2d799c9ac5209426f14709e52403fb2ddba7d048e12d7c025da3901d90f3b","license":"MIT","urls":["bzz-raw://a676c263cfe08b8128bf8c96dd9a18a97a4629139d0eb4506bc7fd9ff04247c8","dweb:/ipfs/QmXNAxp2g9FsyAfCzfAwzQpJeN75uwtw895ACAe9x1cTtb"]},"browser/contracts/Coldstack.sol":{"keccak256":"0xd8fe4b30471d4ca979f2c09c9422de9ac4862990e8a1f74205081ae33fd1a198","license":"MIT","urls":["bzz-raw://54a04e73a20d48ced9a704ee44d54a5e76f8abad7a21dffbeb3559bf79ddb0e7","dweb:/ipfs/QmbFwdgkVCkhL15nFb3ZrbTRVA6eoxFT9pyuY9t9i95G8s"]},"browser/contracts/ContextUpgradeable.sol":{"keccak256":"0xaf307ff038348e58c557b4c48700eb40c2bb1d0756a1a364af9efdead04175a4","license":"MIT","urls":["bzz-raw://9808423f626bb440379e58db5c99eb9d4966621009074be544b8b400f5c608ce","dweb:/ipfs/QmXzpi9kdX2nLd1KamvQCRmgeGJmTXMwZv1sNnwYpssL76"]},"browser/contracts/ERC20Upgradeable.sol":{"keccak256":"0xcfc2256db337cd9775d338071ddf1c83eb468f946f08bcaefd4975dc0a8415e7","license":"MIT","urls":["bzz-raw://3241699ef94bdbb76fa4656b4efd5fea0ff4115f6f195492f3c1d30cba79cc92","dweb:/ipfs/QmauTWyeGAEonLsiuH2QGvZwbJNpiJwJyFk4W6Rd4XjiJg"]},"browser/contracts/IERC20Upgradeable.sol":{"keccak256":"0xd7342ac848120ce4e7135e2bf9cfb62f89771c65581e6583791a3e5debdc2aff","license":"MIT","urls":["bzz-raw://12cd838e140bea6946b8e779081ab312993bc0fda1a6bde30ca68fe1b9e977da","dweb:/ipfs/QmdNnSNPzUm5X6STXjGGwv2AJ9kv8pim1G2PRh28eePMV6"]},"browser/contracts/Initializable.sol":{"keccak256":"0xb28ab6893a1bd7eb6d007a1e469829031bf4ab9edbe5269064d7a25c31297dc7","license":"MIT","urls":["bzz-raw://ce24305f555382f90ad9ae1b0989af2814097a54c38f81295cbf49dce21a2220","dweb:/ipfs/QmRforUHui7CWwVFP3Qv7sMbFwpDcQQxdrySHnfD1Ymqzv"]},"browser/contracts/SafeMathUpgradeable.sol":{"keccak256":"0x40ea34b3f7a11307dd7523a0563c8b0ec6dfece0b9dc19742750e4465b4484f2","license":"MIT","urls":["bzz-raw://4973d276d66eed1b51aeb1ad0041d6dc64b2f14e6bdea8b12c775b68bb5bb52c","dweb:/ipfs/QmduN5V9fo5GnjF2wpSnSaQZXfp49qdVu4qwGgicjL7qog"]}},"version":1},"version":1,"checkPoints":[]}