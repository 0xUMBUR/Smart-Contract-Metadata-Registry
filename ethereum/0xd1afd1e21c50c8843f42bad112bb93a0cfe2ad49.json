{"address":"0xD1aFD1e21C50c8843f42Bad112BB93a0cFE2aD49","name":"","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"orderID","type":"uint32"},{"indexed":false,"internalType":"bool","name":"_statusFlag","type":"bool"},{"indexed":false,"internalType":"bool","name":"_status","type":"bool"}],"name":"dataDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"CustomerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"MonetaryAmount","type":"uint256"}],"name":"fallbackCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"SenderID","type":"int64"},{"indexed":false,"internalType":"int64","name":"commitmentID","type":"int64"}],"name":"newCommitment","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_PIN","type":"address"},{"indexed":false,"internalType":"uint32","name":"orderID","type":"uint32"},{"indexed":false,"internalType":"int64","name":"commitmentID","type":"int64"},{"indexed":false,"internalType":"string","name":"_location","type":"string"},{"indexed":false,"internalType":"uint32","name":"_orderDate","type":"uint32"},{"indexed":false,"internalType":"uint40","name":"_gasForDelivery","type":"uint40"},{"indexed":false,"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"indexed":false,"internalType":"bool","name":"condition","type":"bool"},{"indexed":false,"internalType":"address","name":"receiverAddress","type":"address"}],"name":"newOrder","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"BCPGross","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BCPRegistration","outputs":[{"internalType":"contract BCPRegistration_interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_BCPRegistration","type":"address"}],"name":"ChangeBCPRegistration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"orderID","type":"uint32"}],"name":"GetReceiverFromOrderID","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"}],"name":"GetSenderInformation","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int64","name":"_commitmentID","type":"int64"},{"internalType":"uint40","name":"_gasForMailbox","type":"uint40"}],"name":"GetTransactionCosts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int64","name":"commitmentID","type":"int64"},{"internalType":"uint32","name":"_newHorizon","type":"uint32"}],"name":"HorizonExtension","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int64","name":"SenderID","type":"int64"},{"internalType":"uint32","name":"_horizon","type":"uint32"},{"internalType":"uint64","name":"_senderFee","type":"uint64"},{"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"internalType":"bytes32","name":"_descriptionHash","type":"bytes32"}],"name":"NewCommitment","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int64","name":"commitmentID","type":"int64"},{"internalType":"uint40","name":"_gasForMailbox","type":"uint40"},{"internalType":"string","name":"_location","type":"string"},{"internalType":"uint32","name":"_orderDate","type":"uint32"}],"name":"ORDER","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"orderID","type":"uint32"},{"internalType":"int88","name":"_data","type":"int88"},{"internalType":"bool","name":"_statusFlag","type":"bool"}],"name":"Relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"commitments","outputs":[{"internalType":"int64","name":"SenderID","type":"int64"},{"internalType":"uint32","name":"_horizon","type":"uint32"},{"internalType":"uint64","name":"_senderFee","type":"uint64"},{"internalType":"uint64","name":"_gasPrice","type":"uint64"},{"internalType":"bytes32","name":"_descriptionHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"dataDelivered(uint32,bool,bool)":{"params":{"_status":"shows whether the oder is open or closed","_statusFlag":"is a control variable that shows if the incoming transaction contains the datapoint","orderID":"uint that identifies a specific order"}},"fallbackCall(address,uint256)":{"params":{"CustomerAddress":"is the address that called the fallback function","MonetaryAmount":"is the msg.value that was provided within the call"}},"newCommitment(int64,int64)":{"params":{"SenderID":"uint that identifies a specific sender (is constant)","commitmentID":"uint that identfies the senders most recent .xlsx file"}},"newOrder(address,uint32,int64,string,uint32,uint40,uint64,bool,address)":{"params":{"_PIN":"is the senders main address","_gasForDelivery":"is the total amount of gas that is available for the delivery process","_gasPrice":"sets the gas Price for the delivery process","_location":"is the position (column and row) in the .xlsx file","_orderDate":"date on which the order should arrive (in epochtime)","commitmentID":"uint that identfies the senders most recent .xlsx file","condition":"checks whether the order date is within the commitment horizon","orderID":"uint that identifies a specific order","receiverAddress":"is the address of the receiver "}}},"kind":"dev","methods":{"Collect()":{"details":"transfers all collected payments from this contract to the owner"},"GetReceiverFromOrderID(uint32)":{"details":"necessary to be able to display the receiver address on our webpage","params":{"orderID":"uint that identifies a specific order (is constant)"}},"GetSenderInformation(int64)":{"details":"returns the hole sender structhas to be called by the PUKis needed for testing purposes (backend) you have to check whether PIN and/or PUK got changed","params":{"SenderID":"uint that identifies a specific sender (is constant)"}},"HorizonExtension(int64,uint32)":{"details":"extends the senders commitment","params":{"_newHorizon":"the date until when a sender commits himself (in epochtime)","commitmentID":"uint that identfies the senders most recent .xlsx file  -> here that ID should be chosen the sender wishes to extend"}},"NewCommitment(int64,uint32,uint64,uint64,bytes32)":{"details":"sets up new commitments for .xlsx files","params":{"SenderID":"uint that identifies a specific sender (is constant)","_descriptionHash":"sets the identification parameter for the commited data","_gasPrice":"sets the gas Price for the delivery process of that .xlsx file","_horizon":"the date until when a sender commits himself (in epochtime)","_senderFee":"sets the fee that is required to be paid within the order process"}},"ORDER(int64,uint40,string,uint32)":{"details":"general order function for customized orders","params":{"_gasForMailbox":"is the maximum of gas that is available for the delivery process (set by the receiver)","_location":"is the position (column and row) in the .xlsx file","_orderDate":"date on which the order should arrive (in epochtime)","commitmentID":"uint that identifies a specific commitment"}},"Relay(uint32,int88,bool)":{"details":"receives the final data and collects the fee","params":{"_data":"is the finally requested information behind the order","_statusFlag":"is a control variable that shows if the incoming transaction contains the datapoint","orderID":"uint that identifies a specific order (is constant)"}},"constructor":{"details":"sets the BCPGross to be 0defines the initial safe lowdefines the owner to be the message sender"}},"version":1},"userdoc":{"kind":"user","methods":{"ChangeBCPRegistration(address)":{"notice":"The contract governance module consists of three functions: - Collect: Transfers the BCPGross balance to the owners address."},"GetTransactionCosts(int64,uint40)":{"notice":"The order & delivery module consists of nine order functions and the Relay function: The order functions differ in the number of function arguments: - GetTransactionCosts: Determines the transaction costs - GeneralOrder: Is the only order function that contains the hole function body - Relay: Receives the incoming data and transfers it to the final receiver and substracts the fee from the original payment of the receiver."}},"version":1}},"settings":{"compilationTarget":{"BCP Commitment and Order module.sol":"BCPCommitmentandOrder"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"BCP Commitment and Order module.sol":{"keccak256":"0x9b5b089f69d4eefec1c6875499896da08f8d026d6b41fb201ab865a7e8096c81","license":"UNLICENSED","urls":["bzz-raw://55cad32810531f63b2ba6e6c08928be853b023fab6db93f95a36c125d0cf2c9d","dweb:/ipfs/QmPjf6xAusn9MgQi8G6kbTKgHRSTACLU9NHFS4H2hgDbDV"]}},"version":1},"version":1,"checkPoints":[]}