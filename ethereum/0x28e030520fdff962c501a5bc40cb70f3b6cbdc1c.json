{"address":"0x28E030520FDFf962c501A5bC40cB70F3b6CbDC1C","name":"","metadata":{"compiler":{"version":"0.8.1+commit.df193b15"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"base_uri","type":"string"},{"internalType":"string","name":"external_base_uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"externalBaseUri","type":"string"}],"name":"ExternalBaseUriSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seriesId","type":"uint256"}],"name":"SeriesLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tokenBaseUri","type":"string"}],"name":"TokenBaseUriSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"},{"components":[{"internalType":"uint256","name":"totalEditions","type":"uint256"},{"internalType":"string","name":"creatorName","type":"string"},{"internalType":"string","name":"artistName","type":"string"},{"internalType":"string","name":"artTitle","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"sha256ImageHash","type":"string"},{"internalType":"string","name":"ipfsImageHash","type":"string"},{"internalType":"string","name":"arweaveImageHash","type":"string"},{"internalType":"string","name":"imageFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeriesInfo","name":"seriesInfo","type":"tuple"}],"name":"addArtistSeries2dNftType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"},{"components":[{"internalType":"uint256","name":"totalEditions","type":"uint256"},{"internalType":"string","name":"creatorName","type":"string"},{"internalType":"string","name":"artistName","type":"string"},{"internalType":"string","name":"artTitle","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"sha256ImageHash","type":"string"},{"internalType":"string","name":"ipfsImageHash","type":"string"},{"internalType":"string","name":"arweaveImageHash","type":"string"},{"internalType":"string","name":"imageFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeriesInfo","name":"seriesInfo","type":"tuple"},{"components":[{"internalType":"string","name":"sha256ModelHash","type":"string"},{"internalType":"string","name":"ipfs3DModelHash","type":"string"},{"internalType":"string","name":"arweave3DModelHash","type":"string"},{"internalType":"string","name":"modelFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeries3DModelInfo","name":"series3DModelInfo","type":"tuple"}],"name":"addArtistSeries3dNftType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"seriesId","type":"uint256"},{"internalType":"uint256","name":"nftType","type":"uint256"},{"internalType":"uint256","name":"nftStartingNum","type":"uint256"},{"internalType":"uint256","name":"numTokens","type":"uint256"},{"internalType":"string[]","name":"ipfsHashes","type":"string[]"}],"name":"batchMintArtifexNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_tokenIds","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"},{"internalType":"uint256","name":"nftType","type":"uint256"},{"internalType":"uint256","name":"nftNum","type":"uint256"}],"name":"encodeTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"externalBaseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"externalURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getArtistNameByTokenId","outputs":[{"internalType":"string","name":"artistName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMetadata","outputs":[{"internalType":"string","name":"metadata","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNftNum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNftType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSeriesId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"},{"internalType":"uint256","name":"nftType","type":"uint256"}],"name":"getSeriesInfo","outputs":[{"components":[{"internalType":"uint256","name":"totalEditions","type":"uint256"},{"internalType":"string","name":"creatorName","type":"string"},{"internalType":"string","name":"artistName","type":"string"},{"internalType":"string","name":"artTitle","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"sha256ImageHash","type":"string"},{"internalType":"string","name":"ipfsImageHash","type":"string"},{"internalType":"string","name":"arweaveImageHash","type":"string"},{"internalType":"string","name":"imageFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeriesInfo","name":"seriesInfo","type":"tuple"},{"components":[{"internalType":"string","name":"sha256ModelHash","type":"string"},{"internalType":"string","name":"ipfs3DModelHash","type":"string"},{"internalType":"string","name":"arweave3DModelHash","type":"string"},{"internalType":"string","name":"modelFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeries3DModelInfo","name":"series3dModelInfo","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSeriesInfoByTokenId","outputs":[{"components":[{"internalType":"uint256","name":"totalEditions","type":"uint256"},{"internalType":"string","name":"creatorName","type":"string"},{"internalType":"string","name":"artistName","type":"string"},{"internalType":"string","name":"artTitle","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"sha256ImageHash","type":"string"},{"internalType":"string","name":"ipfsImageHash","type":"string"},{"internalType":"string","name":"arweaveImageHash","type":"string"},{"internalType":"string","name":"imageFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeriesInfo","name":"seriesInfo","type":"tuple"},{"components":[{"internalType":"string","name":"sha256ModelHash","type":"string"},{"internalType":"string","name":"ipfs3DModelHash","type":"string"},{"internalType":"string","name":"arweave3DModelHash","type":"string"},{"internalType":"string","name":"modelFileType","type":"string"}],"internalType":"struct Artifex.ArtistNFTSeries3DModelInfo","name":"series3dModelInfo","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"}],"name":"isSeriesLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seriesId","type":"uint256"}],"name":"lockSeries","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"seriesId","type":"uint256"},{"internalType":"uint256","name":"nftType","type":"uint256"},{"internalType":"uint256","name":"nftNum","type":"uint256"},{"internalType":"string","name":"ipfsHash","type":"string"}],"name":"mintArtifexNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operatorAddress","type":"address"}],"name":"otherOperator","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseTokenURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newExternalBaseTokenURI","type":"string"}],"name":"setExternalBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOperator","type":"address"},{"internalType":"uint8","name":"_state","type":"uint8"}],"name":"setOtherOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenIPFSMetadataHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"ipfsHash","type":"string"}],"name":"updateTokenIPFSMetadataHash","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"The Artifex main contract. Each Artifex token implements full on-chain metadata in standard JSON format for anyone to retreive using the getMetadata() function in this contract. A mirrored copy of the metadata JSON is also stored on IPFS. Each NFT 2D image is stored on both IPFS and Arweave Each NFT 3D model is stored on both IPFS and Arweave The metadata on-chain in this contract (and mirrored on IPFS) return the hashes / locations of all NFT images and 3D model files stored on IPFS and Arweave. The metadata on-chain in this contract (and mirrored on IPFS) also return SHA256 hashes of the NFT images and 3D model files for verifying authenticity of the NFTs. Metadata is retreivable using the tokenURI() call as specified in the ERC721-Metadata standard. tokenURI can't point to on-chain locations directly - it points to an off-chain URI for returning metadata.","events":{"ExternalBaseUriSet(string)":{"params":{"externalBaseUri":"the new external base URI"}},"SeriesLocked(uint256)":{"params":{"seriesId":"the ID of the newly locked/sealed series"}},"TokenBaseUriSet(string)":{"params":{"tokenBaseUri":"the base URI for tokenURI calls"}}},"kind":"dev","methods":{"addArtistSeries2dNftType(uint256,(uint256,string,string,string,string,string,string,string,string))":{"params":{"seriesId":"the ID of the series (0-100)","seriesInfo":"structure with series metadata"}},"addArtistSeries3dNftType(uint256,(uint256,string,string,string,string,string,string,string,string),(string,string,string,string))":{"params":{"series3DModelInfo":"structure with series 3D model metadata","seriesId":"the ID of the series (0-100)","seriesInfo":"structure with series metadata"}},"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"baseURI()":{"returns":{"_0":"base URI for location of the off-chain metadata"}},"batchMintArtifexNft(address,uint256,uint256,uint256,uint256,string[])":{"params":{"ipfsHashes":"an array of ipfsHashes of each token's Metadata on ipfs","nftStartingNum":"the starting edition number of the nft","nftType":"the type of nft - 1 for 2D piece, 2 for 3D piece","numTokens":"the number of tokens to mint in the edition, starting from nftStartingNum edition number","seriesId":"series to mint","to":"address of the recipient"}},"batchTransfer(address,uint256[])":{"details":"Batch transfer of Artifex NFTs from one address to another","params":{"_to":"The address of the recipient","_tokenIds":"List of token IDs to transfer"}},"constructor":{"details":"Constructor","params":{"base_uri":"the base URI for location of off-chain metadata","external_base_uri":"the base URI for viewing token on website","name":"the token name","symbol":"the token symbol"}},"encodeTokenId(uint256,uint256,uint256)":{"params":{"nftNum":"the edition number of the nft","nftType":"the type of nft - 1 for 2D piece, 2 for 3D piece","seriesId":"series to mint"},"returns":{"_0":"the token ID"}},"exists(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"_0":"a bool which is true of the token exists"}},"externalBaseURI()":{"returns":{"_0":"base external URI"}},"externalURI(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"_0":"external URI"}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getArtistNameByTokenId(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"artistName":"the name of the artist"}},"getMetadata(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"metadata":"a JSON string of the metadata"}},"getNftNum(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"_0":"the nft edition number of the token"}},"getNftType(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"_0":"the nft type of the token"}},"getSeriesId(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"_0":"the series ID of the token"}},"getSeriesInfo(uint256,uint256)":{"params":{"nftType":"the type of nft - 1 for 2D piece, 2 for 3D piece","seriesId":"series to mint"},"returns":{"seriesInfo":"structure with series information"}},"getSeriesInfoByTokenId(uint256)":{"params":{"tokenId":"the token ID"},"returns":{"seriesInfo":"structure with series information"}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"isSeriesLocked(uint256)":{"params":{"seriesId":"the series ID"},"returns":{"_0":"true if series is locked, otherwise returns false"}},"lockSeries(uint256)":{"params":{"seriesId":"the ID of the series (0-100)"}},"mintArtifexNft(address,uint256,uint256,uint256,string)":{"params":{"ipfsHash":"the ipfsHash of a copy of the token's Metadata on ipfs","nftNum":"the edition number of the nft","nftType":"the type of nft - 1 for 2D piece, 2 for 3D piece","seriesId":"series to mint","to":"address of the recipient"}},"name()":{"details":"See {IERC721Metadata-name}."},"otherOperator(address)":{"details":"Returns the operator state for an address. State of 1 means active operator of the contract. State of 0 means not an operator of the contract."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setBaseURI(string)":{"params":{"newBaseTokenURI":"the new base token URI"}},"setExternalBaseURI(string)":{"params":{"newExternalBaseTokenURI":"the new base external token URI"}},"setOtherOperator(address,uint8)":{"details":"Sets the state of other operators for performaing certain contract functions. Can only be called by the current owner."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenIPFSMetadataHash(uint256)":{"details":"Returns the actual CID hash pointing to the token's metadata on IPFS.","params":{"tokenId":"token ID of the token to query"},"returns":{"_0":"the ipfs hash of the metadata"}},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"Returns an URI for a given token ID. See {IERC721Metadata-tokenURI}.","params":{"tokenId":"uint256 ID of the token to query"},"returns":{"_0":"URI for location of the off-chain metadata"}},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateTokenIPFSMetadataHash(uint256,string)":{"details":"Update the IPFS hash for a given token. Series metadata must NOT be locked yet (must still be within the series metadata update window) Reverts if the token ID does not exist.","params":{"ipfsHash":"string IPFS link to assign","tokenId":"uint256 ID of the token to set its URI"}}},"version":1},"userdoc":{"events":{"ExternalBaseUriSet(string)":{"notice":"Event emitted when the externalBaseUri is set after contract deployment."},"SeriesLocked(uint256)":{"notice":"Event emitted when a series is locked/sealed"},"TokenBaseUriSet(string)":{"notice":"Event emitted when the takenBaseUri is set after contract deployment"}},"kind":"user","methods":{"addArtistSeries2dNftType(uint256,(uint256,string,string,string,string,string,string,string,string))":{"notice":"Add core metadata for the 2D piece in an artist series. NOTE: For Artifex, there will only be 100 artist series IDs (1-100). Each series will have a 1 of 1 2D art piece (nftType 1) and a run of 100 3D art pieces (nftType 2). Series ID 0 will be a gift series and is not included in the 1-100 artist series IDs."},"addArtistSeries3dNftType(uint256,(uint256,string,string,string,string,string,string,string,string),(string,string,string,string))":{"notice":"Add core metadata for the 3D pieces in an artist series. NOTE: For Artifex, there will only be 100 artist series IDs (1-100). Each series will have a 1 of 1 2D art piece (nftType 1) and a run of 100 3D art pieces (nftType 2). Series ID 0 will be a gift series and is not included in the 1-100 artist series IDs."},"baseURI()":{"notice":"return the base URI used for accessing off-chain metadata"},"batchMintArtifexNft(address,uint256,uint256,uint256,uint256,string[])":{"notice":"Mints multiple Artifex NFTs for same series and nftType"},"encodeTokenId(uint256,uint256,uint256)":{"notice":"Generate a tokenId given the series ID, nft type, and nft edition number"},"exists(uint256)":{"notice":"Given a token ID, return whether or not it exists"},"externalBaseURI()":{"notice":"return the base external URI used for accessing nft on a web site."},"externalURI(uint256)":{"notice":"Given a token ID, return the external URI for viewing the nft on a web site."},"getArtistNameByTokenId(uint256)":{"notice":"Given a token ID, return the name of the artist name for the token"},"getMetadata(uint256)":{"notice":"Given a token ID, return all on-chain metadata for the token as JSON string For each NFT, the following on-chain metadata is returned:    - Name: The title of the art piece (includes creator of the art piece)    - Descriptiom: Details about the art piece (includes the artist represented)    - Image URI: The off-chain URI location of the image    - External URI: Website to view the NFT    - SHA256 Image Hash: The actual image hash stored on-chain for anyone      to validate authenticity of their art piece    - IPFS Image Hash: IFPS storage hash of the image    - Arweave Image Hash: Arweave storage hash of the image    - Image File Type: File extension of the image, since file stores such      as IPFS may not return the image file type    IF 3D MODEL INFO AVAILABLE, THEN INCLUDE THIS IN METADATA    - SHA256 3D Model Hash: The actual 3D Model hash stored      on-chain for anyone to validate authenticity of their       3D model asset    - IPFS 3D Model Hash: IFPS storage hash of the 3D model    - Arweave Image Hash: Arweave storage hash of the 3D model    - 3D Model File Type: File extension of the 3D model    ATTRIBUTES INCLUDED:    - Creator name: The creator of the art piece    - Artist name: The artist represented / honored by the creator    - Edition Number: The edition number of the NFT    - Total Editions: Total editions that can ever exist in the series"},"getNftNum(uint256)":{"notice":"Given a token ID, return the nft edition number of the token"},"getNftType(uint256)":{"notice":"Given a token ID, return the nft type of the token"},"getSeriesId(uint256)":{"notice":"Given a token ID, return the series ID of the token"},"getSeriesInfo(uint256,uint256)":{"notice":"Given a series ID and nft type, return information about the series"},"getSeriesInfoByTokenId(uint256)":{"notice":"Given a token ID, return information about the series"},"isSeriesLocked(uint256)":{"notice":"Given a series ID, return the locked state"},"lockSeries(uint256)":{"notice":"This function permanently locks metadata updates for all NFTs in a Series. For practical reasons, a short period of time is given for updates following a series mint. For example, maybe an artist notices incorrect info in the description of their art after it is minted. In most projects, metadata updates would be possible by changning the metadata on the web server hosting the metadata. However, for Artifex once metadata is locked, no updates to the metadata will be possible - the information is permanent and immutable. The metadata will be permanent on-chain here in the contract, retrievable as a JSON string via the getMetadata() call. A mirror of the metadata will also live permanently on IPFS at the location stored in the tokenIdToIPFSMetadataHash mapping in this contract."},"mintArtifexNft(address,uint256,uint256,uint256,string)":{"notice":"Mints an Artifex NFT"},"setBaseURI(string)":{"notice":"Sets a new base token URI for accessing off-chain metadata location. If this is changed, an event gets emitted."},"setExternalBaseURI(string)":{"notice":"Sets a new base external URI for accessing the nft on a web site. If this is changed, an event gets emitted"}},"version":1}},"settings":{"compilationTarget":{"contracts/Artifex.sol":"Artifex"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/Artifex.sol":{"keccak256":"0x5f4cbaa1a473502dab156a11e1305a25df758e6ecc5960ee5c1e11a0b3d33fc8","license":"MIT","urls":["bzz-raw://04df858a80d2cb195cbd6166ad1aebaee8bc013a0ef75f8c3a37551bad6cf92d","dweb:/ipfs/Qma2gBMha2hVfbcxRYvKZVAHgtLNgxMPNSSmSu4aTSKt2D"]}},"version":1},"version":1,"checkPoints":[]}