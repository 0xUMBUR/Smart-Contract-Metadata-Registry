{"address":"0xb487E3829c510960d3F98983431227D4A05a3Ac9","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"DEFISAVER_LOGGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FACTORY_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGISTRY_ADDR","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes[][]","name":"callData","type":"bytes[][]"},{"internalType":"bytes[][]","name":"subData","type":"bytes[][]"},{"internalType":"bytes32[]","name":"actionIds","type":"bytes32[]"},{"internalType":"uint8[][]","name":"paramMapping","type":"uint8[][]"}],"internalType":"struct StrategyData.Task","name":"_currTask","type":"tuple"},{"internalType":"bytes32","name":"_flAmount","type":"bytes32"}],"name":"_executeActionsFromFL","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"chiToken","outputs":[{"internalType":"contract IGasToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_strategyId","type":"uint256"},{"internalType":"bytes[][]","name":"_actionCallData","type":"bytes[][]"}],"name":"executeStrategyTask","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes[][]","name":"callData","type":"bytes[][]"},{"internalType":"bytes[][]","name":"subData","type":"bytes[][]"},{"internalType":"bytes32[]","name":"actionIds","type":"bytes32[]"},{"internalType":"uint8[][]","name":"paramMapping","type":"uint8[][]"}],"internalType":"struct StrategyData.Task","name":"_currTask","type":"tuple"}],"name":"executeTask","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"gasToken","outputs":[{"internalType":"contract IGasToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractAddr","type":"address"}],"name":"givePermission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract DFSRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractAddr","type":"address"}],"name":"removePermission","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"_executeActionsFromFL((string,bytes[][],bytes[][],bytes32[],uint8[][]),bytes32)":{"details":"FL function must be the first action and repayment is done last","params":{"_currTask":"Task to be executed","_flAmount":"Result value from FL action"}},"executeStrategyTask(uint256,bytes[][])":{"details":"Doesn't burn gst2/chi as it's handled in the StrategyExecutor","params":{"_actionCallData":"All the data related to the strategies Task","_strategyId":"Id of the strategy we want to execute"}},"executeTask((string,bytes[][],bytes[][],bytes32[],uint8[][]))":{"details":"This is the main entry point for Recipes/Tasks executed manuallyIt will burn Gst2/Chi if the user has a balance on proxy","params":{"_currTask":"Task to be executed"}},"givePermission(address)":{"params":{"_contractAddr":"Address which will be authorized"}},"removePermission(address)":{"params":{"_contractAddr":"Auth address which will be removed from authority list"}}},"title":"Handles FL taking and executes actions","version":1},"userdoc":{"kind":"user","methods":{"_executeActionsFromFL((string,bytes[][],bytes[][],bytes32[],uint8[][]),bytes32)":{"notice":"This is the callback function that FL actions call"},"executeStrategyTask(uint256,bytes[][])":{"notice":"Called through the Strategy contract to execute a task"},"executeTask((string,bytes[][],bytes[][],bytes32[],uint8[][]))":{"notice":"Called directly through DsProxy to execute a task"},"givePermission(address)":{"notice":"Called in the context of DSProxy to authorize an address"},"removePermission(address)":{"notice":"Called in the context of DSProxy to remove authority of an address"}},"version":1}},"settings":{"compilationTarget":{"browser/DSProxy.sol":"TaskExecutor"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/DSProxy.sol":{"keccak256":"0xc9f7c09d22d76ef658dcf5ee18b734972818980d83f72614a327ec1e30fb057f","urls":["bzz-raw://ee177d5faa67d3820917080a480a04e8301cb090682032101fb6746f1fe893f9","dweb:/ipfs/QmRAx4LXDvPpFFQLNZ4q9Un3mSSVhdAMsHgXzcCAXa9PZL"]}},"version":1},"version":1,"checkPoints":[]}