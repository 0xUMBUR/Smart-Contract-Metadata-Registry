{"address":"0x3B0841ab834052f3DBd21a537f7886388d09A114","name":"","metadata":{"compiler":{"version":"0.6.11+commit.5ef660b1"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"fRightContractAddress","type":"address"},{"internalType":"address","name":"iRightContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"chi","outputs":[{"internalType":"contract IfreeUpTo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int128","name":"","type":"int128"}],"name":"contracts","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int128","name":"","type":"int128"}],"name":"currentRightVersions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"discountChiActivated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"baseAssetAddress","type":"address"},{"internalType":"uint256","name":"baseAssetId","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256[3]","name":"uint256Values","type":"uint256[3]"},{"internalType":"string[4]","name":"stringValues","type":"string[4]"}],"name":"freeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int128","name":"rightType","type":"int128"}],"name":"incrementCurrentRightVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"baseAssetAddress","type":"address"},{"internalType":"uint256[4]","name":"uint256Values","type":"uint256[4]"},{"internalType":"string[4]","name":"stringValues","type":"string[4]"}],"name":"issueI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"iRightId","type":"uint256"}],"name":"revokeI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"chiAddress","type":"address"}],"name":"setChi","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int128","name":"rightType","type":"int128"},{"internalType":"string","name":"url","type":"string"}],"name":"setRightApiBaseUrl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"activate","type":"bool"}],"name":"toggleDiscountChi","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"toggleWhitelistStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"activate","type":"bool"}],"name":"toggleWhitelistedFreeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fRightId","type":"uint256"}],"name":"unfreeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"whitelistedFreezeActivated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Lendroid Foundation","details":"Audit certificate : https://github.com/lendroidproject/Rightshare-contracts/blob/master/audit-report.pdf","kind":"dev","methods":{"freeze(address,uint256,uint256,uint256[3],string[4])":{"details":"Send the NFT to this contract, mint 1 FRight Token and 1 IRight Token","params":{"baseAssetAddress":": address of the NFT","baseAssetId":": id of the NFT","expiry":": timestamp until which the NFT is locked in the dao","stringValues":": string array [purpose, description, imageUrl, termsUrl]","uint256Values":": uint256 array [maxISupply, f_version, i_version]"}},"incrementCurrentRightVersion(int128)":{"details":"Increment currentFVersion by 1"},"issueI(address,uint256[4],string[4])":{"details":"Check if IRight can be minted, Mint 1 IRight, Increment FRight.circulatingISupply by 1","params":{"baseAssetAddress":": address of base NFT asset","stringValues":": string array [purpose, description, imageUrl, termsUrl]","uint256Values":": uint256 array [baseAssetId, fRightId, expiry, i_version]"}},"onERC721Received(address,address,uint256,bytes)":{"details":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"revokeI(uint256)":{"details":"Burn the IRight token. If the corresponding FRight exists, decrement its circulatingISupply by 1.","params":{"iRightId":": id of the IRight token."}},"setRightApiBaseUrl(int128,string)":{"details":"Set base url of the server API representing the metadata of a Right Token","params":{"rightType":"type of Right contract","url":"API base url"}},"toggleDiscountChi(bool)":{"details":"set discountChiActivated value as true or false","params":{"activate":": bool indicating the toggle value"}},"toggleWhitelistStatus(address,bool)":{"params":{"addr":": given address","status":": bool indicating whitelist status of given address"}},"toggleWhitelistedFreeze(bool)":{"details":"set whitelistedFreezeActivated value as true or false","params":{"activate":": bool indicating the toggle value"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unfreeze(uint256)":{"details":"Burn the FRight token for a given token Id, and return the original NFT back to the caller","params":{"fRightId":": id of the FRight token."}}},"title":"RightsDao","version":1},"userdoc":{"kind":"user","methods":{"freeze(address,uint256,uint256,uint256[3],string[4])":{"notice":"Freezes a given NFT Token"},"incrementCurrentRightVersion(int128)":{"notice":"Allows owner to increment the current f version"},"issueI(address,uint256[4],string[4])":{"notice":"Issues a IRight for a given FRight"},"revokeI(uint256)":{"notice":"Revokes a given IRight. The IRight can be revoked at any time."},"setRightApiBaseUrl(int128,string)":{"notice":"Allows owner to set the base api url of F or I Right token"},"toggleDiscountChi(bool)":{"notice":"Internal function to record if gas costs can be discounted"},"toggleWhitelistStatus(address,bool)":{"notice":"Allows owner to add / remove given address to / from whitelist"},"toggleWhitelistedFreeze(bool)":{"notice":"Internal function to record if freeze calls must be made only by whitelisted accounts"},"unfreeze(uint256)":{"notice":"Unfreezes a given FRight."}},"notice":"DAO that handles NFTs, FRights, and IRights","version":1}},"settings":{"compilationTarget":{"browser/Rightshare.sol":"RightsDao"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/Rightshare.sol":{"keccak256":"0x962ecf4ab368261a6fd5256d829f29b19b66e499db1b3910240877cc6bd8047e","license":"https","urls":["bzz-raw://2eb48b7cb2c1382e2502e814e9ff1cb6e59d0abdf9650b2f7e141f3687079e61","dweb:/ipfs/QmWy2qU3saxRFbwpMC5ay3Y6hYN1JnY7zXQVBGWC6jpbV4"]}},"version":1},"version":1,"checkPoints":[]}