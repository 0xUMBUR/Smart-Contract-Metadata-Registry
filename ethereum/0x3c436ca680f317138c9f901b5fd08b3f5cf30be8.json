{"address":"0x3C436cA680f317138C9f901B5Fd08b3F5cf30be8","name":"","metadata":{"compiler":{"version":"0.5.17+commit.d19bba13"},"language":"Solidity","output":{"abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions.","methods":{"allowance(address,address)":{"details":"See `IERC20.allowance`."},"approve(address,uint256)":{"details":"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See `IERC20.balanceOf`."},"burn(uint256)":{"details":"Destoys `amount` tokens from the caller.      * See `ERC20._burn`."},"burnFrom(address,uint256)":{"details":"See `ERC20._burnFrom`."},"constructor":{"details":"Constructor that gives msg.sender all of existing tokens."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See `IERC20.totalSupply`."},"transfer(address,uint256)":{"details":"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"title":"SimpleToken"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/SimpleToken.sol":"SimpleToken"},"evmVersion":"istanbul","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/ERC20.sol":{"keccak256":"0xe2d54702e009ecf53e8fdc822017aaa53ee5b86f25a3ffe358442fd65f76b834","urls":["bzz-raw://c8d534d39238c35ce8d925bd1034657ef5f7ef81ab32ff840d0ea365f2b7eff4","dweb:/ipfs/QmZ7LgTejV9yfbc42Yb6tCtGbxY2yUXXNTrSwZjHNhXBKA"]},"browser/ERC20Burnable.sol":{"keccak256":"0x572c38ea226f82283edcb37af1a8c24c8d7a2742a0ec0e7feb75a46508355288","urls":["bzz-raw://004f74750f72ec74ea5dd5438671367470acd3a78010840f473cf4abef3369cf","dweb:/ipfs/QmbMEhf8jzSKPHgdTWPeL94Qj4GWq8ZnU8ys3gnXKZxU5s"]},"browser/ERC20Detailed.sol":{"keccak256":"0x43246a4826ec41bec488c9993d459295a73018fa246a2df97ad78c9ebf94bb6e","urls":["bzz-raw://cf589e78d49f524ebf779748137dbaeb2f6616e652a6bb0f590adee423998f93","dweb:/ipfs/QmXMrqRU3ukaPqXeGdMfGauBWWtQ4MtpLG7wMaZELtriV9"]},"browser/IERC20.sol":{"keccak256":"0x9b8060bfbd1e10d85b116441e63da0aae1f4b6a16716fb555f7effbe4f8fb7f9","urls":["bzz-raw://62e12b469aad65c98d45c17a0d43d6a6fe235a699a968bfd9f1e61ca4f11af1a","dweb:/ipfs/QmSjTMbSFwjJrRf5bqZ5RE254F4B7hi3Q9rxpYxAzWKQNh"]},"browser/SafeMath.sol":{"keccak256":"0xc6716e4895f91ee3dcd76485971b5c119987dff40f5b669095314df3f498e343","urls":["bzz-raw://477269b470603d966267165570652da3af5a8cffb3a763f491e9f57103243fa5","dweb:/ipfs/QmNnCspbeDWf6eCpvnpkTXp67A4kvvZuZCKFbWf447g3KK"]},"browser/SimpleToken.sol":{"keccak256":"0x9be09489d982095a01535269d578d0cfde79afec5a6a07dba478521761d27088","urls":["bzz-raw://6b54395cfa1aab387f4fcf3d78a29f90cad44e0e7d384ea5050e8c47b007477e","dweb:/ipfs/QmNeAxnGeJXMC66WPfjJL1Zrwfc8sJAqWA8Fyd3EjP55d5"]}},"version":1},"version":1,"checkPoints":[]}