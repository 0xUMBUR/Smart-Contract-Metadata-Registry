{"address":"0xC6a0a044d51385f05dBb364EF0e58446351A713C","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_exchangePortal","type":"address"},{"internalType":"address","name":"_poolPortal","type":"address"},{"internalType":"address","name":"_stableCoin","type":"address"},{"internalType":"address","name":"_defiPortal","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"addressType","type":"uint256"}],"name":"AddNewPermittedAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"Address","type":"address"}],"name":"RemovePermittedAddress","type":"event"},{"inputs":[{"internalType":"address","name":"_newAddress","type":"address"},{"internalType":"uint256","name":"addressType","type":"uint256"}],"name":"addNewAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"addressesTypes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"disableAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"addressType","type":"uint256"}],"name":"isMatchTypes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"permittedAddresses","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAddress","type":"address"},{"internalType":"uint256","name":"addressType","type":"uint256"}],"name":"updateAddressType","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addNewAddress(address,uint256)":{"details":"adding a new address to permittedAddresses","params":{"_newAddress":"The new address to permit"}},"constructor":{"details":"contructor","params":{"_defiPortal":"Defi portal","_exchangePortal":"Exchange portal contract","_poolPortal":"Pool portal contract","_stableCoin":"Stable coins addresses to permitted"}},"disableAddress(address)":{"details":"Disables an address, meaning SmartFunds will no longer be able to connect to them if they're not already connected","params":{"_address":"The address to disable"}},"getType(address)":{"details":"return address type"},"isMatchTypes(address,uint256)":{"details":"check if input address has the same type as addressType"},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateAddressType(address,uint256)":{"details":"update address type as owner for case if wrong address type was set","params":{"_newAddress":"The new address to permit"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/PermittedAdresses.sol":"PermittedAddresses"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/PermittedAdresses.sol":{"keccak256":"0xef9f45b688a1727cc793f41b341a657a7cdb545c12f38bc6787bdeff87632b7e","urls":["bzz-raw://a76c4870ad41b56db2f23fbeb4b311dd9d14540f40f515697b28ca7890dcb813","dweb:/ipfs/QmbcPbvNm9hNwkXFamKDPQeCkgnnpKz2DarQMQ4MmxL7GD"]}},"version":1},"version":1,"checkPoints":[]}