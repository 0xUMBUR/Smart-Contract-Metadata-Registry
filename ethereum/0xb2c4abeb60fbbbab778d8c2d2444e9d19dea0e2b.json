{"address":"0xB2c4aBeb60FBBBaB778D8c2d2444E9D19DEA0E2b","name":"","metadata":{"compiler":{"version":"0.6.11+commit.5ef660b1"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_oracle_address","type":"address"},{"internalType":"address","name":"_owner_address","type":"address"},{"internalType":"address","name":"_timelock_address","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FXSBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FXSMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"VoterVotesChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FRAXStablecoinAdd","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FXS_DAO_min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint32","name":"","type":"uint32"}],"name":"checkpoints","outputs":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint96","name":"votes","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"genesis_supply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getCurrentVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPriorVotes","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle_address","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner_address","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"b_address","type":"address"},{"internalType":"uint256","name":"b_amount","type":"uint256"}],"name":"pool_burn_from","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"m_address","type":"address"},{"internalType":"uint256","name":"m_amount","type":"uint256"}],"name":"pool_mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"frax_contract_address","type":"address"}],"name":"setFRAXAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"min_FXS","type":"uint256"}],"name":"setFXSMinDAO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"new_oracle","type":"address"}],"name":"setOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner_address","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"new_timelock","type":"address"}],"name":"setTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timelock_address","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toggleVotes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trackingVotes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.approve(address spender, uint256 amount)"},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for `accounts`'s tokens of at least `amount`."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getCurrentVotes(address)":{"params":{"account":"The address to get votes balance"},"returns":{"_0":"The number of current votes for `account`"}},"getPriorVotes(address,uint256)":{"details":"Block number must be a finalized block or else this function will revert to prevent misinformation.","params":{"account":"The address of the account to check","blockNumber":"The block number to get the vote balance at"},"returns":{"_0":"The number of votes the account had as of the given block"}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}},"version":1},"userdoc":{"events":{"VoterVotesChanged(address,uint256,uint256)":{"notice":"An event thats emitted when a voters account's vote balance changes"}},"kind":"user","methods":{"getCurrentVotes(address)":{"notice":"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{"notice":"Determine the prior number of votes for an account as of a block number"}},"version":1}},"settings":{"compilationTarget":{"browser/tests/fraxfinance/FRAXShares.sol":"FRAXShares"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/tests/fraxfinance/AccessControl.sol":{"keccak256":"0x038070d6a0e6996a0a12116f2fafc5d24763d42f1e5cbf8dc04679c4d27f79d5","license":"MIT","urls":["bzz-raw://a9db9117667d28f1b26ce8599550a9390d99c2ac02fa07e4a77fb0b07ddb71d4","dweb:/ipfs/QmWBdkidxf9wJeiH5HtmfVAkK6Dwiehik1imTKNrtEbvJ3"]},"browser/tests/fraxfinance/Address.sol":{"keccak256":"0x575884da86647cef4f5517212498dea9ec0389302d508ebc3ce19a0bbb74a897","license":"MIT","urls":["bzz-raw://b802e6616c96e4b9ccbd468e16af361de597eb831630f9ffc30bf6e09b9e2619","dweb:/ipfs/QmTbTjqi3gsAxTSsSdZhAbXe2SodL1ogZhwDi4DgRoJyau"]},"browser/tests/fraxfinance/AggregatorV3Interface.sol":{"keccak256":"0x5e7761d06fea8192b159f3e287600cba23c5bdbe3a1bbe1050cc3ab9ed4273a4","license":"MIT","urls":["bzz-raw://1b6956df5c8ad84b2aba10e7d07c9f4976ae9ebdd65509729e752900a6f6475d","dweb:/ipfs/QmP2MJZdZsJWRozMHmCtq4SU5ePKEHxCzhyqtBFpAjCDny"]},"browser/tests/fraxfinance/Babylonian.sol":{"keccak256":"0xa1e89976edb3fd1bbace40d41cbc3cc077544130213115d1d8f1bb33febeeb7d","license":"MIT","urls":["bzz-raw://125cfe54f365063eb84515238c92137b8723b072d6ca6350fabc9ed570abea53","dweb:/ipfs/QmNg3xCU5DcXBkA48ZQ3xwqGSMh5hymYJ8SiQvHCDKaLiK"]},"browser/tests/fraxfinance/ChainlinkETHUSDPriceConsumer.sol":{"keccak256":"0x79e4e84dc26263f60e5fdbd898a12a8f45c9d14f4625b2817730bcc1b7cf17ea","license":"MIT","urls":["bzz-raw://622ae8d439e0d57b2b6e38612dc1f0479e64b9062d26e37b2c8b9ad427d12f6d","dweb:/ipfs/QmczC89nV4wJXCmu551JcjQBWpVnUJ6cbbcGn8Jj9kaEps"]},"browser/tests/fraxfinance/Context.sol":{"keccak256":"0x7eaaca849f15aa525f56bf33a208da8e5cd759c5f708a8b2e73ea828f0c1fb08","license":"MIT","urls":["bzz-raw://b6ca18bfac51fae8277b6253ab17fb1a5e6b0006c8fe1b2cf9fc6d0530f1bd6e","dweb:/ipfs/QmPJBVbwwmzFZCqZJuu76CqdwJpRhJunHy4AjF7nwPeCMF"]},"browser/tests/fraxfinance/ERC20.sol":{"keccak256":"0x001cb8905368f3191437da88f7819093fe40b36007e97222e03f16b03c356b2c","license":"MIT","urls":["bzz-raw://f97e039a87b9c56e9658187671fb13e37a70161d10766f3eb19d2e8fce40a71a","dweb:/ipfs/QmNQx63AuZj7FCrLoVdLXCE3Tm2eL5DdTz9fG8mfReeXze"]},"browser/tests/fraxfinance/ERC20Custom.sol":{"keccak256":"0xe10b2ea827c51e8513764209b4fc25ff36636639af69458c2ddb41295d4cd656","license":"MIT","urls":["bzz-raw://ead6efcb49a98c489dade6fae570aa89eef7b266e761f3ec1016ddf4db817524","dweb:/ipfs/QmdA9M7yfyWpFvVtB92ugiv5eCXNB9h5fAdKMN7v3UZRjE"]},"browser/tests/fraxfinance/EnumerableSet.sol":{"keccak256":"0xd6967bb325e57a6244afc09a885079ec09dfe996b09e31d6faa75f6fa25a3937","license":"MIT","urls":["bzz-raw://a56f617e25bfddf9df15693c01ccce37a3a5441c2476a77e9e39927a3f716057","dweb:/ipfs/QmbzNXhWg6o5HTV5E79dtKjdfjJAjYozb6RmR8dDncGLiY"]},"browser/tests/fraxfinance/FRAXShares.sol":{"keccak256":"0x5c2a71013cfbe84f7091c07f3be0ed0d5c6a56ff60d8bc60594c9407feae7b3b","license":"MIT","urls":["bzz-raw://188b93f39029dcbceef362770e6ca1c46d070812e167c6a2faa584b75a856876","dweb:/ipfs/QmZVjmxcmtPtq2AZPN7VCW8a8jqZhvYkBnUAh19KU5WAzF"]},"browser/tests/fraxfinance/FRAXStablecoin.sol":{"keccak256":"0x4abc1b8ea7b71bf5d1288f3ce8db1bcf40310388510ef62928afd888ac9b2e1b","license":"MIT","urls":["bzz-raw://5f4d9069a3e29bd65a97b918d33d62c69f244556696a68ebe8111fae8f21adf1","dweb:/ipfs/Qme6JmH8H9ECMsQp3RkhHEJvtsujHA2xjQzWyxWLLkfRC1"]},"browser/tests/fraxfinance/FixedPoint.sol":{"keccak256":"0x776afd72275d13976f8fbea74503327db897441db581a0d21f5ec0073b689889","license":"MIT","urls":["bzz-raw://7f07d0450ed9073a2ff05de448c148d6c8b4a922cdf45e79b8dcfae26f0153a1","dweb:/ipfs/QmV2pgqAU8dCC19e6bfYkWdNuSFeKKjzHBdwPDEzYjiRZg"]},"browser/tests/fraxfinance/FraxPool.sol":{"keccak256":"0xacccac884f39de6a1a963ebf7ef494add12d39cc375514a807cecd038f0e8167","license":"MIT","urls":["bzz-raw://2e152f699546fcb5e385209808a5a92da05551114cf649d4881a95ca948e3aa4","dweb:/ipfs/QmenHgGabkYMoY4ERT9pSQHEFhcqwo6mJZrTPWaqYFTpf3"]},"browser/tests/fraxfinance/FraxPoolLibrary.sol":{"keccak256":"0x57ee243f9040a8c32592bedc2dea0320c327b93f0ef93120606456c2a8799fa2","license":"MIT","urls":["bzz-raw://d3c96dc1a90bec52450321397d8ad5150a5d9ac43c98ebbfd8f6684e07d69e1f","dweb:/ipfs/QmdZ7ytk9VKw8gVK2hywrJu9EeZuZjc2JyB66wNk8DLSvL"]},"browser/tests/fraxfinance/IERC20.sol":{"keccak256":"0x16778aefd91c9f1605382ce5ec7aa6c6c0a09d56282ac89bbc0520dc470b07b5","license":"MIT","urls":["bzz-raw://87e23e9e08f210cfc8f7fc9c7349b348db0fc60eb6f3cec9bcd9f055114f198e","dweb:/ipfs/QmPJFr1stvLUn678fNjnoZXgz3PAQq6hQCUsSZqwAXoQXD"]},"browser/tests/fraxfinance/IUniswapV2Factory.sol":{"keccak256":"0x828962f151f90d86141bc2ad011a88d851a865f0c97197f4fd4df7ebe0e0acc6","license":"MIT","urls":["bzz-raw://ac3c147ba07efb47fb11c123483c90b642b0174b838f5cde2da5b8b9cef568c0","dweb:/ipfs/QmRhgTjKMBzc3bp3Yk91rtQgTJmbqriqH2D9hTaXzVn5Hi"]},"browser/tests/fraxfinance/IUniswapV2Pair.sol":{"keccak256":"0x1d3a96a0bd3f27fa1aab5bcf5d7b8f765424d8ff10c79b011b75d58ef6740421","license":"MIT","urls":["bzz-raw://0628996ffb6620cfe96c718dbb17c65de41bc7ee54881f6a4327021ea0c01dc9","dweb:/ipfs/QmZZ5yA7fE7fdcLXmoiRfb6hLxCRPGH4vqTrNc74q52UXs"]},"browser/tests/fraxfinance/SafeMath.sol":{"keccak256":"0xd59454f079791fa65de99df4f72d7efc0443657dacff0a1e41fcd0542bb5ee71","license":"MIT","urls":["bzz-raw://a3cafa7e188fccb7da079c1fe94d02b62d9c137246e68fe5b309802195247416","dweb:/ipfs/QmdWqMsPT4xbBGTHQ7HuBrGD5rjHjvZ3yehs5QAviQvvoK"]},"browser/tests/fraxfinance/UniswapPairOracle.sol":{"keccak256":"0x861838b30976c0cdc0f632c1219c0d520b7d9560a200c0669c78e818b1e25492","license":"MIT","urls":["bzz-raw://29b4f78b3d04bb5db4a07e68aaf772318d70a48ae211f6f716eecf6300f6f1d3","dweb:/ipfs/QmT6oL6ooexkNYyNAXrmraYmLWhiP9EgYTbueTZDthh8a2"]},"browser/tests/fraxfinance/UniswapV2Library.sol":{"keccak256":"0xacf9178a4bda51e2262a568070e7471c80362967ece709882083a4ec7cc4758b","license":"MIT","urls":["bzz-raw://c0960f32ea45d725e0e7a50fb2258e1e73e5b15c338234f0bd44b64e93a8ae28","dweb:/ipfs/QmPYaoYCMRb1ntQBDhdRs5wZsgVqSEbf2mqn4529CUTtne"]},"browser/tests/fraxfinance/UniswapV2OracleLibrary.sol":{"keccak256":"0x60962f483f10c88ec850c5936d2708746851d8e5df8232186c7def0ff016170e","license":"MIT","urls":["bzz-raw://3f7c5771fcfa5ab73089da50b27734584c41a72310e0e4f8932e387ea3cfce9f","dweb:/ipfs/QmWm9kpCg22rk6oNBAxMDBudLdSP2KTSYAVRu3xuSNrTCo"]}},"version":1},"version":1,"checkPoints":[]}