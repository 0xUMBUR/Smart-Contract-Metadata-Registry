{"address":"0xC373126A6A8B5c324fF41f3c6F0A085EF53cC937","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_claimer","type":"address"},{"indexed":false,"internalType":"address","name":"_tokenAddress","type":"address"}],"name":"Claimed","type":"event"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"_transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"address","name":"_nftAddress","type":"address"}],"name":"claimedBy","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"}],"name":"getCurrentSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"}],"name":"getCurrentTokenIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"}],"name":"getTotalClaimCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_claimCount","type":"uint256"}],"name":"setCurrentClaimCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_supply","type":"uint256"}],"name":"setSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"setTokenIndex","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_tokenIndex","type":"uint256"},{"internalType":"uint256","name":"_supply","type":"uint256"},{"internalType":"uint256","name":"_claimCount","type":"uint256"}],"name":"setValues","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"transfer tokens & store claimer","kind":"dev","methods":{"_transferFrom(address,address,uint256)":{"details":"manual transfer of token. this will be removed before deployment on mainnet"},"changeOwner(address)":{"details":"change ownership of this contract","params":{"_newOwner":"- new owner of the contract"}},"claim(address)":{"details":"claim an nft","params":{"_nftAddress":"- the type of token the sender wants to claim"}},"claimedBy(address,address)":{"details":"check if the claimers mapping contains a mapping for the supplied address","params":{"_address":"- wallet address to check for","_nftAddress":"- nft address to check for"}},"constructor":{"details":"sets the initial owner of the contract to whoever deployed it"},"getCurrentSupply(address)":{"details":"get the current supply of a type of nft in this contract","params":{"_nftAddress":"- the type of nft you want to get the supply for"},"returns":{"_0":"available supply of nft"}},"getCurrentTokenIndex(address)":{"details":"get current token index for specific nft","params":{"_nftAddress":"- the type of nft you want to get the token index for"},"returns":{"_0":"token index for type of nft"}},"getTotalClaimCount(address)":{"details":"get total claim count of a type of nft in this contract","params":{"_nftAddress":"- the type of nft you want to get the total claim count for"},"returns":{"_0":"total claim count of type of nft"}},"setCurrentClaimCount(address,uint256)":{"details":"administational function used to reset the claim count for a new batch of nfts","params":{"_claimCount":"- claim count of the current batch, usually 0","_nftAddress":"- nft address to set the claim count for"}},"setSupply(address,uint256)":{"details":"administational function used to set the amount of nfts in a new batch","params":{"_nftAddress":"- nft address to set the supply for","_supply":"- amount of nfts in the batch"}},"setTokenIndex(address,uint256)":{"details":"administational function used to set the tokenIndex for a new batch of nfts","params":{"_index":"- tokenId of the first nft in the batch","_nftAddress":"- nft address to set the id for"}},"setValues(address,uint256,uint256,uint256)":{"details":"administational function used to all above values (tokenIndex, supply and claim count) for a new batch of nfts","params":{"_claimCount":"- claim count of the current batch, usually 0","_nftAddress":"- nft address to set the id for","_supply":"- amount of nfts in the batch","_tokenIndex":"- tokenId of the first nft in the batch"}}},"title":"NFTClaimer","version":1},"userdoc":{"kind":"user","methods":{"claim(address)":{"notice":"requires msg.sender has not been registered as a claimer of the requested nft in claimersrequires there is a supply of the requested nft left in this contract"}},"version":1}},"settings":{"compilationTarget":{"browser/NFTClaimer.sol":"NFTClaimer"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/NFTClaimer.sol":{"keccak256":"0xe1d5141746435ea5762be118394edbeb55c330d85a38b890d413fe63cddd5c43","urls":["bzz-raw://9797a370c378429e2bf64d4710dccb4d4eca0faa237ec611d9d9c057fae3d5a2","dweb:/ipfs/QmS38nv79XmnuN9gek4eKBBbVSCTTHUhMjbTnQ7H48KTM8"]}},"version":1},"version":1,"checkPoints":[]}