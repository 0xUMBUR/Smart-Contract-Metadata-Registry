{"address":"0x46a7a848dd45a930436299Ae8eb1822bCD35F334","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"DAI_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"destToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"_swapOnCurve","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"destToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"factory","type":"address"}],"name":"_swapOnUniswapV2Internal","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"curve","outputs":[{"internalType":"contract ICurveFiCurve","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"curveIndex","outputs":[{"internalType":"int128","name":"","type":"int128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"exchanges","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"}],"name":"getFullReserves","outputs":[{"internalType":"uint256","name":"fromTotal","type":"uint256"},{"internalType":"uint256","name":"destTotal","type":"uint256"},{"internalType":"uint256[3]","name":"dist","type":"uint256[3]"},{"internalType":"uint256[2][3]","name":"res","type":"uint256[2][3]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"address","name":"factory","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[3]","name":"xp","type":"uint256[3]"},{"internalType":"uint256","name":"amp","type":"uint256"}],"name":"get_D","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"},{"internalType":"uint256","name":"j","type":"uint256"},{"internalType":"uint256","name":"dy","type":"uint256"}],"name":"get_dx_underlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"},{"internalType":"uint256","name":"j","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256[3]","name":"xp_","type":"uint256[3]"}],"name":"get_y","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minPc","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"},{"internalType":"uint256[3]","name":"swapAmountsIn","type":"uint256[3]"},{"internalType":"uint256[3]","name":"swapAmountsOut","type":"uint256[3]"},{"internalType":"bool","name":"swapVia","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"quoteDirect","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"},{"internalType":"uint256[3]","name":"swapAmounts","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reInit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"uint256","name":"returnAmount","type":"uint256"}],"name":"reverseQuote","outputs":[{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256[3]","name":"swapAmountsIn","type":"uint256[3]"},{"internalType":"uint256[3]","name":"swapAmountsOut","type":"uint256[3]"},{"internalType":"bool","name":"swapVia","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"uint256","name":"returnAmount","type":"uint256"}],"name":"reverseQuoteDirect","outputs":[{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256[3]","name":"swapAmounts","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPC","type":"uint256"}],"name":"setMinPc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slippageFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"slipProtect","type":"bool"}],"name":"swap","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"TokenAddress","type":"address"}],"name":"transferTokenBack","outputs":[{"internalType":"uint256","name":"returnBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"this is an implementation of a split exchange that takes the input amount and proposes a better price given the liquidity obtained from multiple AMM DEX exchanges considering their liquidity at the moment might also help mitigating a flashloan attack","kind":"dev","methods":{"getFullReserves(address,address)":{"details":"Method to get the full reserves for the 2 token to be exchanged plus the proposed distribution to obtain the best price"},"getReserves(address,address,address)":{"details":"universal method to get the given AMM address reserves"},"get_D(uint256[3],uint256)":{"details":"curve-specific maths"},"get_dx_underlying(uint256,uint256,uint256)":{"details":"curve-specific maths - this method does not exists in the curve pool but we recreated it"},"get_y(uint256,uint256,uint256,uint256[3])":{"details":"curve-specific maths"},"init()":{"details":"initializer method instead of a constructor - though we don't normally use proxy here we still might want to"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"quote(address,address,uint256)":{"details":"Method to get a best quote between the direct and through the WETH - as there is more liquidity between token/ETH than token0/token1"},"quoteDirect(address,address,uint256)":{"details":"Method to get a direct quote between the given tokens - might not be always available as there might not be any direct liquidity between them"},"reInit()":{"details":"re-initializer might be helpful for the cases where proxy's storage is corrupted by an old contact, but we cannot run init as we have the owner address already. This method might help fixing the storage state."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"reverseQuote(address,address,uint256)":{"details":"Method to get a best Reverse Quote between the direct and through the WETH - as there is more liquidity between token/ETH than token0/token1"},"reverseQuoteDirect(address,address,uint256)":{"details":"Method to get a reverse direct quote between the given tokens - might not be always available as there might not be any direct liquidity between them"},"setMinPc(uint256)":{"details":"set the slippage %%"},"swap(address,address,uint256,bool)":{"details":"Main function to run a swap","params":{"slipProtect":"- enable/disable slip protection"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferTokenBack(address)":{"details":"fallback function to withdraw tokens from contract - not normally needed"}},"title":"XTrinity exchanger contract","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/XTrinity_flat.sol":"XTrinity"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":2000},"remappings":[]},"sources":{"browser/XTrinity_flat.sol":{"keccak256":"0xd17bc84090db7dfa62bd6c3a895d727bdf15174d04db6fd3436e6a19098973f6","license":"MIT","urls":["bzz-raw://adcaf44bafee1c5187325670ccb233f7c946aa21841981c9a9c832eada3b1b36","dweb:/ipfs/QmUQNVHr2dcRQcq9xm6ZnJjiS8JQxsJDBS2S9QFuBZ4NqG"]}},"version":1},"version":1,"checkPoints":[]}