{"address":"0x988bb825F721f8c74275B01A6e3C5c62e59F3086","name":"","metadata":{"compiler":{"version":"0.8.5+commit.a4f2e591"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Guillaume Gonnaud 2020","kind":"dev","methods":{"allowance(address,address)":{"params":{"_owner":"The address of the account being approved for tokens","_spender":"The amount of token to be spent in total"},"returns":{"remaining":"the allowance of _spender on behalf of _owner"}},"approve(address,uint256)":{"params":{"_spender":"The address of the account being approved for tokens","_value":"The amount of token to be spent in total"},"returns":{"success":"true if success"}},"constructor":{"details":"Please change the values in here if you want more specific values, or make the constructor takes arguments"},"mint(uint256)":{"params":{"_value":"Amount of tokens to mint"}},"transfer(address,uint256)":{"params":{"_to":"The address of the recipient","_value":"The amount of token to send"},"returns":{"success":"true if success, throw if failed"}},"transferFrom(address,address,uint256)":{"params":{"_from":"The address of the account being removed tokens","_to":"The address of the account being given tokens","_value":"The amount of token to send"},"returns":{"success":"true if success, throw if failed"}}},"title":"ERC20 Generic placeholder smart contract for testing and ABI","version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address)":{"notice":"get the approved amount of token _spender can spend on behalf of _owner"},"approve(address,uint256)":{"notice":"Approve an amount of token _spender can spend on behalf of msg.sender"},"constructor":{"notice":"Constructor"},"mint(uint256)":{"notice":"Mint _value tokens for msg.sender Function not present in ERC20 spec : allow for the minting of a token for test purposes"},"transfer(address,uint256)":{"notice":"Transfer a _value amount of ERC token from msg.sender to _to Throw if msg.sender doesn't have enough tokens"},"transferFrom(address,address,uint256)":{"notice":"Transfer a _value amount of ERC token from _drom to _to.  Only work if msg.sender == from or if msg.sender allowance < value Throw if _from doesn't have enough tokens"}},"version":1}},"settings":{"compilationTarget":{"src/contracts/tokens/ERC20Generic.sol":"ERC20Generic"},"evmVersion":"berlin","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"src/contracts/tokens/ERC20Generic.sol":{"keccak256":"0x037ea174ece47a3b953cb13ee6f8c66b788e1f48677e7f6bb6edb4eb774d07c1","license":"UNLICENSED","urls":["bzz-raw://0a7c22b3f601b80c004063fde707a0b0a1883688c8c6ba60fa55a593c81a10da","dweb:/ipfs/QmXnf1bvJLkpMsPUjdPt3fwKGst3HjhuUFT75QGVhD2AhZ"]},"src/contracts/tokens/IERC20.sol":{"keccak256":"0x138bd3346296ec8baf215b17bba30aef3b02f2316fc560dcd35fd3ab2d5f3d22","license":"CC0-1.0","urls":["bzz-raw://990ee8109c3be856b2547fff7216f27831c549883caf4ee2236e774f10ebbe54","dweb:/ipfs/QmNVEA2bWmJWkeDZewrFmrUmxGhe8kwYfchGYVFA1c2KNd"]}},"version":1},"version":1,"checkPoints":[]}