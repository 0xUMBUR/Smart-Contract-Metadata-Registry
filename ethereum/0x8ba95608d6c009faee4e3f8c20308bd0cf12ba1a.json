{"address":"0x8Ba95608d6c009faEe4E3F8C20308BD0cf12Ba1a","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract ICERC20","name":"sellCToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"contract ICERC20","name":"buyCToken","type":"address"},{"internalType":"uint256","name":"redeemAmount","type":"uint256"},{"internalType":"uint256","name":"minBuyToken","type":"uint256"}],"name":"swapCTokenForCToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract ICERC20","name":"sellCToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"uint256","name":"redeemAmount","type":"uint256"},{"internalType":"uint256","name":"minBuyToken","type":"uint256"}],"name":"swapCTokenForToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"sellToken","type":"address"},{"internalType":"contract IERC20","name":"buyToken","type":"address"},{"internalType":"contract ICERC20","name":"buyCToken","type":"address"},{"internalType":"uint256","name":"sellAmount","type":"uint256"},{"internalType":"uint256","name":"minBuyToken","type":"uint256"}],"name":"swapTokenForCToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"swapCTokenForCToken(address,address,address,address,uint256,uint256)":{"details":"Redeems a cToken for its base token, swaps it on UniSwap for the desired output token, mints cTokens for the output and returns them to the caller. Note: Caller must already have approved Compounder to transfer at least redeemAmount of sellCToken","params":{"buyCToken":"cToken for buyToken","buyToken":"Base token for the cToken to buy","minBuyToken":"Minimum number of buyTokens for the swap","redeemAmount":"Number of cTokens to redeem","sellCToken":"cToken for sellToken","sellToken":"Base token for the cToken to sell"}},"swapCTokenForToken(address,address,address,uint256,uint256)":{"details":"Redeems a cToken for its base token, then swaps it on UniSwap for the desired output token and transfers it to the caller. Note: Caller must already have approved Compounder to transfer at least redeemAmount of sellCToken","params":{"buyToken":"Desired output token","minBuyToken":"Minimum number of output tokens","redeemAmount":"Number of cTokens to redeem","sellCToken":"cToken for sellToken","sellToken":"Base token for the cToken to sell"}},"swapTokenForCToken(address,address,address,uint256,uint256)":{"details":"Swaps a token on uniswap, then mints cTokens for the purchased token. Note: Caller must already have approved Compounder to transfer at least sellAmount of sellToken","params":{"buyCToken":"cToken for buyToken","buyToken":"Base token to swap sellToken for","minBuyToken":"Minimum number of buyToken to receive","sellAmount":"Number of sellToken to sell","sellToken":"Base token to sell"}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"browser/Compounder/Compounder.sol":"Compounder"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Compounder/Compounder.sol":{"keccak256":"0x2c1bb9262690d60f525f4e6f9b3e78f2f66aeeda85c8cd371a48ce43a64e7cf6","urls":["bzz-raw://6fdcedaf9e6ba08e8f8bf12cade0a15504bd52aae0b64299606f1c6725b018bf","dweb:/ipfs/Qmdbvn3rSuxPeJrWeYNxW4zfMNFnmBAtPV3wUeYaAdh4PZ"]},"browser/Compounder/interfaces/ICERC20.sol":{"keccak256":"0x7b1f6f9d33bf57a67a1939d95425c2053ca3c9608ee0beddffe0ca90914566a7","urls":["bzz-raw://d0fca2fa4660eaaf38ec97fe4caedf4dbce77874fc0208b41b18b61a4e95dbd3","dweb:/ipfs/QmbZ4b6crc1ZjwtpMFYgnR7PJd3bvbGKC4ZVFmV6QVvxN7"]},"browser/Compounder/interfaces/IERC20.sol":{"keccak256":"0x95fb26f311d252a48326553a59d42f26827e2521c075635be7984da8c7dc7eef","urls":["bzz-raw://fd104da443482d1d3c4307926a9fbd5dc8ec4fcc4f2921fdf492bef3c8e9312b","dweb:/ipfs/QmQZ2QhCBzboef67hTUVEohCaNL1iyT38zy2bPXHQv1YoL"]},"browser/Compounder/interfaces/IUniswapV2Router01.sol":{"keccak256":"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2","urls":["bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb","dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG"]},"browser/Compounder/interfaces/IUniswapV2Router02.sol":{"keccak256":"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d","urls":["bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c","dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG"]}},"version":1},"version":1,"checkPoints":[]}