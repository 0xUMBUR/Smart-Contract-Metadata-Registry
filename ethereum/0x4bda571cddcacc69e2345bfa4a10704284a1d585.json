{"address":"0x4BDA571CddcaCC69e2345BFA4a10704284A1d585","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"getLockType","outputs":[{"internalType":"enum LockLib.LockType","name":"","type":"uint8"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"enum LockLib.LockType","name":"lockType","type":"uint8"},{"internalType":"uint16","name":"penaltyRateOver1000","type":"uint16"},{"internalType":"bool","name":"permanent","type":"bool"}],"name":"lockAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"dest","type":"address"}],"name":"lockOrGetPenalty","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"multiBlackList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"multiWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"safetyLocker","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_safetyLocker","type":"address"}],"name":"setSafetyLocker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"lockOrGetPenalty(address,address)":{"details":"Fails if transaction is not allowed. Otherwise returns the penalty."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"userdoc":{"methods":{},"notice":"Owner can lock unlock temporarily, or make them permanent. It can also add penalty to certain activities. Addresses can be whitelisted or have different penalties. This must be inherited by the token itself."}},"settings":{"compilationTarget":{"contracts/Locker.sol":"BasicLocker"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"contracts/Locker.sol":{"keccak256":"0x04d04c4010455e568b1e4feb840520dd72a989c2253fdf809f3041a40943034b","urls":["bzz-raw://8cbf06d9560e7da52760c914af8912fb89d46e77330de0cd5845806a0779b1d9","dweb:/ipfs/Qmc16kLk4YPTLmP9wR8RDNUbobwYRzwwCw9oFZzABxZ2n6"]}},"version":1},"version":1,"checkPoints":[]}