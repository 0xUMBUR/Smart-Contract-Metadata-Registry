{"address":"0x970E8BACa76E2669Ce734e02Fd00639AA52E5aB1","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"tokenOwnerWallet","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"AddedToWhitelistFrom","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"AddedToWhitelistTo","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"}],"name":"BurnRateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newRate","type":"uint32"}],"name":"InterestRateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"RemovedFromWhitelistFrom","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"RemovedFromWhitelistTo","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"UniswapAddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"UniswapAddressRemoved","type":"event"},{"inputs":[{"internalType":"address[]","name":"dests","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"airdrop","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"checkInterestGenerationForAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"erc20token","type":"address"},{"internalType":"bool","name":"generateInterest","type":"bool"}],"name":"enableInterestForToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getBurnRatePerThousandth","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterestRate","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isAddressWhitelistedFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isAddressWhitelistedTo","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"value","type":"uint32"}],"name":"setBurnRatePerThousandth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"setBurnWhitelistFromAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"setBurnWhitelistToAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"value","type":"uint32"}],"name":"setInterestRatePerThousandth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"datenshishi | Hanedan; in collaboration with CommunityToken.io; original ver. by KrippTorofu @ RiotOfTheBlock   NOTES: This version includes uniswap router registration, to prevent owner from setting mint addresses that are not UniswapV2Pairs.     No tax/burn limits have been added to this token.   Until the Ownership is rescinded, owner can modify the parameters of the contract (tax, interest, whitelisted addresses, uniswap pairs).   Minting is disabled, except for the interest generating address, which is now behind a uniswap router check.","events":{"AddedToWhitelistFrom(address)":{"params":{"addr":"Address of Contract / EOA to whitelist"}},"AddedToWhitelistTo(address)":{"params":{"addr":"Address of Contract / EOA to whitelist"}},"RemovedFromWhitelistFrom(address)":{"params":{"addr":"Address of Contract / EOA to whitelist"}},"RemovedFromWhitelistTo(address)":{"params":{"addr":"Address of Contract / EOA to whitelist"}},"UniswapAddressAdded(address)":{"params":{"addr":"Address of an IUniswapV2Pair Contract"}}},"kind":"dev","methods":{"airdrop(address[],uint256[])":{"params":{"dests":"Array of recipients","values":"Array of values. Ensure the values are in wei. i.e. you must multiply the amount of DIV tokens to be sent by 10**18."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"checkInterestGenerationForAddress(address)":{"details":"it is not trivial to return a mapping without incurring further storage costs","params":{"addr":"Address to check"}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"enableInterestForToken(address,bool)":{"details":"This will only work with the existing uniswapV2Factory and will require a new token overall if UniswapV3 comes out...etc.Hardcoding the factory pair in contract ensures someone can't create a fake uniswapV2Factory that would return a hardcoded EOA.","params":{"erc20token":"address of the ACTUAL ERC20 liquidity token, e.g. to mint on buys against WETH, pass in the WETH ERC20 address, not the uniswap LP Address.","generateInterest":"True to begin generating interest, false to remove.  "}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isAddressWhitelistedFrom(address)":{"details":"it is not trivial to return a mapping without incurring further storage costs","params":{"addr":"Address to check"}},"isAddressWhitelistedTo(address)":{"details":"it is not trivial to return a mapping without incurring further storage costs","params":{"addr":"Address to check"}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBurnRatePerThousandth(uint32)":{"params":{"value":"Set this value in thousandths. Max of 50.  i.e. 10 = 1%, 1 = 0.1%, 0 = burns are disabled."}},"setBurnWhitelistFromAddress(address,bool)":{"params":{"addr":"Address to whitelist / dewhitelist ","whitelisted":"True to add to whitelist, false to remove."}},"setBurnWhitelistToAddress(address,bool)":{"params":{"addr":"Address to whitelist / dewhitelist ","whitelisted":"True to add to whitelist, false to remove."}},"setInterestRatePerThousandth(uint32)":{"params":{"value":"Set this value in thousandths. Max of 50. i.e. 10 = 1%, 1 = 0.1%, 0 = interest is disabled."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"DIV token rewards buyers from specific addresses (AMMs such as uniswap) by minting purchase rewards immediately, and burns a percentage of all on chain transactions.","version":1},"userdoc":{"events":{"AddedToWhitelistFrom(address)":{"notice":"The address `addr` is now whitelisted, any funds sent FROM this address will not incur a burn. "},"AddedToWhitelistTo(address)":{"notice":"The address `addr` is now whitelisted, any funds sent to it will not incur a burn. "},"BurnRateChanged(uint32)":{"notice":"The Burn rate has been changed to `newRate`/1000 per 1 DIV token on every transaction "},"InterestRateChanged(uint32)":{"notice":"The Buy Interest rate has been changed to `newRate`/1000 per 1 DIV token on every transaction"},"RemovedFromWhitelistFrom(address)":{"notice":"The address `addr` is removed from whitelist, any funds sent FROM this address will now incur a burn of `_burnRatePerTransferThousandth`/1000 DIV tokens as normal. "},"RemovedFromWhitelistTo(address)":{"notice":"The address `addr` is removed from whitelist, any funds sent to it will now incur a burn of `_burnRatePerTransferThousandth`/1000 DIV tokens as normal. "},"UniswapAddressAdded(address)":{"notice":"Transfers from IUniswapV2Pair at address `addr` now will mint an extra `_interestRatePerBuyThousandth`/1000 DIV tokens per 1 Token for the recipient."},"UniswapAddressRemoved(address)":{"notice":"IUniswapV2Pair at address `addr` now will stop minting"}},"kind":"user","methods":{"airdrop(address[],uint256[])":{"notice":"This function can be used by Contract Owner to disperse tokens bypassing incurring penalties or interest.  The tokens will be sent from the Owner Address Balance."},"checkInterestGenerationForAddress(address)":{"notice":"If true, transfers from IUniswapV2Pair at address `addr` will mint an extra `_interestRatePerBuyThousandth`/1000 DIV tokens per 1 Token for the recipient."},"enableInterestForToken(address,bool)":{"notice":"Will query uniswapV2Factory to find a pair.  Pair now will mint an extra `_interestRatePerBuyThousandth`/1000 DIV tokens per 1 Token for the recipient."},"getBurnRatePerThousandth()":{"notice":"Returns the burn rate on transfers in thousandths"},"getInterestRate()":{"notice":"Returns the interest rate for purchases in thousandths"},"isAddressWhitelistedFrom(address)":{"notice":"If true, Address `addr` will not incur `_burnRatePerTransferThousandth`/1000 burn for any Transfers from it."},"isAddressWhitelistedTo(address)":{"notice":"If true, Address `addr` will not incur `_burnRatePerTransferThousandth`/1000 burn for any Transfers to it."},"setBurnRatePerThousandth(uint32)":{"notice":"Changes the burn rate on transfers in thousandths"},"setBurnWhitelistFromAddress(address,bool)":{"notice":"Address `addr` will no longer incur the `_burnRatePerTransferThousandth`/1000 burn on Transfers from it."},"setBurnWhitelistToAddress(address,bool)":{"notice":"Address `addr` will no longer incur the `_burnRatePerTransferThousandth`/1000 burn on Transfers"},"setInterestRatePerThousandth(uint32)":{"notice":"Changes the interest rate for purchases in thousandths"}},"version":1}},"settings":{"compilationTarget":{"browser/contracts/DivToken.sol":"DIVToken2"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/contracts/DivToken.sol":{"keccak256":"0xbc88d39aa553ba6025c26b4c30133e20c3eeca09b86aa8623d719c5196adb1d1","license":"MIT","urls":["bzz-raw://ed67425b099c19155bfe47744c1d38f68685f988a4ee770f91f166e9e24fdc6a","dweb:/ipfs/QmR3hs4VytETk3vLm1banMktQSBErqdNrCQpUoHFdAww9G"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.7/contracts/GSN/Context.sol":{"keccak256":"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938","license":"MIT","urls":["bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c","dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.7/contracts/access/Ownable.sol":{"keccak256":"0x46d2453e9db55eae25c9abdae2c42229086c54f1a6a247e8ce32658bb785f6ae","license":"MIT","urls":["bzz-raw://198ef77ef5d9f7a7709d6bbfba1d4d54d82ccc15358e9dced37f1376dac887fa","dweb:/ipfs/QmQHFvCA74s3AHU3NMn4AAYzFTt6UotWq7yk3WzLQs1oJS"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.7/contracts/math/SafeMath.sol":{"keccak256":"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4","license":"MIT","urls":["bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f","dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.7/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x482b6d82ba1c9c73758ae15068a438361d4187b7a4e342db17ef0f828cb5e21a","license":"MIT","urls":["bzz-raw://89725e56bc9c6cfb69521ceaa4a489561b928e930b71e30db85b24024c1c2c03","dweb:/ipfs/QmNvpotZA1Fe48msV6TShSTVxeQ2dkaDS9MTKP4bNxyUG3"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.7/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76","license":"MIT","urls":["bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b","dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"]},"https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2Factory.sol":{"keccak256":"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891","urls":["bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389","dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt"]}},"version":1},"version":1,"checkPoints":[]}