{"address":"0xc34364B97a60C66D438eA6fB02cB097A877496c1","name":"","metadata":{"compiler":{"version":"0.7.5+commit.eb77ed08"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"ERR_ENTRY_ALREADY_EXISTS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ENTRY_NON_EXISTANT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_ENTRY_NOT_IN_CHANGE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERR_WAIT_PERIOD_SHORTER","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_contractAddr","type":"address"},{"internalType":"uint256","name":"_waitPeriod","type":"uint256"}],"name":"addNewContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"approveContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"cancelContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_newWaitPeriod","type":"uint256"}],"name":"changeWaitPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"entries","outputs":[{"internalType":"address","name":"contractAddr","type":"address"},{"internalType":"uint256","name":"waitPeriod","type":"uint256"},{"internalType":"uint256","name":"changeStartTime","type":"uint256"},{"internalType":"bool","name":"inChange","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"logger","outputs":[{"internalType":"contract DefisaverLogger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pendingAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"setAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_newContractAddr","type":"address"}],"name":"startContractChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawStuckFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addNewContract(bytes32,address,uint256)":{"params":{"_contractAddr":"Address of the contract","_id":"Id of contract","_waitPeriod":"Amount of time to wait before a contract address can be changed"}},"approveContractChange(bytes32)":{"details":"Can override a change that is currently in progress","params":{"_id":"Id of contract"}},"cancelContractChange(bytes32)":{"params":{"_id":"Id of contract"}},"changeAdmin(address)":{"params":{"_admin":"Address of multisig that becomes new admin"}},"changeOwner(address)":{"params":{"_owner":"Address of new owner"}},"changeWaitPeriod(bytes32,uint256)":{"params":{"_id":"Id of contract","_newWaitPeriod":"New wait time, must be bigger than before"}},"getAddr(bytes32)":{"details":"Id is keccak256 of the contract name","params":{"_id":"Id of contract"}},"isRegistered(bytes32)":{"params":{"_id":"Id of contract"}},"setAdmin(address)":{"params":{"_admin":"Address of multisig that becomes admin"}},"startContractChange(bytes32,address)":{"details":"Can override a change that is currently in progress","params":{"_id":"Id of contract","_newContractAddr":"Address of the new contract"}}},"title":"Stores all the important DFS addresses and can be changed (timelock)","version":1},"userdoc":{"kind":"user","methods":{"addNewContract(bytes32,address,uint256)":{"notice":"Adds a new contract to the registry"},"approveContractChange(bytes32)":{"notice":"Changes new contract address, correct time must have passed"},"cancelContractChange(bytes32)":{"notice":"Cancel pending change"},"changeAdmin(address)":{"notice":"Admin is able to set new admin"},"changeOwner(address)":{"notice":"Admin is able to change owner"},"changeWaitPeriod(bytes32,uint256)":{"notice":"Changes wait period for an entry"},"getAddr(bytes32)":{"notice":"Given an contract id returns the registred address"},"isRegistered(bytes32)":{"notice":"Helper function to easily query if id is registred"},"kill()":{"notice":"Destroy the contract"},"setAdmin(address)":{"notice":"Admin is set by owner first time, after that admin is super role and has permission to change owner"},"startContractChange(bytes32,address)":{"notice":"Starts an address change for an existing entry"},"withdrawStuckFunds(address,address,uint256)":{"notice":"withdraw stuck funds"}},"version":1}},"settings":{"compilationTarget":{"browser/DSProxy.sol":"DFSRegistry"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/DSProxy.sol":{"keccak256":"0xfe41a813aca9071f1adbef8a4c322c34781a2837c7002096c1784d4231ca3432","license":"MIT","urls":["bzz-raw://afbbb94b86964df47016c81cbb32afb84b3db520beee422c63637442d388e28c","dweb:/ipfs/Qmd9zkgvXZCNpbjnkx89wAxs7eamvqLEeWovAdxtEkQECh"]}},"version":1},"version":1,"checkPoints":[]}