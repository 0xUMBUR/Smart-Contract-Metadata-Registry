{"address":"0xd133be16165c114D3209C5e356997D14617725Cf","name":"","metadata":{"compiler":{"version":"0.5.15+commit.6a57276f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"},{"internalType":"address","name":"_wethToken","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"constant":true,"inputs":[],"name":"UNISWAP_FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tradeOriginator","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"makerToken","type":"address"},{"internalType":"address","name":"takerToken","type":"address"},{"internalType":"uint256","name":"requestedFillAmount","type":"uint256"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"name":"exchange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"makerToken","type":"address"},{"internalType":"address","name":"takerToken","type":"address"},{"internalType":"uint256","name":"desiredMakerToken","type":"uint256"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"name":"getExchangeCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"makerToken","type":"address"},{"internalType":"address","name":"takerToken","type":"address"},{"internalType":"uint256","name":"desiredTakerAmount","type":"uint256"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"name":"getExchangeCostSell","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"suicideMe","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"exchange(address,address,address,address,uint256,bytes)":{"params":{"makerToken":"Address of makerToken, the token to receive","orderData":"Arbitrary bytes data for any information to pass to the exchange","receiver":"Address to set allowance on once the trade has completed","requestedFillAmount":"Amount of takerToken being paid","takerToken":"Address of takerToken, the token to pay"},"return":"The amount of makerToken received"},"getExchangeCost(address,address,uint256,bytes)":{"params":{"desiredMakerToken":"Amount of makerToken requested","makerToken":"Address of makerToken, the token to receive","orderData":"Arbitrary bytes data for any information to pass to the exchange","takerToken":"Address of takerToken, the token to pay"},"return":"Amount of takerToken the needed to complete the transaction"},"getExchangeCostSell(address,address,uint256,bytes)":{"params":{"desiredTakerAmount":"Amount of takerToken required to be sold","makerToken":"Address of makerToken, the token to receive","orderData":"Arbitrary bytes data for any information to pass to the exchange","takerToken":"Address of takerToken, the token to pay"},"return":"Amount of makerToken to receive"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"userdoc":{"methods":{"exchange(address,address,address,address,uint256,bytes)":{"notice":"Exchange some amount of takerToken for makerToken."},"getExchangeCost(address,address,uint256,bytes)":{"notice":"Get amount of takerToken required to buy a certain amount of makerToken for a given trade. Should match the takerToken amount used in exchangeForAmount. If the order cannot provide exactly desiredMakerToken, then it must return the price to buy the minimum amount greater than desiredMakerToken"},"getExchangeCostSell(address,address,uint256,bytes)":{"notice":"Get amount of makerToken to be received for a certain amount of takerTokens."}}}},"settings":{"compilationTarget":{"browser/WrapperFlattened.sol":"UniswapDydxExchangeWrapper"},"evmVersion":"istanbul","libraries":{},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"browser/WrapperFlattened.sol":{"keccak256":"0x10082ea7cccdc73547cb3de9961476a962ede9f40f89db0097ba8e8149f5721c","urls":["bzz-raw://0936848e5ad13b57b01bfd0298110ee038f82bf46dec595e2e139f5b0ec8e705","dweb:/ipfs/Qmb3BjFUZh68Lrwq24LZAwgbymNCREuXRwFFcBtnLwxuUX"]}},"version":1},"version":1,"checkPoints":[]}