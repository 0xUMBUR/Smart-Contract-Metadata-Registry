{"address":"0x42766DD85120758A88c739D0F03f536e22919BBe","name":"","metadata":{"compiler":{"version":"0.8.4+commit.c7e474f2"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"ProxyOwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"impl","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maintenance","outputs":[{"internalType":"bool","name":"_maintenance","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyOwner","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_maintenance","type":"bool"}],"name":"setMaintenance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferProxyOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_implementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract combines an upgradeability proxy with basic authorization control functionalities","events":{"ProxyOwnershipTransferred(address,address)":{"details":"Event to show ownership has been transferred","params":{"newOwner":"representing the address of the new owner","previousOwner":"representing the address of the previous owner"}},"Upgraded(address)":{"details":"This event will be emitted every time the implementation gets upgraded","params":{"implementation":"representing the address of the upgraded implementation"}}},"kind":"dev","methods":{"constructor":{"details":"the constructor sets the original owner of the contract to the sender account."},"implementation()":{"details":"Tells the address of the current implementation","returns":{"impl":"address of the current implementation"}},"maintenance()":{"details":"Tells if contract is on maintenance","returns":{"_maintenance":"if contract is on maintenance"}},"proxyOwner()":{"details":"Tells the address of the owner","returns":{"owner":"the address of the owner"}},"setMaintenance(bool)":{"details":"Sets if contract is on maintenance"},"transferProxyOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"upgradeTo(address)":{"details":"Allows the proxy owner to upgrade the current version of the proxy.","params":{"_implementation":"representing the address of the new implementation to be set."}},"upgradeToAndCall(address,bytes)":{"details":"Allows the proxy owner to upgrade the current version of the proxy and call the new implementation to initialize whatever is needed through a low level call.","params":{"_implementation":"representing the address of the new implementation to be set.","data":"represents the msg.data to bet sent in the low level call. This parameter may include the function signature of the implementation to be called with the needed payload"}}},"title":"OwnedUpgradeabilityProxy","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/safechain/proxy.sol":"OwnedUpgradeabilityProxy"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"contracts/safechain/proxy.sol":{"keccak256":"0xd522be205f6ea68cbf9d0b561145adbb33e0b885d8bc9d5092e793083c01f212","license":"MIT","urls":["bzz-raw://89ed7e78f9efb8348968236b8fdc87f2d69661d5ae59da44aa93403065e0cd6d","dweb:/ipfs/QmNMPJ4vtwXbM64eV8xC1yQ4BDV884pZMAbbXUZ8KxC1P1"]}},"version":1},"version":1,"checkPoints":[]}