{"address":"0x4051F88D4f17B7E7F03F1a1E6C0180355b58D0Bb","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_proxyRegistryAddress","type":"address"},{"internalType":"address","name":"_nftAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"numOptions","type":"uint256"}],"name":"addOptions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"}],"name":"canMint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"},{"internalType":"address","name":"_toAddress","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyRegistryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newNFTAddress","type":"address"}],"name":"setNFTAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"supportsFactoryInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_optionId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addOptions(uint256)":{"details":"Allows adding minting options for future gangs"},"canMint(uint256)":{"details":"Returns whether the option ID can be minted. Can return false if the developer wishes to restrict a total supply per option ID (or overall)."},"mint(uint256,address)":{"details":"Mints asset(s) in accordance to a specific address with a particular \"option\". This should be callable only by the contract owner or the owner's Wyvern Proxy (later universal login will solve this). Options should also be delineated 0 - (numOptions() - 1) for convenient indexing.","params":{"_optionId":"the option id","_toAddress":"address of the future owner of the asset(s)"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"tokenURI(uint256)":{"details":"Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC721 metadata."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"isApprovedForAll(address,address)":{"notice":"Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names."},"name()":{"notice":"Returns the name of this factory."},"numOptions()":{"notice":"Number of options the factory supports."},"ownerOf(uint256)":{"notice":"Hack to get things to work automatically on OpenSea. Use isApprovedForAll so the frontend doesn't have to worry about different method names."},"supportsFactoryInterface()":{"notice":"Indicates that this is a factory contract. Ideally would use EIP 165 supportsInterface()"},"symbol()":{"notice":"Returns the symbol for this factory."},"transferFrom(address,address,uint256)":{"notice":"Hack to get things to work automatically on OpenSea. Use transferFrom so the frontend doesn't have to worry about different method names."}},"version":1}},"settings":{"compilationTarget":{"browser/GangMemberFactory.sol":"GangMemberFactory"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/Address.sol":{"keccak256":"0x67bf2dd5a56395b107ec6ec049d3bc0be559bcd9800c11549fda9603368f4b1a","license":"MIT","urls":["bzz-raw://1bd95d6f0a8757ca62a39b861b35a3b6e8166fcf8b83cbb65150436821b040e0","dweb:/ipfs/QmbfRNRR6cediYriyFQA4SmXTyj8prML12eNuhsbAZU85Q"]},"browser/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","license":"MIT","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"]},"browser/Counters.sol":{"keccak256":"0xe8b1ccfc1dab89d0ab9196940bd712939fc7c88f6996e43436123412834091fe","license":"MIT","urls":["bzz-raw://0fddd88bc946d6d6e59da411ea55ae4822c3801a4929afdf3b19fc9521628a73","dweb:/ipfs/QmS7PNSKV6Q874SGQ4DsK49RUWamUdPPq1xPt76uRn5Eoh"]},"browser/ERC1155.sol":{"keccak256":"0xd93f3426fb8f36075fadef6c7414fe403ce58ec65a43005f38ce4e3d66239977","license":"MIT","urls":["bzz-raw://c1b7dfed4d1e07a8944d9c21d667e322cf7b782d9634ca316549af43046e5402","dweb:/ipfs/QmTHLj8ArV723TvyMWELZRVFg58kiaNg8JMwaLxHY17n2Y"]},"browser/ERC165.sol":{"keccak256":"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90","license":"MIT","urls":["bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468","dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6"]},"browser/GangMember.sol":{"keccak256":"0xba2c86a538cd06bc8ff317bb524e6043fb472ae79a0f38e0d00446cac923ab5e","license":"MIT","urls":["bzz-raw://31ea3285827b105ebb59648550b77a82b0dc628b63a2b669283ed264ff149e8f","dweb:/ipfs/QmV3TbphZkwdZ8Y1pVyXKugA5DA13gyNV8vxKkFF7QyeY7"]},"browser/GangMemberFactory.sol":{"keccak256":"0x1bc098d2a0e5cc52e248573e074f4e0530db0c774eb62571600c06580546642a","license":"MIT","urls":["bzz-raw://23fc1b529128c8721a13fb6b52af91d09a1c930303d845f624a7af363b0c9c3c","dweb:/ipfs/QmbQcxZDN352USCaFqVJ83hfdFBgbyNWq3S2cyNtKqzStR"]},"browser/IERC1155.sol":{"keccak256":"0x2c46e1fbf20c4f4b669599142f96bd56224018404dad1a05f344709cb21a8b7d","license":"MIT","urls":["bzz-raw://3c9e799ae8e6d8a8576936c81ff1f1803dde3c94ecbcbe4e47409be83c987f8c","dweb:/ipfs/Qmcm9wKyoutRDPF8D5YzoMU3B3h6DPp2ZQ8BUqcYDrh9AL"]},"browser/IERC1155MetadataURI.sol":{"keccak256":"0x206d6b9e025fe3dacc44f39010514ea04844fb9c8c99bd39d19357ed07f65111","license":"MIT","urls":["bzz-raw://684cfa17c8fd0073fab3317edd904de460e6092a01e1bf5810e0f63450c8e886","dweb:/ipfs/QmRPwejCSXUTT3nCfPDg8tLRaPQDQnmG2EGrzTJVTxxVr1"]},"browser/IERC1155Receiver.sol":{"keccak256":"0xa79982548780606b0a0bfb36263577d20755b153d4f8d30ace701ae9a0478b17","license":"MIT","urls":["bzz-raw://b70825a9da8df96a54f6ea8584d8fbacc9aa94c490262af09f82ae14e726cd76","dweb:/ipfs/QmNNUwoEXyGbGEfq7jfYaNhNZYzHnEakNUuSQw9pT2bmRT"]},"browser/IERC165.sol":{"keccak256":"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453","license":"MIT","urls":["bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf","dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp"]},"browser/IFactoryERC721.sol":{"keccak256":"0x356efb9262f87d7159780c38595405526fc71aa096cbc90ef23d2d8c58adbfb3","license":"MIT","urls":["bzz-raw://61899fb615dae1fb70bc710dfcffbc5f3038c93e0de47e413ef6ea16873764a3","dweb:/ipfs/QmXaHFHXXFU54vNRsoooj9fycfFxAoCqMK7bi11eo8ezKu"]},"browser/MinterRole.sol":{"keccak256":"0x3303a60d2785d6e9fac123b84c13d1a87cbe8cd3492e9bef568cd1e4fb57cd91","license":"MIT","urls":["bzz-raw://fa50f6c7191191383d2417d57fc9e806418529596815e53a86c96b7555617cf0","dweb:/ipfs/QmTp924UZ7tYzJiZJFbEaTRwERDn1nax6FBzhoVfqwSZ77"]},"browser/Ownable.sol":{"keccak256":"0xec963f42ba8fd6c047b7c3af373a89cb32085004c88b06b39c89e0e40fc88428","license":"MIT","urls":["bzz-raw://c6ec33264dc39b4b1729a1b0f0fb81ade19eeecef80af4415ba499334f7a668c","dweb:/ipfs/QmU9EzaNpZqkDiiBuRUUZrWxAYUVf7SR2JePni5tzBczCj"]},"browser/Roles.sol":{"keccak256":"0xd1b6179aac1bc0e9ce8d24ac0ea99a566896b1ac605879ab4401b17441c9864e","license":"MIT","urls":["bzz-raw://51d6e6cb9932b96c0e44b0b47f0e834ccbed4a4f302992cc2e511af39b10b2c8","dweb:/ipfs/QmcUgTY1Ho7WE2SSGXBnS6wTAuRHmbDb17LKKPPY5h2WfS"]},"browser/SafeMath.sol":{"keccak256":"0xbfb293858ad89c712d8f262e52e75893187456eb98b29f9de9effe25678d59c0","license":"MIT","urls":["bzz-raw://76dad75b69301a9f3c29b01ee89bdf9b5f01c47a3723d205aa1594310ce462f0","dweb:/ipfs/QmWfKHPrxmaeFmQsQ2AAmSCUBfe1DjyJwRiEr4RsPu76Lp"]},"browser/Strings.sol":{"keccak256":"0xf317de767baa91b41f80572b82e3caa5c086e0b7838d230f4b5c0e7c5cc5b23b","license":"MIT","urls":["bzz-raw://1cb06bbe1e0f6567701107b3d8aca8c7166d8a519675af2c0da8c51237a61733","dweb:/ipfs/QmbWDzRhyoirQ3gkJCwPwyefUMDg2pqLY1tRivjUQRYc26"]}},"version":1},"version":1,"checkPoints":[]}