{"address":"0xECc4BED07750eAB7ce1bA634326DB046877524Df","name":"","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address[]","name":"_payees","type":"address[]"},{"internalType":"uint256[]","name":"_share","type":"uint256[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"payee","type":"address"},{"indexed":false,"internalType":"uint256","name":"share","type":"uint256"}],"name":"PayeeAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"payee","type":"address"},{"indexed":false,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"PaymentReleased","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"payees","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_payee","type":"address"},{"internalType":"address","name":"_asset","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_payee","type":"address"}],"name":"releaseEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"share","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalReleased","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract allows to split ERC20 and Ether tokens among a group of accounts. The sender does not need to be aware that the token(s) (payment) will be split in this way, since it is handled transparently by the contract. The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each account to a number of shares. Of all the payment(s) that this contract receives, each account will then be able to claim an amount proportional to the percentage of total shares they were assigned. `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release} or {releaseEther} function.","kind":"dev","methods":{"constructor":{"details":"Creates an instance of `PaymentSplitter` where each account in `_payees` is assigned token(s) at the matching position in the `_share` array. All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no duplicates in `payees`.","params":{"_payees":"-  address(es) of payees eligible to receive token(s)","_share":"- list of shares, transferred to payee in provided ratio."}},"release(address,address)":{"details":"Transfer of ERC20 token(s) to `payee` based on share and their previous withdrawals.","params":{"_asset":"- ERC20 token's address","_payee":"- payee's address to receive token(s)"}},"releaseEther(address)":{"details":"Transfer of ether to `payee` based on share and their previous withdrawals.","params":{"_payee":"- payee's address to receive ether"}}},"title":"PaymentSplitter","version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"browser/PaymentSplitter.sol":"PaymentSplitter"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/PaymentSplitter.sol":{"keccak256":"0x4004c8a46e3bc09b4c1fee244067822f8afbb50ed3746e8d5fd016d4c9a0e8b3","license":"MIT","urls":["bzz-raw://58ce7d188703526d2e2c9aa08f4b17cda7c69a5df305edc4503eb9961dda517d","dweb:/ipfs/QmVB95e9fFxxpMnePQesxZmJknJhnY86xjXGEfryxAeFEh"]}},"version":1},"version":1,"checkPoints":[]}