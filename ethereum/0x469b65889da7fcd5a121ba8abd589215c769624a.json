{"address":"0x469B65889Da7fCd5a121BA8Abd589215c769624a","name":"","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address","name":"pp_","type":"address"},{"internalType":"address","name":"biop_","type":"address"},{"internalType":"address","name":"rateCalc_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"address payable","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"strikePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockedValue","type":"uint256"},{"indexed":false,"internalType":"enum BinaryOptions.OptionType","name":"direction","type":"uint8"}],"name":"Create","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Exercise","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Expire","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"poolLost","type":"uint256"},{"indexed":false,"internalType":"address","name":"winner","type":"address"}],"name":"Payout","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"newPP_","type":"address"}],"name":"addPP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum BinaryOptions.OptionType","name":"type_","type":"uint8"},{"internalType":"address","name":"pp_","type":"address"},{"internalType":"uint256","name":"time_","type":"uint256"}],"name":"bet","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"biop","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"closeStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractCreated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultPriceProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"devFundBetFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"enabledPairs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"exerciserFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"expire","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"expirerFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nextWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"open","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"options","outputs":[{"internalType":"enum BinaryOptions.State","name":"state","type":"uint8"},{"internalType":"address payable","name":"holder","type":"address"},{"internalType":"uint256","name":"strikePrice","type":"uint256"},{"internalType":"uint256","name":"purchaseValue","type":"uint256"},{"internalType":"uint256","name":"lockedValue","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"enum BinaryOptions.OptionType","name":"optionType","type":"uint8"},{"internalType":"address","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLockSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rcAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"oldPP_","type":"address"}],"name":"removePP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMax_","type":"uint256"}],"name":"setMaxTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMin_","type":"uint256"}],"name":"setMinTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRC_","type":"address"}],"name":"setRateCalcAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"thisAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newDevFund","type":"address"}],"name":"transferDevFund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newOwner_","type":"address"}],"name":"transferOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"devFundBetFee_","type":"uint256"}],"name":"updateDevFundBetFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"exerciserFee_","type":"uint256"}],"name":"updateExerciserFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"expirerFee_","type":"uint256"}],"name":"updateExpirerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLockSeconds_","type":"uint256"}],"name":"updatePoolLockSeconds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"github.com/Shalquiana","details":"Pool ETH Tokens and use it for optionss Biop","methods":{"addPP(address)":{"details":"add a price provider to the enabledPairs list","params":{"newPP_":"the address of the AggregatorV3Interface price provider contract address to add."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"bet(uint8,address,uint256)":{"details":"Open a new call or put options.","params":{"pp_":"the address of the price provider to use (must be in the list of enabledPairs)","time_":"the time until your options expiration (must be minTime < time_ > maxTime)","type_":"type of option to buy"}},"closeStaking()":{"details":"used to send this pool into EOL mode when a newer one is open"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"defaultPriceProvider()":{"details":"the default price provider. This is a convenience method"},"exercise(uint256)":{"params":{"optionID":"id of the option to exercise"}},"expire(uint256)":{"params":{"optionID":"id of the option to expire"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"removePP(address)":{"details":"remove a price provider from the enabledPairs list","params":{"oldPP_":"the address of the AggregatorV3Interface price provider contract address to remove."}},"setMaxTime(uint256)":{"details":"update the max time for option bets","params":{"newMax_":"the new maximum time (in seconds) an option may be created for (inclusive)."}},"setMinTime(uint256)":{"details":"update the max time for option bets","params":{"newMin_":"the new minimum time (in seconds) an option may be created for (inclusive)."}},"setRateCalcAddress(address)":{"details":"add a price provider to the enabledPairs list","params":{"newRC_":"the address of the AggregatorV3Interface price provider contract address to add."}},"stake()":{"details":"send ETH to the pool. Recieve pETH token representing your claim. If rewards are available recieve BIOP governance tokens as well."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"thisAddress()":{"details":"address of this contract, convenience method"},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferDevFund(address)":{"details":"used to transfer devfund ","params":{"newDevFund":"the address of governance contract which takes over control"}},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwner(address)":{"details":"used to transfer ownership","params":{"newOwner_":"the address of governance contract which takes over control"}},"updateDevFundBetFee(uint256)":{"details":"set the fee users pay to buy an option","params":{"devFundBetFee_":"the new fee (in tenth percent) to buy an option"}},"updateExerciserFee(uint256)":{"details":"set the fee users can recieve for exercising other users options","params":{"exerciserFee_":"the new fee (in tenth percent) for exercising a options itm"}},"updateExpirerFee(uint256)":{"details":"set the fee users can recieve for expiring other users options","params":{"expirerFee_":"the new fee (in tenth percent) for expiring a options"}},"updatePoolLockSeconds(uint256)":{"details":"update the pool stake lock up time.","params":{"newLockSeconds_":"the new lock time, in seconds"}},"withdraw(uint256)":{"details":"recieve ETH from the pool.  If the current time is before your next available withdraw a 1% fee will be applied.","params":{"amount":"The amount of pETH to send the pool."}}},"title":"Binary Options Eth Pool"},"userdoc":{"methods":{"exercise(uint256)":{"notice":"exercises a option"},"expire(uint256)":{"notice":"expires a option"}}}},"settings":{"compilationTarget":{"browser/BinaryOptions.sol":"BinaryOptions"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"browser/BIOPToken.sol":{"keccak256":"0xde0c214ba02fbd66be4192d1f5d068ae5afa26c765876c8b11806955ceb750d3","urls":["bzz-raw://0eac97d69b4ca570d69c272ea8071dbbe7e1db8d97abd9c1a3b0477fd936f555","dweb:/ipfs/QmVvBsDHMDNsQpFCdU3zP3D8im6Dv1HZXMeghU4qip4gL9"]},"browser/BinaryOptions.sol":{"keccak256":"0x6b3f02b4d60cfd0d8c160d84eb7bf5d0b459ad7052114e97dc4cb374e7195ac1","urls":["bzz-raw://6673449d2cfade5c9e90987e1e2d9c75cf5895af4c97d0a4ac752b7e09d0a1f3","dweb:/ipfs/QmesYurcvE9Wmpcr8cCtkk5NSGXSJmMGjcoeFjRdwBTLJx"]},"browser/RateCalc.sol":{"keccak256":"0x64add7c03989ea00f51831a5ee96590869890b45ae5ae3e575edb6c2c5f11a36","urls":["bzz-raw://0857f71328241dd983ab685a0002cbfcd0ffc6bcbe09b75f4362bf0d58c4c2ef","dweb:/ipfs/QmQLQEA1DqJbrZcMDQRsMWD3jEvc2ZzjfgX7CXB6mDqGGj"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol":{"keccak256":"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6","urls":["bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe","dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538","urls":["bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca","dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR"]},"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5","urls":["bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08","dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"]}},"version":1},"version":1,"checkPoints":[]}